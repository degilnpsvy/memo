<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: gobject, Page: API Reference.. Table of Contents.. .. Type Information é–?The GLib Runtime type identification and management system .. GTypePlugin é–?An interface for dynamically loadable ...">
<meta http-equiv="keywords" content="SuperMemo, gobject, API Reference.. Table of Contents.. .. Type Information é–?The GLib Runtime type identification and management system .. GTypePlugin é–?An interface for dynamically loadable ...">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 14.04)">
<title>gobject: API Reference.. Table of ... (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">gobject: API Reference.. Table of ... </font></b><br>(14 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="23091.htm"> - Next</a> - <a href="23859.htm">Previous</a> - <a href="index.htm">Parent</a> - <a href="23091.htm">Next sibling</a> - <a href="23859.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">GObject Reference Manual.. .. for GObject 2.52.0 The latest version of this documentation can be found on-line at https://developer.gnome.org/gobject/unstable/.</a></li>
<ul>
<li>This page: API Reference.. Table of Contents.. .. Type Information é–?The GLib Runtime type identification and management system .. GTypePlugin é–?An interface for dynamically loadable ...</li>
<ol>
<li>Type Information.. Type Information éˆ?The GLib Runtime type identification and management system.. .. Functions.. #defineG_TYPE_FUNDAMENTAL() .. #defineG_TYPE_MAKE ... (see <a href="#28673">below)</a>
<li>GTypePlugin.. GTypePlugin éˆ?An interface for dynamically loadable types.. .. Functions.. void (*GTypePluginUse) () .. void (*GTypePluginUnuse) () .. void ... (see <a href="#23219">below)</a>
<li>GTypeModule.. GTypeModule éˆ?Type loading modules.. .. Functions.. gboolean g_type_module_use () .. void g_type_module_unuse () .. void g_type_module_set_name () .. GType g_type ... (see <a href="#23179">below)</a>
<li>GObject.. GObject éˆ?The base object type.. .. Functions.. void (*GObjectGetPropertyFunc) () .. void (*GObjectSetPropertyFunc) () .. void (*GObjectFinalizeFunc) () .. #defineG ... (see <a href="#28674">below)</a>
<li>Enumeration and Flag Types.. Enumeration and Flag Types éˆ?Enumeration and flags types.. .. Functions.. #defineG_ENUM_CLASS_TYPE() .. #defineG_ENUM_CLASS_TYPE_NAME() .. ... (see <a href="#28675">below)</a>
<li>Boxed Types.. Boxed Types éˆ?A mechanism to wrap opaque C structures registered by the type system.. .. Functions.. gpointer (*GBoxedCopyFunc) () .. void (*GBoxedFreeFunc) () ... (see <a href="#28676">below)</a>
<li>Generic values.. Generic values éˆ?A polymorphic type that can hold values of any other type.. .. Functions.. #defineG_VALUE_HOLDS() .. #defineG_VALUE_TYPE() .. #defineG_VALUE ... (see <a href="#28677">below)</a>
<li>Parameters and Values.. Parameters and Values éˆ?Standard Parameter and Value Types.. .. Functions.. #defineG_IS_PARAM_SPEC_BOOLEAN() .. #defineG_PARAM_SPEC_BOOLEAN() .. ... (see <a href="#28678">below)</a>
<li>GParamSpec.. GParamSpec éˆ?Metadata for parameter specifications.. .. Functions.. #defineG_TYPE_IS_PARAM() .. #defineG_PARAM_SPEC() .. #defineG_IS_PARAM_SPEC() .. #defineG ... (see <a href="#28679">below)</a>
<li>Varargs Value Collection.. Varargs Value Collection éˆ?Converting varargs to generic values.. .. Functions.. #defineG_VALUE_COLLECT_INIT() .. #defineG_VALUE_COLLECT() .. ... (see <a href="#28680">below)</a>
<li>Signals.. Signals éˆ?A means for customization of object behaviour and a general purpose notification mechanism.. .. Functions.. gboolean (*GSignalAccumulator) () .. gboolean ... (see <a href="#28681">below)</a>
<li>Closures.. Closures éˆ?Functions as first-class objects.. .. Functions.. #defineG_CLOSURE_NEEDS_MARSHAL() .. #defineG_CLOSURE_N_NOTIFIERS() .. #defineG_CCLOSURE_SWAP_DATA() ... (see <a href="#24147">below)</a>
<li>Value arrays.. Value arrays éˆ?A container structure to maintain an array of generic values.. .. Functions.. GValue * g_value_array_get_nth () .. GValueArray * g_value_array ... (see <a href="#28682">below)</a>
<li>GBinding.. GBinding éˆ?Bind two object properties.. .. Functions.. GObject * g_binding_get_source () .. const gchar * g_binding_get_source_property () .. GObject * g_binding_get ... (see <a href="#28683">below)</a>
</ol>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<div align="center">
<center>
<table border="4" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFFF00" bordercolor="#FF0000">
<tr>
<td>
<b>Subject: Topic #28672: API Reference.. Table of Contents.. .. Type Information &#38337;?The GLib Runtime type identification and management system .. GTypePlugin &#38337;?An interface for dynamically loadable ...</b><p>
</td>
</tr>
<tr>
<td bordercolor="#FFCC00">
<DIV class=titlepage>
<DIV>
<DIV>
<H1 class=title>API Reference</H1></DIV></DIV>
<HR>
</DIV>
<DIV class=toc>
<P><B>Table of Contents</B></P>
<DL class=toc>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html">Type Information</A></SPAN><SPAN class=refpurpose> &#8212; The GLib Runtime type identification and management system</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/GTypePlugin.html">GTypePlugin</A></SPAN><SPAN class=refpurpose> &#8212; An interface for dynamically loadable types</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/GTypeModule.html">GTypeModule</A></SPAN><SPAN class=refpurpose> &#8212; Type loading modules</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html">GObject</A></SPAN><SPAN class=refpurpose> &#8212; The base object type</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html">Enumeration and Flag Types</A></SPAN><SPAN class=refpurpose> &#8212; Enumeration and flags types</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html">Boxed Types</A></SPAN><SPAN class=refpurpose> &#8212; A mechanism to wrap opaque C structures registered by the type system</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html">Generic values</A></SPAN><SPAN class=refpurpose> &#8212; A polymorphic type that can hold values of any other type</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html">Parameters and Values</A></SPAN><SPAN class=refpurpose> &#8212; Standard Parameter and Value Types</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html">GParamSpec</A></SPAN><SPAN class=refpurpose> &#8212; Metadata for parameter specifications</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html">Varargs Value Collection</A></SPAN><SPAN class=refpurpose> &#8212; Converting varargs to generic values</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Signals.html">Signals</A></SPAN><SPAN class=refpurpose> &#8212; A means for customization of object behaviour and a general purpose notification mechanism</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html">Closures</A></SPAN><SPAN class=refpurpose> &#8212; Functions as first-class objects</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html">Value arrays</A></SPAN><SPAN class=refpurpose> &#8212; A container structure to maintain an array of generic values</SPAN> </DT>
<DT><SPAN class=refentrytitle><A href="https://developer.gnome.org/gobject/stable/GBinding.html">GBinding</A></SPAN><SPAN class=refpurpose> &#8212; Bind two object properties</SPAN> </DT></DL></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28673">Topic #28673: Type Information.. Type Information &#38323;?The GLib Runtime type identification and management system.. .. Functions.. #defineG_TYPE_FUNDAMENTAL() .. #defineG_TYPE_MAKE ...</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Type Information</SPAN></H2>
<P>Type Information &#8212; The GLib Runtime type identification and management system</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Type-Information.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FUNDAMENTAL:CAPS">G_TYPE_FUNDAMENTAL</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_MAKE_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-MAKE-FUNDAMENTAL:CAPS">G_TYPE_MAKE_FUNDAMENTAL</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_ABSTRACT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-ABSTRACT:CAPS">G_TYPE_IS_ABSTRACT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_DERIVED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-DERIVED:CAPS">G_TYPE_IS_DERIVED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-FUNDAMENTAL:CAPS">G_TYPE_IS_FUNDAMENTAL</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_VALUE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-VALUE-TYPE:CAPS">G_TYPE_IS_VALUE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_HAS_VALUE_TABLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-HAS-VALUE-TABLE:CAPS">G_TYPE_HAS_VALUE_TABLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_CLASSED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-CLASSED:CAPS">G_TYPE_IS_CLASSED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_INSTANTIATABLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-INSTANTIATABLE:CAPS">G_TYPE_IS_INSTANTIATABLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_DERIVABLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-DERIVABLE:CAPS">G_TYPE_IS_DERIVABLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_DEEP_DERIVABLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-DEEP-DERIVABLE:CAPS">G_TYPE_IS_DEEP_DERIVABLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-IS-INTERFACE:CAPS">G_TYPE_IS_INTERFACE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FROM_INSTANCE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FROM-INSTANCE:CAPS">G_TYPE_FROM_INSTANCE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FROM_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FROM-CLASS:CAPS">G_TYPE_FROM_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FROM_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FROM-INTERFACE:CAPS">G_TYPE_FROM_INTERFACE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INSTANCE_GET_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-CLASS:CAPS">G_TYPE_INSTANCE_GET_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INSTANCE_GET_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-INTERFACE:CAPS">G_TYPE_INSTANCE_GET_INTERFACE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INSTANCE_GET_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-PRIVATE:CAPS">G_TYPE_INSTANCE_GET_PRIVATE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CLASS_GET_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CLASS-GET-PRIVATE:CAPS">G_TYPE_CLASS_GET_PRIVATE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_INSTANCE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-INSTANCE:CAPS">G_TYPE_CHECK_INSTANCE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_INSTANCE_CAST() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-INSTANCE-CAST:CAPS">G_TYPE_CHECK_INSTANCE_CAST</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_INSTANCE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-INSTANCE-TYPE:CAPS">G_TYPE_CHECK_INSTANCE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-INSTANCE-FUNDAMENTAL-TYPE:CAPS">G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_CLASS_CAST() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-CLASS-CAST:CAPS">G_TYPE_CHECK_CLASS_CAST</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_CLASS_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-CLASS-TYPE:CAPS">G_TYPE_CHECK_CLASS_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_VALUE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-VALUE:CAPS">G_TYPE_CHECK_VALUE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECK_VALUE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECK-VALUE-TYPE:CAPS">G_TYPE_CHECK_VALUE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-init">g_type_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_init_with_debug_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-init-with-debug-flags">g_type_init_with_debug_flags</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-name">g_type_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=returnvalue>GQuark</SPAN></A> </TD>
<TD class=function_name><A title=g_type_qname&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-qname">g_type_qname</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_from_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-from-name">g_type_from_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_parent&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-parent">g_type_parent</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_type_depth&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-depth">g_type_depth</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_next_base&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-next-base">g_type_next_base</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_type_is_a&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-is-a">g_type_is_a</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_class_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-ref">g_type_class_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_class_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-peek">g_type_class_peek</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_class_peek_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-peek-static">g_type_class_peek_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_class_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref">g_type_class_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_class_peek_parent&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-peek-parent">g_type_class_peek_parent</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_class_add_private&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-add-private">g_type_class_add_private</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_add_class_private&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-class-private">g_type_add_class_private</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_interface_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interface-peek">g_type_interface_peek</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_interface_peek_parent&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interface-peek-parent">g_type_interface_peek_parent</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref">g_type_default_interface_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_default_interface_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-peek">g_type_default_interface_peek</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_default_interface_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-unref">g_type_default_interface_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_children&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-children">g_type_children</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_interfaces&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interfaces">g_type_interfaces</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_interface_prerequisites&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interface-prerequisites">g_type_interface_prerequisites</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-set-qdata">g_type_set_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_type_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-get-qdata">g_type_get_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_query&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-query">g_type_query</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc">*GBaseInitFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GBaseFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseFinalizeFunc">*GBaseFinalizeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc">*GClassInitFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GClassFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassFinalizeFunc">*GClassFinalizeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GInstanceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInstanceInitFunc">*GInstanceInitFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GInterfaceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInitFunc">*GInterfaceInitFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GInterfaceFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceFinalizeFunc">*GInterfaceFinalizeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc">*GTypeClassCacheFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static">g_type_register_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_register_static_simple&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static-simple">g_type_register_static_simple</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_register_dynamic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-dynamic">g_type_register_dynamic</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_register_fundamental&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-fundamental">g_type_register_fundamental</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_add_interface_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-static">g_type_add_interface_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_add_interface_dynamic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-dynamic">g_type_add_interface_dynamic</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_interface_add_prerequisite&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interface-add-prerequisite">g_type_interface_add_prerequisite</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=returnvalue>GTypePlugin</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_get_plugin&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-get-plugin">g_type_get_plugin</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=returnvalue>GTypePlugin</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_interface_get_plugin&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interface-get-plugin">g_type_interface_get_plugin</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_fundamental_next&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-fundamental-next">g_type_fundamental_next</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_fundamental&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-fundamental">g_type_fundamental</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=returnvalue>GTypeInstance</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_create_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-create-instance">g_type_create_instance</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_free_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-free-instance">g_type_free_instance</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_add_class_cache_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-class-cache-func">g_type_add_class_cache_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_remove_class_cache_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-remove-class-cache-func">g_type_remove_class_cache_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_class_unref_uncached&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref-uncached">g_type_class_unref_uncached</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_add_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-check">g_type_add_interface_check</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_remove_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-remove-interface-check">g_type_remove_interface_check</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GTypeInterfaceCheckFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterfaceCheckFunc">*GTypeInterfaceCheckFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=returnvalue>GTypeValueTable</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_type_value_table_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-value-table-peek">g_type_value_table_peek</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_ensure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-ensure">g_type_ensure</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_type_get_type_registration_serial&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-get-type-registration-serial">g_type_get_type_registration_serial</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>int</SPAN> </TD>
<TD class=function_name><A title=g_type_get_instance_count&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-get-instance-count">g_type_get_instance_count</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DECLARE_FINAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS">G_DECLARE_FINAL_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DECLARE_DERIVABLE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS">G_DECLARE_DERIVABLE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DECLARE_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-INTERFACE:CAPS">G_DECLARE_INTERFACE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE:CAPS">G_DEFINE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_TYPE_WITH_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-PRIVATE:CAPS">G_DEFINE_TYPE_WITH_PRIVATE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-CODE:CAPS">G_DEFINE_TYPE_WITH_CODE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_ABSTRACT_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-ABSTRACT-TYPE:CAPS">G_DEFINE_ABSTRACT_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-ABSTRACT-TYPE-WITH-PRIVATE:CAPS">G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_ABSTRACT_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-ABSTRACT-TYPE-WITH-CODE:CAPS">G_DEFINE_ABSTRACT_TYPE_WITH_CODE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_ADD_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-ADD-PRIVATE:CAPS">G_ADD_PRIVATE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PRIVATE_OFFSET() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-PRIVATE-OFFSET:CAPS">G_PRIVATE_OFFSET</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PRIVATE_FIELD() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-PRIVATE-FIELD:CAPS">G_PRIVATE_FIELD</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PRIVATE_FIELD_P() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-PRIVATE-FIELD-P:CAPS">G_PRIVATE_FIELD_P</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-INTERFACE:CAPS">G_DEFINE_INTERFACE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_INTERFACE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-INTERFACE-WITH-CODE:CAPS">G_DEFINE_INTERFACE_WITH_CODE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IMPLEMENT_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-IMPLEMENT-INTERFACE:CAPS">G_IMPLEMENT_INTERFACE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS">G_DEFINE_TYPE_EXTENDED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_BOXED_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-BOXED-TYPE:CAPS">G_DEFINE_BOXED_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_BOXED_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-BOXED-TYPE-WITH-CODE:CAPS">G_DEFINE_BOXED_TYPE_WITH_CODE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_POINTER_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-POINTER-TYPE:CAPS">G_DEFINE_POINTER_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_POINTER_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-POINTER-TYPE-WITH-CODE:CAPS">G_DEFINE_POINTER_TYPE_WITH_CODE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Type-Information.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType">GType</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FUNDAMENTAL_MAX class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FUNDAMENTAL-MAX:CAPS">G_TYPE_FUNDAMENTAL_MAX</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface">GTypeInterface</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance">GTypeInstance</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass">GTypeClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo">GTypeInfo</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeFundamentalInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalInfo">GTypeFundamentalInfo</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo">GInterfaceInfo</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable">GTypeValueTable</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FLAG_RESERVED_ID_BIT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAG-RESERVED-ID-BIT:CAPS">G_TYPE_FLAG_RESERVED_ID_BIT</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GTypeDebugFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeDebugFlags">GTypeDebugFlags</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeQuery">GTypeQuery</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags">GTypeFlags</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GTypeFundamentalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalFlags">GTypeFundamentalFlags</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INVALID class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INVALID:CAPS">G_TYPE_INVALID</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS">G_TYPE_NONE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INTERFACE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INTERFACE:CAPS">G_TYPE_INTERFACE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS">G_TYPE_CHAR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS">G_TYPE_UCHAR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS">G_TYPE_BOOLEAN</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS">G_TYPE_INT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS">G_TYPE_UINT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS">G_TYPE_LONG</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS">G_TYPE_ULONG</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS">G_TYPE_INT64</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS">G_TYPE_UINT64</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS">G_TYPE_ENUM</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS">G_TYPE_FLAGS</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS">G_TYPE_FLOAT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS">G_TYPE_DOUBLE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS">G_TYPE_STRING</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-POINTER:CAPS">G_TYPE_POINTER</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS">G_TYPE_BOXED</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS">G_TYPE_PARAM</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS">G_TYPE_OBJECT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS">G_TYPE_GTYPE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS">G_TYPE_VARIANT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CHECKSUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHECKSUM:CAPS">G_TYPE_CHECKSUM</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_RESERVED_GLIB_FIRST class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-RESERVED-GLIB-FIRST:CAPS">G_TYPE_RESERVED_GLIB_FIRST</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_RESERVED_GLIB_LAST class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-RESERVED-GLIB-LAST:CAPS">G_TYPE_RESERVED_GLIB_LAST</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_RESERVED_BSE_FIRST class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-RESERVED-BSE-FIRST:CAPS">G_TYPE_RESERVED_BSE_FIRST</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_RESERVED_BSE_LAST class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-RESERVED-BSE-LAST:CAPS">G_TYPE_RESERVED_BSE_LAST</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_RESERVED_USER_FIRST class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-RESERVED-USER-FIRST:CAPS">G_TYPE_RESERVED_USER_FIRST</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Type-Information.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Type-Information.description></A>
<H2>Description</H2>
<P>The GType API is the foundation of the GObject system. It provides the facilities for registering and managing all fundamental data types, user-defined object and interface types.</P>
<P>For type creation and registration purposes, all types fall into one of two categories: static or dynamic. Static types are never loaded or unloaded at run-time as dynamic types may be. Static types are created with <A title=g_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static"><CODE class=function>g_type_register_static()</CODE></A> that gets type specific information passed in via a <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure.</P>
<P>Dynamic types are created with <A title=g_type_register_dynamic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-dynamic"><CODE class=function>g_type_register_dynamic()</CODE></A> which takes a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure instead. The remaining type information (the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure) is retrieved during runtime through <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> and the g_type_plugin_*() API.</P>
<P>These registration functions are usually called only once from a function whose only purpose is to return the type identifier for a specific class. Once the type (or class or interface) is registered, it may be instantiated, inherited, or implemented depending on exactly what sort of type it is.</P>
<P>There is also a third registration function for registering fundamental types called <A title=g_type_register_fundamental&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-fundamental"><CODE class=function>g_type_register_fundamental()</CODE></A> which requires both a <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure and a <A title="struct GTypeFundamentalInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalInfo"><SPAN class=type>GTypeFundamentalInfo</SPAN></A> structure but it is seldom used since most fundamental types are predefined rather than user-defined.</P>
<P>Type instance and class structs are limited to a total of 64 KiB, including all parent types. Similarly, type instances' private data (as created by <A title=g_type_class_add_private&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-add-private"><CODE class=function>g_type_class_add_private()</CODE></A>) are limited to a total of 64 KiB. If a type instance needs a large static buffer, allocate it separately (typically by using <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> or <A href="https://developer.gnome.org/gobject/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A>) and put a pointer to the buffer in the structure.</P>
<P>As mentioned in the <A title=Conventions class=link href="https://developer.gnome.org/gobject/stable/gtype-conventions.html">GType conventions</A>, type names must be at least three characters long. There is no upper length limit. The first character must be a letter (a&#8211;z or A&#8211;Z) or an underscore (&#8216;_&#8217;). Subsequent characters can be letters, numbers or any of &#8216;-_+&#8217;.</P></DIV>
<DIV class=refsect1><A name=gobject-Type-Information.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-TYPE-FUNDAMENTAL:CAPS></A>
<H3>G_TYPE_FUNDAMENTAL()</H3><PRE class=programlisting>#define G_TYPE_FUNDAMENTAL(type)&nbsp;(g_type_fundamental (type))
</PRE>
<P>The fundamental type which is the ancestor of <EM class=parameter><CODE>type</CODE></EM> . Fundamental types are types that serve as ultimate bases for the derived types, thus they are the roots of distinct inheritance hierarchies.</P>
<DIV class=refsect3><A name=G-TYPE-FUNDAMENTAL.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-MAKE-FUNDAMENTAL:CAPS></A>
<H3>G_TYPE_MAKE_FUNDAMENTAL()</H3><PRE class=programlisting>#define&nbsp;G_TYPE_MAKE_FUNDAMENTAL(x)&nbsp;((GType) ((x) &lt;&lt; G_TYPE_FUNDAMENTAL_SHIFT))
</PRE>
<P>Get the type ID for the fundamental type number <EM class=parameter><CODE>x</CODE></EM> . Use <A title=g_type_fundamental_next&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-fundamental-next"><CODE class=function>g_type_fundamental_next()</CODE></A> instead of this macro to create new fundamental types.</P>
<DIV class=refsect3><A name=G-TYPE-MAKE-FUNDAMENTAL.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>x</P></TD>
<TD class=parameter_description>
<P>the fundamental type number.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-MAKE-FUNDAMENTAL.returns></A>
<H4>Returns</H4>
<P>the GType</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-ABSTRACT:CAPS></A>
<H3>G_TYPE_IS_ABSTRACT()</H3><PRE class=programlisting>#define G_TYPE_IS_ABSTRACT(type)                (g_type_test_flags ((type), G_TYPE_FLAG_ABSTRACT))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is an abstract type. An abstract type cannot be instantiated and is normally used as an abstract base class for derived classes.</P>
<DIV class=refsect3><A name=G-TYPE-IS-ABSTRACT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-ABSTRACT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-DERIVED:CAPS></A>
<H3>G_TYPE_IS_DERIVED()</H3><PRE class=programlisting>#define G_TYPE_IS_DERIVED(type)                 ((type) &gt; G_TYPE_FUNDAMENTAL_MAX)
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is derived (or in object-oriented terminology: inherited) from another type (this holds true for all non-fundamental types).</P>
<DIV class=refsect3><A name=G-TYPE-IS-DERIVED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-DERIVED.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-FUNDAMENTAL:CAPS></A>
<H3>G_TYPE_IS_FUNDAMENTAL()</H3><PRE class=programlisting>#define G_TYPE_IS_FUNDAMENTAL(type)             ((type) &lt;= G_TYPE_FUNDAMENTAL_MAX)
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is a fundamental type.</P>
<DIV class=refsect3><A name=G-TYPE-IS-FUNDAMENTAL.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-FUNDAMENTAL.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-VALUE-TYPE:CAPS></A>
<H3>G_TYPE_IS_VALUE_TYPE()</H3><PRE class=programlisting>#define G_TYPE_IS_VALUE_TYPE(type)              (g_type_check_is_value_type (type))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is a value type and can be used with <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A>.</P>
<DIV class=refsect3><A name=G-TYPE-IS-VALUE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-VALUE-TYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-HAS-VALUE-TABLE:CAPS></A>
<H3>G_TYPE_HAS_VALUE_TABLE()</H3><PRE class=programlisting>#define G_TYPE_HAS_VALUE_TABLE(type)            (g_type_value_table_peek (type) != NULL)
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> has a <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A>.</P>
<DIV class=refsect3><A name=G-TYPE-HAS-VALUE-TABLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-HAS-VALUE-TABLE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-CLASSED:CAPS></A>
<H3>G_TYPE_IS_CLASSED()</H3><PRE class=programlisting>#define G_TYPE_IS_CLASSED(type)                 (g_type_test_flags ((type), G_TYPE_FLAG_CLASSED))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is a classed type.</P>
<DIV class=refsect3><A name=G-TYPE-IS-CLASSED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-CLASSED.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-INSTANTIATABLE:CAPS></A>
<H3>G_TYPE_IS_INSTANTIATABLE()</H3><PRE class=programlisting>#define G_TYPE_IS_INSTANTIATABLE(type)          (g_type_test_flags ((type), G_TYPE_FLAG_INSTANTIATABLE))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> can be instantiated. Instantiation is the process of creating an instance (object) of this type.</P>
<DIV class=refsect3><A name=G-TYPE-IS-INSTANTIATABLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-INSTANTIATABLE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-DERIVABLE:CAPS></A>
<H3>G_TYPE_IS_DERIVABLE()</H3><PRE class=programlisting>#define G_TYPE_IS_DERIVABLE(type)               (g_type_test_flags ((type), G_TYPE_FLAG_DERIVABLE))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is a derivable type. A derivable type can be used as the base class of a flat (single-level) class hierarchy.</P>
<DIV class=refsect3><A name=G-TYPE-IS-DERIVABLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-DERIVABLE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-DEEP-DERIVABLE:CAPS></A>
<H3>G_TYPE_IS_DEEP_DERIVABLE()</H3><PRE class=programlisting>#define G_TYPE_IS_DEEP_DERIVABLE(type)          (g_type_test_flags ((type), G_TYPE_FLAG_DEEP_DERIVABLE))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is a deep derivable type. A deep derivable type can be used as the base class of a deep (multi-level) class hierarchy.</P>
<DIV class=refsect3><A name=G-TYPE-IS-DEEP-DERIVABLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-DEEP-DERIVABLE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-INTERFACE:CAPS></A>
<H3>G_TYPE_IS_INTERFACE()</H3><PRE class=programlisting>#define G_TYPE_IS_INTERFACE(type)               (G_TYPE_FUNDAMENTAL (type) == G_TYPE_INTERFACE)
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is an interface type. An interface type provides a pure API, the implementation of which is provided by another type (which is then said to conform to the interface). GLib interfaces are somewhat analogous to Java interfaces and C++ classes containing only pure virtual functions, with the difference that GType interfaces are not derivable (but see <A title=g_type_interface_add_prerequisite&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-interface-add-prerequisite"><CODE class=function>g_type_interface_add_prerequisite()</CODE></A> for an alternative).</P>
<DIV class=refsect3><A name=G-TYPE-IS-INTERFACE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-INTERFACE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FROM-INSTANCE:CAPS></A>
<H3>G_TYPE_FROM_INSTANCE()</H3><PRE class=programlisting>#define G_TYPE_FROM_INSTANCE(instance)                          (G_TYPE_FROM_CLASS (((GTypeInstance*) (instance))-&gt;g_class))
</PRE>
<P>Get the type identifier from a given <EM class=parameter><CODE>instance</CODE></EM> structure. </P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-FROM-INSTANCE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of a valid <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-FROM-INSTANCE.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FROM-CLASS:CAPS></A>
<H3>G_TYPE_FROM_CLASS()</H3><PRE class=programlisting>#define G_TYPE_FROM_CLASS(g_class)                              (((GTypeClass*) (g_class))-&gt;g_type)
</PRE>
<P>Get the type identifier from a given <EM class=parameter><CODE>class</CODE></EM> structure.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-FROM-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>Location of a valid <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-FROM-CLASS.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FROM-INTERFACE:CAPS></A>
<H3>G_TYPE_FROM_INTERFACE()</H3><PRE class=programlisting>#define G_TYPE_FROM_INTERFACE(g_iface)                          (((GTypeInterface*) (g_iface))-&gt;g_type)
</PRE>
<P>Get the type identifier from a given <EM class=parameter><CODE>interface</CODE></EM> structure.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-FROM-INTERFACE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>Location of a valid <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-FROM-INTERFACE.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INSTANCE-GET-CLASS:CAPS></A>
<H3>G_TYPE_INSTANCE_GET_CLASS()</H3><PRE class=programlisting>#define G_TYPE_INSTANCE_GET_CLASS(instance, g_type, c_type)     (_G_TYPE_IGC ((instance), (g_type), c_type))
</PRE>
<P>Get the class structure of a given <EM class=parameter><CODE>instance</CODE></EM> , casted to a specified ancestor type <EM class=parameter><CODE>g_type</CODE></EM> of the instance.</P>
<P>Note that while calling a <A title=GInstanceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInstanceInitFunc"><CODE class=function>GInstanceInitFunc()</CODE></A>, the class pointer gets modified, so it might not always return the expected pointer.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-INSTANCE-GET-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of the <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the class to be returned</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_type</P></TD>
<TD class=parameter_description>
<P>The C type of the class structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-INSTANCE-GET-CLASS.returns></A>
<H4>Returns</H4>
<P>a pointer to the class structure</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INSTANCE-GET-INTERFACE:CAPS></A>
<H3>G_TYPE_INSTANCE_GET_INTERFACE()</H3><PRE class=programlisting>#define G_TYPE_INSTANCE_GET_INTERFACE(instance, g_type, c_type) (_G_TYPE_IGI ((instance), (g_type), c_type))
</PRE>
<P>Get the interface structure for interface <EM class=parameter><CODE>g_type</CODE></EM> of a given <EM class=parameter><CODE>instance</CODE></EM> .</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-INSTANCE-GET-INTERFACE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of the <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the interface to be returned</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_type</P></TD>
<TD class=parameter_description>
<P>The C type of the interface structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-INSTANCE-GET-INTERFACE.returns></A>
<H4>Returns</H4>
<P>a pointer to the interface structure</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INSTANCE-GET-PRIVATE:CAPS></A>
<H3>G_TYPE_INSTANCE_GET_PRIVATE()</H3><PRE class=programlisting>#define G_TYPE_INSTANCE_GET_PRIVATE(instance, g_type, c_type)   ((c_type*) g_type_instance_get_private ((GTypeInstance*) (instance), (g_type)))
</PRE>
<P>Gets the private structure for a particular type. The private structure must have been registered in the class_init function with <A title=g_type_class_add_private&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-add-private"><CODE class=function>g_type_class_add_private()</CODE></A>.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-INSTANCE-GET-PRIVATE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance of a type deriving from <EM class=parameter><CODE>private_type</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>the type identifying which private data to retrieve</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_type</P></TD>
<TD class=parameter_description>
<P>The C type for the private structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-INSTANCE-GET-PRIVATE.returns></A>
<H4>Returns</H4>
<P>a pointer to the private data structure. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CLASS-GET-PRIVATE:CAPS></A>
<H3>G_TYPE_CLASS_GET_PRIVATE()</H3><PRE class=programlisting>#define G_TYPE_CLASS_GET_PRIVATE(klass, g_type, c_type)   ((c_type*) g_type_class_get_private ((GTypeClass*) (klass), (g_type)))
</PRE>
<P>Gets the private class structure for a particular type. The private structure must have been registered in the <CODE class=function>get_type()</CODE> function with <A title=g_type_add_class_private&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-class-private"><CODE class=function>g_type_add_class_private()</CODE></A>.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CLASS-GET-PRIVATE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>klass</P></TD>
<TD class=parameter_description>
<P>the class of a type deriving from <EM class=parameter><CODE>private_type</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>the type identifying which private data to retrieve</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_type</P></TD>
<TD class=parameter_description>
<P>The C type for the private structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CLASS-GET-PRIVATE.returns></A>
<H4>Returns</H4>
<P>a pointer to the private data structure. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-INSTANCE:CAPS></A>
<H3>G_TYPE_CHECK_INSTANCE()</H3><PRE class=programlisting>#define G_TYPE_CHECK_INSTANCE(instance)				(_G_TYPE_CHI ((GTypeInstance*) (instance)))
</PRE>
<P>Checks if <EM class=parameter><CODE>instance</CODE></EM> is a valid <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure, otherwise issues a warning and returns <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>. <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is not a valid <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A>.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of a <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-INSTANCE-CAST:CAPS></A>
<H3>G_TYPE_CHECK_INSTANCE_CAST()</H3><PRE class=programlisting>#define G_TYPE_CHECK_INSTANCE_CAST(instance, g_type, c_type)    (_G_TYPE_CIC ((instance), (g_type), c_type))
</PRE>
<P>Checks that <EM class=parameter><CODE>instance</CODE></EM> is an instance of the type identified by <EM class=parameter><CODE>g_type</CODE></EM> and issues a warning if this is not the case. Returns <EM class=parameter><CODE>instance</CODE></EM> casted to a pointer to <EM class=parameter><CODE>c_type</CODE></EM> .</P>
<P>No warning will be issued if <EM class=parameter><CODE>instance</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, and <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> will be returned.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE-CAST.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of a <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The type to be returned</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_type</P></TD>
<TD class=parameter_description>
<P>The corresponding C type of <EM class=parameter><CODE>g_type</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-INSTANCE-TYPE:CAPS></A>
<H3>G_TYPE_CHECK_INSTANCE_TYPE()</H3><PRE class=programlisting>#define G_TYPE_CHECK_INSTANCE_TYPE(instance, g_type)            (_G_TYPE_CIT ((instance), (g_type)))
</PRE>
<P>Checks if <EM class=parameter><CODE>instance</CODE></EM> is an instance of the type identified by <EM class=parameter><CODE>g_type</CODE></EM> . If <EM class=parameter><CODE>instance</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> will be returned.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of a <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The type to be checked</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE-TYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-INSTANCE-FUNDAMENTAL-TYPE:CAPS></A>
<H3>G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE()</H3><PRE class=programlisting>#define G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE(instance, g_type)            (_G_TYPE_CIFT ((instance), (g_type)))
</PRE>
<P>Checks if <EM class=parameter><CODE>instance</CODE></EM> is an instance of the fundamental type identified by <EM class=parameter><CODE>g_type</CODE></EM> . If <EM class=parameter><CODE>instance</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> will be returned.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE-FUNDAMENTAL-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>Location of a <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> structure. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The fundamental type to be checked</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CHECK-INSTANCE-FUNDAMENTAL-TYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-CLASS-CAST:CAPS></A>
<H3>G_TYPE_CHECK_CLASS_CAST()</H3><PRE class=programlisting>#define G_TYPE_CHECK_CLASS_CAST(g_class, g_type, c_type)        (_G_TYPE_CCC ((g_class), (g_type), c_type))
</PRE>
<P>Checks that <EM class=parameter><CODE>g_class</CODE></EM> is a class structure of the type identified by <EM class=parameter><CODE>g_type</CODE></EM> and issues a warning if this is not the case. Returns <EM class=parameter><CODE>g_class</CODE></EM> casted to a pointer to <EM class=parameter><CODE>c_type</CODE></EM> . <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is not a valid class structure.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-CLASS-CAST.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>Location of a <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The type to be returned</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_type</P></TD>
<TD class=parameter_description>
<P>The corresponding C type of class structure of <EM class=parameter><CODE>g_type</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-CLASS-TYPE:CAPS></A>
<H3>G_TYPE_CHECK_CLASS_TYPE()</H3><PRE class=programlisting>#define G_TYPE_CHECK_CLASS_TYPE(g_class, g_type)                (_G_TYPE_CCT ((g_class), (g_type)))
</PRE>
<P>Checks if <EM class=parameter><CODE>g_class</CODE></EM> is a class structure of the type identified by <EM class=parameter><CODE>g_type</CODE></EM> . If <EM class=parameter><CODE>g_class</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> will be returned.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-CLASS-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>Location of a <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The type to be checked</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CHECK-CLASS-TYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-VALUE:CAPS></A>
<H3>G_TYPE_CHECK_VALUE()</H3><PRE class=programlisting>#define G_TYPE_CHECK_VALUE(value)				(_G_TYPE_CHV ((value)))
</PRE>
<P>Checks if <EM class=parameter><CODE>value</CODE></EM> has been initialized to hold values of a value type.</P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-VALUE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CHECK-VALUE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECK-VALUE-TYPE:CAPS></A>
<H3>G_TYPE_CHECK_VALUE_TYPE()</H3><PRE class=programlisting>#define G_TYPE_CHECK_VALUE_TYPE(value, g_type)			(_G_TYPE_CVH ((value), (g_type)))
</PRE>
<P>Checks if <EM class=parameter><CODE>value</CODE></EM> has been initialized to hold values of type <EM class=parameter><CODE>g_type</CODE></EM> . </P>
<P>This macro should only be used in type implementations.</P>
<DIV class=refsect3><A name=G-TYPE-CHECK-VALUE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>The type to be checked</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-CHECK-VALUE-TYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-init></A>
<H3>g_type_init&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_init (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_type_init</CODE> has been deprecated since version 2.36 and should not be used in newly-written code.</P>
<P>the type system is now initialised automatically</P></DIV>
<P>This function used to initialise the type system. Since GLib 2.36, the type system is initialised automatically and this function does nothing.</P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-init-with-debug-flags></A>
<H3>g_type_init_with_debug_flags&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_init_with_debug_flags (<EM class=parameter><CODE><A title="enum GTypeDebugFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeDebugFlags"><SPAN class=type>GTypeDebugFlags</SPAN></A> debug_flags</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_type_init_with_debug_flags</CODE> has been deprecated since version 2.36 and should not be used in newly-written code.</P>
<P>the type system is now initialised automatically</P></DIV>
<P>This function used to initialise the type system with debugging flags. Since GLib 2.36, the type system is initialised automatically and this function does nothing.</P>
<P>If you need to enable debugging features, use the GOBJECT_DEBUG environment variable.</P>
<DIV class=refsect3><A name=g-type-init-with-debug-flags.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>debug_flags</P></TD>
<TD class=parameter_description>
<P>bitwise combination of <A title="enum GTypeDebugFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeDebugFlags"><SPAN class=type>GTypeDebugFlags</SPAN></A> values for debugging purposes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-name></A>
<H3>g_type_name&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_type_name (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Get the unique name that is assigned to a type ID. Note that this function (like all other GType API) cannot cope with invalid type IDs. <A title=G_TYPE_INVALID class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INVALID:CAPS"><CODE class=literal>G_TYPE_INVALID</CODE></A> may be passed to this function, as may be any other validly registered type ID, but randomized type IDs should not be passed in and will most likely lead to a crash.</P>
<DIV class=refsect3><A name=g-type-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>type to return name for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-name.returns></A>
<H4>Returns</H4>
<P>static type name or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-qname></A>
<H3>g_type_qname&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=returnvalue>GQuark</SPAN></A>
g_type_qname (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Get the corresponding quark of the type IDs name.</P>
<DIV class=refsect3><A name=g-type-qname.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>type to return quark of type name for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-qname.returns></A>
<H4>Returns</H4>
<P>the type names quark or 0</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-from-name></A>
<H3>g_type_from_name&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_from_name (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Lookup the type ID from a given type name, returning 0 if no type has been registered under this name (this is the preferred method to find out by name whether a specific type has been registered yet).</P>
<DIV class=refsect3><A name=g-type-from-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>type name to lookup</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-from-name.returns></A>
<H4>Returns</H4>
<P>corresponding type ID or 0</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-parent></A>
<H3>g_type_parent&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_parent (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Return the direct parent type of the passed in type. If the passed in type has no parent, i.e. is a fundamental type, 0 is returned.</P>
<DIV class=refsect3><A name=g-type-parent.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>the derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-parent.returns></A>
<H4>Returns</H4>
<P>the parent type</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-depth></A>
<H3>g_type_depth&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_type_depth (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Returns the length of the ancestry of the passed in type. This includes the type itself, so that e.g. a fundamental type has depth 1.</P>
<DIV class=refsect3><A name=g-type-depth.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-depth.returns></A>
<H4>Returns</H4>
<P>the depth of <EM class=parameter><CODE>type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-next-base></A>
<H3>g_type_next_base&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_next_base (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> leaf_type</CODE></EM>,
                  <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> root_type</CODE></EM>);</PRE>
<P>Given a <EM class=parameter><CODE>leaf_type</CODE></EM> and a <EM class=parameter><CODE>root_type</CODE></EM> which is contained in its anchestry, return the type that <EM class=parameter><CODE>root_type</CODE></EM> is the immediate parent of. In other words, this function determines the type that is derived directly from <EM class=parameter><CODE>root_type</CODE></EM> which is also a base class of <EM class=parameter><CODE>leaf_type</CODE></EM> . Given a root type and a leaf type, this function can be used to determine the types and order in which the leaf type is descended from the root type.</P>
<DIV class=refsect3><A name=g-type-next-base.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>leaf_type</P></TD>
<TD class=parameter_description>
<P>descendant of <EM class=parameter><CODE>root_type</CODE></EM> and the type to be returned</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>root_type</P></TD>
<TD class=parameter_description>
<P>immediate parent of the returned type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-next-base.returns></A>
<H4>Returns</H4>
<P>immediate child of <EM class=parameter><CODE>root_type</CODE></EM> and anchestor of <EM class=parameter><CODE>leaf_type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-is-a></A>
<H3>g_type_is_a&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_type_is_a (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>,
             <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> is_a_type</CODE></EM>);</PRE>
<P>If <EM class=parameter><CODE>is_a_type</CODE></EM> is a derivable type, check whether <EM class=parameter><CODE>type</CODE></EM> is a descendant of <EM class=parameter><CODE>is_a_type</CODE></EM> . If <EM class=parameter><CODE>is_a_type</CODE></EM> is an interface, check whether <EM class=parameter><CODE>type</CODE></EM> conforms to it.</P>
<DIV class=refsect3><A name=g-type-is-a.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>type to check anchestry for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>is_a_type</P></TD>
<TD class=parameter_description>
<P>possible anchestor of <EM class=parameter><CODE>type</CODE></EM> or interface that <EM class=parameter><CODE>type</CODE></EM> could conform to</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-is-a.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>type</CODE></EM> is a <EM class=parameter><CODE>is_a_type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-ref></A>
<H3>g_type_class_ref&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_class_ref (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Increments the reference count of the class structure belonging to <EM class=parameter><CODE>type</CODE></EM> . This function will demand-create the class if it doesn't exist already.</P>
<DIV class=refsect3><A name=g-type-class-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>type ID of a classed type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-class-ref.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure for the given type ID. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-peek></A>
<H3>g_type_class_peek&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_class_peek (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>This function is essentially the same as <A title=g_type_class_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-ref"><CODE class=function>g_type_class_ref()</CODE></A>, except that the classes reference count isn't incremented. As a consequence, this function may return <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the class of the type passed in does not currently exist (hasn't been referenced before).</P>
<DIV class=refsect3><A name=g-type-class-peek.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>type ID of a classed type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-class-peek.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure for the given type ID or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the class does not currently exist. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-peek-static></A>
<H3>g_type_class_peek_static&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_class_peek_static (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>A more efficient version of <A title=g_type_class_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-peek"><CODE class=function>g_type_class_peek()</CODE></A> which works only for static types.</P>
<DIV class=refsect3><A name=g-type-class-peek-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>type ID of a classed type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-class-peek-static.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure for the given type ID or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the class does not currently exist or is dynamically loaded. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-unref></A>
<H3>g_type_class_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_class_unref (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>);</PRE>
<P>Decrements the reference count of the class structure being passed in. Once the last reference count of a class has been released, classes may be finalized by the type system, so further dereferencing of a class pointer after <A title=g_type_class_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref"><CODE class=function>g_type_class_unref()</CODE></A> are invalid.</P>
<DIV class=refsect3><A name=g-type-class-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to unref. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-peek-parent></A>
<H3>g_type_class_peek_parent&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_class_peek_parent (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>);</PRE>
<P>This is a convenience function often needed in class initializers. It returns the class structure of the immediate parent type of the class passed in. Since derived classes hold a reference count on their parent classes as long as they are instantiated, the returned class will always exist.</P>
<P>This function is essentially equivalent to: g_type_class_peek (g_type_parent (G_TYPE_FROM_CLASS (g_class)))</P>
<DIV class=refsect3><A name=g-type-class-peek-parent.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to retrieve the parent class for. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-class-peek-parent.returns></A>
<H4>Returns</H4>
<P>the parent class of <EM class=parameter><CODE>g_class</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-add-private></A>
<H3>g_type_class_add_private&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_class_add_private (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> private_size</CODE></EM>);</PRE>
<P>Registers a private structure for an instantiatable type.</P>
<P>When an object is allocated, the private structures for the type and all of its parent types are allocated sequentially in the same memory block as the public structures, and are zero-filled.</P>
<P>Note that the accumulated size of the private structures of a type and all its parent types cannot exceed 64 KiB.</P>
<P>This function should be called in the type's <CODE class=function>class_init()</CODE> function. The private structure can be retrieved using the <A title=G_TYPE_INSTANCE_GET_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-PRIVATE:CAPS"><CODE class=function>G_TYPE_INSTANCE_GET_PRIVATE()</CODE></A> macro.</P>
<P>The following example shows attaching a private structure MyObjectPrivate to an object MyObject defined in the standard GObject fashion in the type's <CODE class=function>class_init()</CODE> function.</P>
<P>Note the use of a structure member "priv" to avoid the overhead of repeatedly calling <CODE class=function>MY_OBJECT_GET_PRIVATE()</CODE>.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> _MyObject        MyObject<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> _MyObjectPrivate MyObjectPrivate<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class="gtkdoc kwb">struct</SPAN> _MyObject <SPAN class="gtkdoc opt">{</SPAN>
 GObject parent<SPAN class="gtkdoc opt">;</SPAN>

 MyObjectPrivate <SPAN class="gtkdoc opt">*</SPAN>priv<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">struct</SPAN> _MyObjectPrivate <SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwb">int</SPAN> some_field<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_object_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObjectClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-add-private">g_type_class_add_private</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>klass<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObjectPrivate<SPAN class="gtkdoc opt">));</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_object_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject <SPAN class="gtkdoc opt">*</SPAN>my_object<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  my_object<SPAN class="gtkdoc opt">-&gt;</SPAN>priv <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INSTANCE-GET-PRIVATE:CAPS">G_TYPE_INSTANCE_GET_PRIVATE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>my_object<SPAN class="gtkdoc opt">,</SPAN>
                                                 MY_TYPE_OBJECT<SPAN class="gtkdoc opt">,</SPAN>
                                                 MyObjectPrivate<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc slc">// my_object-&gt;priv-&gt;some_field will be automatically initialised to 0</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">static int</SPAN>
<SPAN class=function>my_object_get_some_field</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject <SPAN class="gtkdoc opt">*</SPAN>my_object<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  MyObjectPrivate <SPAN class="gtkdoc opt">*</SPAN>priv<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-val-if-fail">g_return_val_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>MY_IS_OBJECT</SPAN> <SPAN class="gtkdoc opt">(</SPAN>my_object<SPAN class="gtkdoc opt">),</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">);</SPAN>

  priv <SPAN class="gtkdoc opt">=</SPAN> my_object<SPAN class="gtkdoc opt">-&gt;</SPAN>priv<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=keyword>return</SPAN> priv<SPAN class="gtkdoc opt">-&gt;</SPAN>some_field<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-type-class-add-private.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>class structure for an instantiatable type. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>private_size</P></TD>
<TD class=parameter_description>
<P>size of private structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-add-class-private></A>
<H3>g_type_add_class_private&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_add_class_private (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> class_type</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> private_size</CODE></EM>);</PRE>
<P>Registers a private class structure for a classed type; when the class is allocated, the private structures for the class and all of its parent types are allocated sequentially in the same memory block as the public structures, and are zero-filled.</P>
<P>This function should be called in the type's <CODE class=function>get_type()</CODE> function after the type is registered. The private structure can be retrieved using the <A title=G_TYPE_CLASS_GET_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CLASS-GET-PRIVATE:CAPS"><CODE class=function>G_TYPE_CLASS_GET_PRIVATE()</CODE></A> macro.</P>
<DIV class=refsect3><A name=g-type-add-class-private.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class_type</P></TD>
<TD class=parameter_description>
<P>GType of an classed type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>private_size</P></TD>
<TD class=parameter_description>
<P>size of private structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-interface-peek></A>
<H3>g_type_interface_peek&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_interface_peek (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance_class</CODE></EM>,
                       <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> iface_type</CODE></EM>);</PRE>
<P>Returns the <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> structure of an interface to which the passed in class conforms.</P>
<DIV class=refsect3><A name=g-type-interface-peek.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>iface_type</P></TD>
<TD class=parameter_description>
<P>an interface ID which this class conforms to</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-interface-peek.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> structure of <EM class=parameter><CODE>iface_type</CODE></EM> if implemented by <EM class=parameter><CODE>instance_class</CODE></EM> , <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> otherwise. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-interface-peek-parent></A>
<H3>g_type_interface_peek_parent&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_interface_peek_parent (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>);</PRE>
<P>Returns the corresponding <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> structure of the parent type of the instance type to which <EM class=parameter><CODE>g_iface</CODE></EM> belongs. This is useful when deriving the implementation of an interface from the parent type and then possibly overriding some methods.</P>
<DIV class=refsect3><A name=g-type-interface-peek-parent.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> structure. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-interface-peek-parent.returns></A>
<H4>Returns</H4>
<P>the corresponding <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> structure of the parent type of the instance type to which <EM class=parameter><CODE>g_iface</CODE></EM> belongs, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the parent type doesn't conform to the interface. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>][<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-default-interface-ref></A>
<H3>g_type_default_interface_ref&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_default_interface_ref (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_type</CODE></EM>);</PRE>
<P>Increments the reference count for the interface type <EM class=parameter><CODE>g_type</CODE></EM> , and returns the default interface vtable for the type.</P>
<P>If the type is not currently in use, then the default vtable for the type will be created and initalized by calling the base interface init and default vtable init functions for the type (the <EM class=parameter><CODE>base_init</CODE></EM> and <EM class=parameter><CODE>class_init</CODE></EM> members of <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>). Calling <A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref"><CODE class=function>g_type_default_interface_ref()</CODE></A> is useful when you want to make sure that signals and properties for an interface have been installed.</P>
<DIV class=refsect3><A name=g-type-default-interface-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-default-interface-ref.returns></A>
<H4>Returns</H4>
<P>the default vtable for the interface; call <A title=g_type_default_interface_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-unref"><CODE class=function>g_type_default_interface_unref()</CODE></A> when you are done using the interface. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-default-interface-peek></A>
<H3>g_type_default_interface_peek&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_default_interface_peek (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_type</CODE></EM>);</PRE>
<P>If the interface type <EM class=parameter><CODE>g_type</CODE></EM> is currently in use, returns its default interface vtable.</P>
<DIV class=refsect3><A name=g-type-default-interface-peek.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-default-interface-peek.returns></A>
<H4>Returns</H4>
<P>the default vtable for the interface, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the type is not currently in use. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-default-interface-unref></A>
<H3>g_type_default_interface_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_default_interface_unref (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>);</PRE>
<P>Decrements the reference count for the type corresponding to the interface default vtable <EM class=parameter><CODE>g_iface</CODE></EM> . If the type is dynamic, then when no one is using the interface and all references have been released, the finalize function for the interface's default vtable (the <EM class=parameter><CODE>class_finalize</CODE></EM> member of <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>) will be called.</P>
<DIV class=refsect3><A name=g-type-default-interface-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>the default vtable structure for a interface, as returned by <A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref"><CODE class=function>g_type_default_interface_ref()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-children></A>
<H3>g_type_children&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>&nbsp;*
g_type_children (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>,
                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_children</CODE></EM>);</PRE>
<P>Return a newly allocated and 0-terminated array of type IDs, listing the child types of <EM class=parameter><CODE>type</CODE></EM> .</P>
<DIV class=refsect3><A name=g-type-children.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>the parent type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_children</P></TD>
<TD class=parameter_description>
<P>location to store the length of the returned array, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL may be passed instead of a pointer to a location."><SPAN class=acronym>optional</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-children.returns></A>
<H4>Returns</H4>
<P>Newly allocated and 0-terminated array of child types, free with <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_children][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-interfaces></A>
<H3>g_type_interfaces&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>&nbsp;*
g_type_interfaces (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_interfaces</CODE></EM>);</PRE>
<P>Return a newly allocated and 0-terminated array of type IDs, listing the interface types that <EM class=parameter><CODE>type</CODE></EM> conforms to.</P>
<DIV class=refsect3><A name=g-type-interfaces.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>the type to list interface types for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_interfaces</P></TD>
<TD class=parameter_description>
<P>location to store the length of the returned array, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL may be passed instead of a pointer to a location."><SPAN class=acronym>optional</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-interfaces.returns></A>
<H4>Returns</H4>
<P>Newly allocated and 0-terminated array of interface types, free with <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_interfaces][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-interface-prerequisites></A>
<H3>g_type_interface_prerequisites&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>&nbsp;*
g_type_interface_prerequisites (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_prerequisites</CODE></EM>);</PRE>
<P>Returns the prerequisites of an interfaces type.</P>
<DIV class=refsect3><A name=g-type-interface-prerequisites.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P>an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_prerequisites</P></TD>
<TD class=parameter_description>
<P>location to return the number of prerequisites, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL may be passed instead of a pointer to a location."><SPAN class=acronym>optional</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-interface-prerequisites.returns></A>
<H4>Returns</H4>
<P>a newly-allocated zero-terminated array of <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> containing the prerequisites of <EM class=parameter><CODE>interface_type</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_prerequisites][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-2.html#api-index-2.2">2.2</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-set-qdata></A>
<H3>g_type_set_qdata&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_set_qdata (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Attaches arbitrary data to a type.</P>
<DIV class=refsect3><A name=g-type-set-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> id to identify the data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-get-qdata></A>
<H3>g_type_get_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_type_get_qdata (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>Obtains data which has previously been attached to <EM class=parameter><CODE>type</CODE></EM> with <A title=g_type_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-set-qdata"><CODE class=function>g_type_set_qdata()</CODE></A>.</P>
<P>Note that this does not take subtyping into account; data attached to one type with <A title=g_type_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-set-qdata"><CODE class=function>g_type_set_qdata()</CODE></A> cannot be retrieved from a subtype using <A title=g_type_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-get-qdata"><CODE class=function>g_type_get_qdata()</CODE></A>.</P>
<DIV class=refsect3><A name=g-type-get-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> id to identify the data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-get-qdata.returns></A>
<H4>Returns</H4>
<P>the data, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no data was found. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-query></A>
<H3>g_type_query&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_query (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>,
              <EM class=parameter><CODE><A title="struct GTypeQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeQuery"><SPAN class=type>GTypeQuery</SPAN></A> *query</CODE></EM>);</PRE>
<P>Queries the type system for information about a specific type. This function will fill in a user-provided structure to hold type-specific information. If an invalid <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> is passed in, the <EM class=parameter><CODE>type</CODE></EM> member of the <A title="struct GTypeQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeQuery"><SPAN class=type>GTypeQuery</SPAN></A> is 0. All members filled into the <A title="struct GTypeQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeQuery"><SPAN class=type>GTypeQuery</SPAN></A> structure should be considered constant and have to be left untouched.</P>
<DIV class=refsect3><A name=g-type-query.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of a static, classed type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>query</P></TD>
<TD class=parameter_description>
<P>a user provided structure that is filled in with constant values upon success. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Out parameter, where caller must allocate storage."><SPAN class=acronym>out caller-allocates</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GBaseInitFunc></A>
<H3>GBaseInitFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GBaseInitFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>);</PRE>
<P>A callback function used by the type system to do base initialization of the class structures of derived types. It is called as part of the initialization process of all derived classes and should reallocate or reset all dynamic class members copied over from the parent class. For example, class members (such as strings) that are not sufficiently handled by a plain memory copy of the parent class into the derived class have to be altered. See <A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><CODE class=function>GClassInitFunc()</CODE></A> for a discussion of the class initialization process.</P>
<DIV class=refsect3><A name=GBaseInitFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>The <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to initialize. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GBaseFinalizeFunc></A>
<H3>GBaseFinalizeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GBaseFinalizeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>);</PRE>
<P>A callback function used by the type system to finalize those portions of a derived types class structure that were setup from the corresponding <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> function. Class finalization basically works the inverse way in which class initialization is performed. See <A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><CODE class=function>GClassInitFunc()</CODE></A> for a discussion of the class initialization process.</P>
<DIV class=refsect3><A name=GBaseFinalizeFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>The <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to finalize. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GClassInitFunc></A>
<H3>GClassInitFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GClassInitFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> class_data</CODE></EM>);</PRE>
<P>A callback function used by the type system to initialize the class of a specific type. This function should initialize all static class members.</P>
<P>The initialization process of a class involves:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P>Copying common members from the parent class over to the derived class structure.</P></LI>
<LI class=listitem>
<P>Zero initialization of the remaining members not copied over from the parent class.</P></LI>
<LI class=listitem>
<P>Invocation of the <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> initializers of all parent types and the class' type.</P></LI>
<LI class=listitem>
<P>Invocation of the class' <A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><CODE class=function>GClassInitFunc()</CODE></A> initializer.</P></LI></UL></DIV>
<P>Since derived classes are partially initialized through a memory copy of the parent class, the general rule is that <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> and <A title=GBaseFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseFinalizeFunc"><CODE class=function>GBaseFinalizeFunc()</CODE></A> should take care of necessary reinitialization and release of those class members that were introduced by the type that specified these <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A>/<A title=GBaseFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseFinalizeFunc"><CODE class=function>GBaseFinalizeFunc()</CODE></A>. <A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><CODE class=function>GClassInitFunc()</CODE></A> should only care about initializing static class members, while dynamic class members (such as allocated strings or reference counted resources) are better handled by a <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> for this type, so proper initialization of the dynamic class members is performed for class initialization of derived types as well.</P>
<P>An example may help to correspond the intend of the different class initializers:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> <SPAN class="gtkdoc opt">{</SPAN>
  GObjectClass parent_class<SPAN class="gtkdoc opt">;</SPAN>
  gint         static_integer<SPAN class="gtkdoc opt">;</SPAN>
  gchar       <SPAN class="gtkdoc opt">*</SPAN>dynamic_string<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN> TypeAClass<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>type_a_base_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TypeAClass <SPAN class="gtkdoc opt">*</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">-&gt;</SPAN>dynamic_string <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"some string"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>type_a_base_class_finalize</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TypeAClass <SPAN class="gtkdoc opt">*</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">-&gt;</SPAN>dynamic_string<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>type_a_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TypeAClass <SPAN class="gtkdoc opt">*</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">-&gt;</SPAN>static_integer <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> <SPAN class="gtkdoc opt">{</SPAN>
  TypeAClass   parent_class<SPAN class="gtkdoc opt">;</SPAN>
  gfloat       static_float<SPAN class="gtkdoc opt">;</SPAN>
  GString     <SPAN class="gtkdoc opt">*</SPAN>dynamic_gstring<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN> TypeBClass<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>type_b_base_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TypeBClass <SPAN class="gtkdoc opt">*</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">-&gt;</SPAN>dynamic_gstring <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Strings.html#g-string-new">g_string_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"some other string"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>type_b_base_class_finalize</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TypeBClass <SPAN class="gtkdoc opt">*</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Strings.html#g-string-free">g_string_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">-&gt;</SPAN>dynamic_gstring<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>type_b_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TypeBClass <SPAN class="gtkdoc opt">*</SPAN><SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwc">class</SPAN><SPAN class="gtkdoc opt">-&gt;</SPAN>static_float <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>3.14159265358979323846</SPAN><SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Initialization of TypeBClass will first cause initialization of TypeAClass (derived classes reference their parent classes, see <A title=g_type_class_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-ref"><CODE class=function>g_type_class_ref()</CODE></A> on this).</P>
<P>Initialization of TypeAClass roughly involves zero-initializing its fields, then calling its <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> <CODE class=function>type_a_base_class_init()</CODE> to allocate its dynamic members (dynamic_string), and finally calling its <A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><CODE class=function>GClassInitFunc()</CODE></A> <CODE class=function>type_a_class_init()</CODE> to initialize its static members (static_integer). The first step in the initialization process of TypeBClass is then a plain memory copy of the contents of TypeAClass into TypeBClass and zero-initialization of the remaining fields in TypeBClass. The dynamic members of TypeAClass within TypeBClass now need reinitialization which is performed by calling <CODE class=function>type_a_base_class_init()</CODE> with an argument of TypeBClass.</P>
<P>After that, the <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> of TypeBClass, <CODE class=function>type_b_base_class_init()</CODE> is called to allocate the dynamic members of TypeBClass (dynamic_gstring), and finally the <A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><CODE class=function>GClassInitFunc()</CODE></A> of TypeBClass, <CODE class=function>type_b_class_init()</CODE>, is called to complete the initialization process with the static members (static_float).</P>
<P>Corresponding finalization counter parts to the <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> functions have to be provided to release allocated resources at class finalization time.</P>
<DIV class=refsect3><A name=GClassInitFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>The <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to initialize. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>class_data</P></TD>
<TD class=parameter_description>
<P>The <EM class=parameter><CODE>class_data</CODE></EM> member supplied via the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GClassFinalizeFunc></A>
<H3>GClassFinalizeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GClassFinalizeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> class_data</CODE></EM>);</PRE>
<P>A callback function used by the type system to finalize a class. This function is rarely needed, as dynamically allocated class resources should be handled by <A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><CODE class=function>GBaseInitFunc()</CODE></A> and <A title=GBaseFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseFinalizeFunc"><CODE class=function>GBaseFinalizeFunc()</CODE></A>. Also, specification of a <A title=GClassFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassFinalizeFunc"><CODE class=function>GClassFinalizeFunc()</CODE></A> in the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure of a static type is invalid, because classes of static types will never be finalized (they are artificially kept alive when their reference count drops to zero).</P>
<DIV class=refsect3><A name=GClassFinalizeFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>The <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to finalize. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>class_data</P></TD>
<TD class=parameter_description>
<P>The <EM class=parameter><CODE>class_data</CODE></EM> member supplied via the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GInstanceInitFunc></A>
<H3>GInstanceInitFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GInstanceInitFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> *instance</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>);</PRE>
<P>A callback function used by the type system to initialize a new instance of a type. This function initializes all instance members and allocates any resources required by it.</P>
<P>Initialization of a derived instance involves calling all its parent types instance initializers, so the class member of the instance is altered during its initialization to always point to the class that belongs to the type the current initializer was introduced for.</P>
<P>The extended members of <EM class=parameter><CODE>instance</CODE></EM> are guaranteed to have been filled with zeros before this function is called.</P>
<DIV class=refsect3><A name=GInstanceInitFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to initialize</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>The class of the type the instance is created for. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GInterfaceInitFunc></A>
<H3>GInterfaceInitFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GInterfaceInitFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> iface_data</CODE></EM>);</PRE>
<P>A callback function used by the type system to initialize a new interface. This function should initialize all internal data and allocate any resources required by the interface.</P>
<P>The members of <EM class=parameter><CODE>iface_data</CODE></EM> are guaranteed to have been filled with zeros before this function is called.</P>
<DIV class=refsect3><A name=GInterfaceInitFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>The interface structure to initialize. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>iface_data</P></TD>
<TD class=parameter_description>
<P>The <EM class=parameter><CODE>interface_data</CODE></EM> supplied via the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GInterfaceFinalizeFunc></A>
<H3>GInterfaceFinalizeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GInterfaceFinalizeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> iface_data</CODE></EM>);</PRE>
<P>A callback function used by the type system to finalize an interface. This function should destroy any internal data and release any resources allocated by the corresponding <A title=GInterfaceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInitFunc"><CODE class=function>GInterfaceInitFunc()</CODE></A> function.</P>
<DIV class=refsect3><A name=GInterfaceFinalizeFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>The interface structure to finalize. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>iface_data</P></TD>
<TD class=parameter_description>
<P>The <EM class=parameter><CODE>interface_data</CODE></EM> supplied via the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeClassCacheFunc></A>
<H3>GTypeClassCacheFunc&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GTypeClassCacheFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> cache_data</CODE></EM>,
                        <EM class=parameter><CODE><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> *g_class</CODE></EM>);</PRE>
<P>A callback function which is called when the reference count of a class drops to zero. It may use <A title=g_type_class_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-ref"><CODE class=function>g_type_class_ref()</CODE></A> to prevent the class from being freed. You should not call <A title=g_type_class_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref"><CODE class=function>g_type_class_unref()</CODE></A> from a <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> function to prevent infinite recursion, use <A title=g_type_class_unref_uncached&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref-uncached"><CODE class=function>g_type_class_unref_uncached()</CODE></A> instead.</P>
<P>The functions have to check the class id passed in to figure whether they actually want to cache the class of this type, since all classes are routed through the same <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> chain.</P>
<DIV class=refsect3><A name=GTypeClassCacheFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>cache_data</P></TD>
<TD class=parameter_description>
<P>data that was given to the <A title=g_type_add_class_cache_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-class-cache-func"><CODE class=function>g_type_add_class_cache_func()</CODE></A> call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>The <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure which is unreferenced. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=GTypeClassCacheFunc.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> to stop further <A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFuncs</SPAN></A> from being called, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> to continue</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-register-static></A>
<H3>g_type_register_static&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_register_static (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> parent_type</CODE></EM>,
                        <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *type_name</CODE></EM>,
                        <EM class=parameter><CODE>const <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *info</CODE></EM>,
                        <EM class=parameter><CODE><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>type_name</CODE></EM> as the name of a new static type derived from <EM class=parameter><CODE>parent_type</CODE></EM> . The type system uses the information contained in the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure pointed to by <EM class=parameter><CODE>info</CODE></EM> to manage the type and its instances (if not abstract). The value of <EM class=parameter><CODE>flags</CODE></EM> determines the nature (e.g. abstract or not) of the type.</P>
<DIV class=refsect3><A name=g-type-register-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>parent_type</P></TD>
<TD class=parameter_description>
<P>type from which this type will be derived</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>0-terminated string used as the name of the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure for this type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>bitwise combination of <A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> values</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-register-static.returns></A>
<H4>Returns</H4>
<P>the new type identifier</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-register-static-simple></A>
<H3>g_type_register_static_simple&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_register_static_simple (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> parent_type</CODE></EM>,
                               <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *type_name</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> class_size</CODE></EM>,
                               <EM class=parameter><CODE><A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><SPAN class=type>GClassInitFunc</SPAN></A> class_init</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> instance_size</CODE></EM>,
                               <EM class=parameter><CODE><A title=GInstanceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInstanceInitFunc"><SPAN class=type>GInstanceInitFunc</SPAN></A> instance_init</CODE></EM>,
                               <EM class=parameter><CODE><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>type_name</CODE></EM> as the name of a new static type derived from <EM class=parameter><CODE>parent_type</CODE></EM> . The value of <EM class=parameter><CODE>flags</CODE></EM> determines the nature (e.g. abstract or not) of the type. It works by filling a <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> struct and calling <A title=g_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static"><CODE class=function>g_type_register_static()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-register-static-simple.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>parent_type</P></TD>
<TD class=parameter_description>
<P>type from which this type will be derived</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>0-terminated string used as the name of the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_size</P></TD>
<TD class=parameter_description>
<P>size of the class structure (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_init</P></TD>
<TD class=parameter_description>
<P>location of the class initialization function (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_size</P></TD>
<TD class=parameter_description>
<P>size of the instance structure (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_init</P></TD>
<TD class=parameter_description>
<P>location of the instance initialization function (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>bitwise combination of <A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> values</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-register-static-simple.returns></A>
<H4>Returns</H4>
<P>the new type identifier</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-12.html#api-index-2.12">2.12</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-register-dynamic></A>
<H3>g_type_register_dynamic&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_register_dynamic (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> parent_type</CODE></EM>,
                         <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *type_name</CODE></EM>,
                         <EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>,
                         <EM class=parameter><CODE><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>type_name</CODE></EM> as the name of a new dynamic type derived from <EM class=parameter><CODE>parent_type</CODE></EM> . The type system uses the information contained in the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure pointed to by <EM class=parameter><CODE>plugin</CODE></EM> to manage the type and its instances (if not abstract). The value of <EM class=parameter><CODE>flags</CODE></EM> determines the nature (e.g. abstract or not) of the type.</P>
<DIV class=refsect3><A name=g-type-register-dynamic.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>parent_type</P></TD>
<TD class=parameter_description>
<P>type from which this type will be derived</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>0-terminated string used as the name of the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure to retrieve the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>bitwise combination of <A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> values</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-register-dynamic.returns></A>
<H4>Returns</H4>
<P>the new type identifier or <A title=G_TYPE_INVALID class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INVALID:CAPS"><SPAN class=type>G_TYPE_INVALID</SPAN></A> if registration failed</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-register-fundamental></A>
<H3>g_type_register_fundamental&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_register_fundamental (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type_id</CODE></EM>,
                             <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *type_name</CODE></EM>,
                             <EM class=parameter><CODE>const <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *info</CODE></EM>,
                             <EM class=parameter><CODE>const <A title="struct GTypeFundamentalInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalInfo"><SPAN class=type>GTypeFundamentalInfo</SPAN></A> *finfo</CODE></EM>,
                             <EM class=parameter><CODE><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>type_id</CODE></EM> as the predefined identifier and <EM class=parameter><CODE>type_name</CODE></EM> as the name of a fundamental type. If <EM class=parameter><CODE>type_id</CODE></EM> is already registered, or a type named <EM class=parameter><CODE>type_name</CODE></EM> is already registered, the behaviour is undefined. The type system uses the information contained in the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure pointed to by <EM class=parameter><CODE>info</CODE></EM> and the <A title="struct GTypeFundamentalInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalInfo"><SPAN class=type>GTypeFundamentalInfo</SPAN></A> structure pointed to by <EM class=parameter><CODE>finfo</CODE></EM> to manage the type and its instances. The value of <EM class=parameter><CODE>flags</CODE></EM> determines additional characteristics of the fundamental type.</P>
<DIV class=refsect3><A name=g-type-register-fundamental.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type_id</P></TD>
<TD class=parameter_description>
<P>a predefined type identifier</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>0-terminated string used as the name of the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure for this type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>finfo</P></TD>
<TD class=parameter_description>
<P><A title="struct GTypeFundamentalInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalInfo"><SPAN class=type>GTypeFundamentalInfo</SPAN></A> structure for this type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>bitwise combination of <A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> values</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-register-fundamental.returns></A>
<H4>Returns</H4>
<P>the predefined type identifier</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-add-interface-static></A>
<H3>g_type_add_interface_static&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_add_interface_static (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                             <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                             <EM class=parameter><CODE>const <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> *info</CODE></EM>);</PRE>
<P>Adds the static <EM class=parameter><CODE>interface_type</CODE></EM> to <EM class=parameter><CODE>instantiable_type</CODE></EM> . The information contained in the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> structure pointed to by <EM class=parameter><CODE>info</CODE></EM> is used to manage the relationship.</P>
<DIV class=refsect3><A name=g-type-add-interface-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of an instantiable type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P><A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> structure for this (<EM class=parameter><CODE>instance_type</CODE></EM> , <EM class=parameter><CODE>interface_type</CODE></EM> ) combination</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-add-interface-dynamic></A>
<H3>g_type_add_interface_dynamic&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_add_interface_dynamic (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                              <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                              <EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>);</PRE>
<P>Adds the dynamic <EM class=parameter><CODE>interface_type</CODE></EM> to <EM class=parameter><CODE>instantiable_type</CODE></EM> . The information contained in the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure pointed to by <EM class=parameter><CODE>plugin</CODE></EM> is used to manage the relationship.</P>
<DIV class=refsect3><A name=g-type-add-interface-dynamic.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of an instantiable type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure to retrieve the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-interface-add-prerequisite></A>
<H3>g_type_interface_add_prerequisite&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_interface_add_prerequisite (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> prerequisite_type</CODE></EM>);</PRE>
<P>Adds <EM class=parameter><CODE>prerequisite_type</CODE></EM> to the list of prerequisites of <EM class=parameter><CODE>interface_type</CODE></EM> . This means that any type implementing <EM class=parameter><CODE>interface_type</CODE></EM> must also implement <EM class=parameter><CODE>prerequisite_type</CODE></EM> . Prerequisites can be thought of as an alternative to interface derivation (which GType doesn't support). An interface can have at most one instantiatable prerequisite type.</P>
<DIV class=refsect3><A name=g-type-interface-add-prerequisite.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>prerequisite_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of an interface or instantiatable type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-get-plugin></A>
<H3>g_type_get_plugin&nbsp;()</H3><PRE class=programlisting><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=returnvalue>GTypePlugin</SPAN></A>&nbsp;*
g_type_get_plugin (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Returns the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure for <EM class=parameter><CODE>type</CODE></EM> .</P>
<DIV class=refsect3><A name=g-type-get-plugin.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> to retrieve the plugin for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-get-plugin.returns></A>
<H4>Returns</H4>
<P>the corresponding plugin if <EM class=parameter><CODE>type</CODE></EM> is a dynamic type, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> otherwise. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-interface-get-plugin></A>
<H3>g_type_interface_get_plugin&nbsp;()</H3><PRE class=programlisting><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=returnvalue>GTypePlugin</SPAN></A>&nbsp;*
g_type_interface_get_plugin (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                             <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>);</PRE>
<P>Returns the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure for the dynamic interface <EM class=parameter><CODE>interface_type</CODE></EM> which has been added to <EM class=parameter><CODE>instance_type</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if <EM class=parameter><CODE>interface_type</CODE></EM> has not been added to <EM class=parameter><CODE>instance_type</CODE></EM> or does not have a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> structure. See <A title=g_type_add_interface_dynamic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-dynamic"><CODE class=function>g_type_add_interface_dynamic()</CODE></A>.</P>
<DIV class=refsect3><A name=g-type-interface-get-plugin.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of an instantiatable type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of an interface type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-interface-get-plugin.returns></A>
<H4>Returns</H4>
<P>the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> for the dynamic interface <EM class=parameter><CODE>interface_type</CODE></EM> of <EM class=parameter><CODE>instance_type</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-fundamental-next></A>
<H3>g_type_fundamental_next&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_fundamental_next (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns the next free fundamental type id which can be used to register a new fundamental type with <A title=g_type_register_fundamental&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-fundamental"><CODE class=function>g_type_register_fundamental()</CODE></A>. The returned type ID represents the highest currently registered fundamental type identifier.</P>
<DIV class=refsect3><A name=g-type-fundamental-next.returns></A>
<H4>Returns</H4>
<P>the next available fundamental type ID to be registered, or 0 if the type system ran out of fundamental type IDs</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-fundamental></A>
<H3>g_type_fundamental&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_fundamental (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type_id</CODE></EM>);</PRE>
<P>Internal function, used to extract the fundamental type ID portion. Use <A title=G_TYPE_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FUNDAMENTAL:CAPS"><CODE class=function>G_TYPE_FUNDAMENTAL()</CODE></A> instead.</P>
<DIV class=refsect3><A name=g-type-fundamental.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type_id</P></TD>
<TD class=parameter_description>
<P>valid type ID</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-fundamental.returns></A>
<H4>Returns</H4>
<P>fundamental type ID</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-create-instance></A>
<H3>g_type_create_instance&nbsp;()</H3><PRE class=programlisting><A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=returnvalue>GTypeInstance</SPAN></A>&nbsp;*
g_type_create_instance (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Creates and initializes an instance of <EM class=parameter><CODE>type</CODE></EM> if <EM class=parameter><CODE>type</CODE></EM> is valid and can be instantiated. The type system only performs basic allocation and structure setups for instances: actual instance creation should happen through functions supplied by the type's fundamental type implementation. So use of <A title=g_type_create_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-create-instance"><CODE class=function>g_type_create_instance()</CODE></A> is reserved for implementators of fundamental types only. E.g. instances of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> hierarchy should be created via <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> and never directly through <A title=g_type_create_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-create-instance"><CODE class=function>g_type_create_instance()</CODE></A> which doesn't handle things like singleton objects or object construction.</P>
<P>The extended members of the returned instance are guaranteed to be filled with zeros.</P>
<P>Note: Do not use this function, unless you're implementing a fundamental type. Also language bindings should not use this function, but <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> instead.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-create-instance.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>an instantiatable type to create an instance for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-create-instance.returns></A>
<H4>Returns</H4>
<P>an allocated and initialized instance, subject to further treatment by the fundamental type implementation</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-free-instance></A>
<H3>g_type_free_instance&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_free_instance (<EM class=parameter><CODE><A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> *instance</CODE></EM>);</PRE>
<P>Frees an instance of a type, returning it to the instance pool for the type, if there is one.</P>
<P>Like <A title=g_type_create_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-create-instance"><CODE class=function>g_type_create_instance()</CODE></A>, this function is reserved for implementors of fundamental types.</P>
<DIV class=refsect3><A name=g-type-free-instance.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>an instance of a type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-add-class-cache-func></A>
<H3>g_type_add_class_cache_func&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_add_class_cache_func (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> cache_data</CODE></EM>,
                             <EM class=parameter><CODE><A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> cache_func</CODE></EM>);</PRE>
<P>Adds a <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> to be called before the reference count of a class goes from one to zero. This can be used to prevent premature class destruction. All installed <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> functions will be chained until one of them returns <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. The functions have to check the class id passed in to figure whether they actually want to cache the class of this type, since all classes are routed through the same <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> chain.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-add-class-cache-func.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>cache_data</P></TD>
<TD class=parameter_description>
<P>data to be passed to <EM class=parameter><CODE>cache_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>cache_func</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-remove-class-cache-func></A>
<H3>g_type_remove_class_cache_func&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_remove_class_cache_func (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> cache_data</CODE></EM>,
                                <EM class=parameter><CODE><A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> cache_func</CODE></EM>);</PRE>
<P>Removes a previously installed <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A>. The cache maintained by <EM class=parameter><CODE>cache_func</CODE></EM> has to be empty when calling <A title=g_type_remove_class_cache_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-remove-class-cache-func"><CODE class=function>g_type_remove_class_cache_func()</CODE></A> to avoid leaks.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-remove-class-cache-func.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>cache_data</P></TD>
<TD class=parameter_description>
<P>data that was given when adding <EM class=parameter><CODE>cache_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>cache_func</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-class-unref-uncached></A>
<H3>g_type_class_unref_uncached&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_class_unref_uncached (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_class</CODE></EM>);</PRE>
<P>A variant of <A title=g_type_class_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref"><CODE class=function>g_type_class_unref()</CODE></A> for use in <A title=GTypeClassCacheFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFunc</SPAN></A> implementations. It unreferences a class without consulting the chain of <A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClassCacheFunc"><SPAN class=type>GTypeClassCacheFuncs</SPAN></A>, avoiding the recursion which would occur otherwise.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-class-unref-uncached.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A> structure to unref. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeClass]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-add-interface-check></A>
<H3>g_type_add_interface_check&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_add_interface_check (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> check_data</CODE></EM>,
                            <EM class=parameter><CODE><A title=GTypeInterfaceCheckFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterfaceCheckFunc"><SPAN class=type>GTypeInterfaceCheckFunc</SPAN></A> check_func</CODE></EM>);</PRE>
<P>Adds a function to be called after an interface vtable is initialized for any class (i.e. after the <EM class=parameter><CODE>interface_init</CODE></EM> member of <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> has been called).</P>
<P>This function is useful when you want to check an invariant that depends on the interfaces of a class. For instance, the implementation of <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> uses this facility to check that an object implements all of the properties that are defined on its interfaces.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-add-interface-check.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>check_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>check_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>check_func</P></TD>
<TD class=parameter_description>
<P>function to be called after each interface is initialized</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-remove-interface-check></A>
<H3>g_type_remove_interface_check&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_remove_interface_check (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> check_data</CODE></EM>,
                               <EM class=parameter><CODE><A title=GTypeInterfaceCheckFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterfaceCheckFunc"><SPAN class=type>GTypeInterfaceCheckFunc</SPAN></A> check_func</CODE></EM>);</PRE>
<P>Removes an interface check function added with <A title=g_type_add_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-check"><CODE class=function>g_type_add_interface_check()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-remove-interface-check.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>check_data</P></TD>
<TD class=parameter_description>
<P>callback data passed to <A title=g_type_add_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-check"><CODE class=function>g_type_add_interface_check()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>check_func</P></TD>
<TD class=parameter_description>
<P>callback function passed to <A title=g_type_add_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-check"><CODE class=function>g_type_add_interface_check()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GTypeInterfaceCheckFunc></A>
<H3>GTypeInterfaceCheckFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GTypeInterfaceCheckFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> check_data</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>);</PRE>
<P>A callback called after an interface vtable is initialized. See <A title=g_type_add_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-check"><CODE class=function>g_type_add_interface_check()</CODE></A>.</P>
<DIV class=refsect3><A name=GTypeInterfaceCheckFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>check_data</P></TD>
<TD class=parameter_description>
<P>data passed to <A title=g_type_add_interface_check&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-check"><CODE class=function>g_type_add_interface_check()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>the interface that has been initialized. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-value-table-peek></A>
<H3>g_type_value_table_peek&nbsp;()</H3><PRE class=programlisting><A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=returnvalue>GTypeValueTable</SPAN></A>&nbsp;*
g_type_value_table_peek (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Returns the location of the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> associated with <EM class=parameter><CODE>type</CODE></EM> .</P>
<P>Note that this function should only be used from source code that implements or has internal knowledge of the implementation of <EM class=parameter><CODE>type</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-type-value-table-peek.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-value-table-peek.returns></A>
<H4>Returns</H4>
<P>location of the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> associated with <EM class=parameter><CODE>type</CODE></EM> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if there is no <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> associated with <EM class=parameter><CODE>type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-ensure></A>
<H3>g_type_ensure&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_ensure (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Ensures that the indicated <EM class=parameter><CODE>type</CODE></EM> has been registered with the type system, and its <CODE class=function>_class_init()</CODE> method has been run.</P>
<P>In theory, simply calling the type's <CODE class=function>_get_type()</CODE> method (or using the corresponding macro) is supposed take care of this. However, <CODE class=function>_get_type()</CODE> methods are often marked <A href="https://developer.gnome.org/gobject/glib-Miscellaneous-Macros.html#G-GNUC-CONST:CAPS"><CODE class=literal>G_GNUC_CONST</CODE></A> for performance reasons, even though this is technically incorrect (since <A href="https://developer.gnome.org/gobject/glib-Miscellaneous-Macros.html#G-GNUC-CONST:CAPS"><CODE class=literal>G_GNUC_CONST</CODE></A> requires that the function not have side effects, which <CODE class=function>_get_type()</CODE> methods do on the first call). As a result, if you write a bare call to a <CODE class=function>_get_type()</CODE> macro, it may get optimized out by the compiler. Using <A title=g_type_ensure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-ensure"><CODE class=function>g_type_ensure()</CODE></A> guarantees that the type's <CODE class=function>_get_type()</CODE> method is called.</P>
<DIV class=refsect3><A name=g-type-ensure.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-get-type-registration-serial></A>
<H3>g_type_get_type_registration_serial&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_type_get_type_registration_serial (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns an opaque serial number that represents the state of the set of registered types. Any time a type is registered this serial changes, which means you can cache information based on type lookups (such as <A title=g_type_from_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-from-name"><CODE class=function>g_type_from_name()</CODE></A>) and know if the cache is still valid at a later time by comparing the current serial with the one at the type lookup.</P>
<DIV class=refsect3><A name=g-type-get-type-registration-serial.returns></A>
<H4>Returns</H4>
<P>An unsigned int, representing the state of type registrations</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-36.html#api-index-2.36">2.36</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-get-instance-count></A>
<H3>g_type_get_instance_count&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>int</SPAN>
g_type_get_instance_count (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type</CODE></EM>);</PRE>
<P>Returns the number of instances allocated of the particular type; this is only available if GLib is built with debugging support and the instance_count debug flag is set (by setting the GOBJECT_DEBUG variable to include instance-count).</P>
<DIV class=refsect3><A name=g-type-get-instance-count.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-get-instance-count.returns></A>
<H4>Returns</H4>
<P>the number of instances allocated of the given type; if instance counts are not available, returns 0.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DECLARE-FINAL-TYPE:CAPS></A>
<H3>G_DECLARE_FINAL_TYPE()</H3><PRE class=programlisting>#define             G_DECLARE_FINAL_TYPE(ModuleObjName, module_obj_name, MODULE, OBJ_NAME, ParentName)</PRE>
<P>A convenience macro for emitting the usual declarations in the header file for a type which is not (at the present time) intended to be subclassed.</P>
<P>You might use it in a header as follows:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc ppc">#ifndef _myapp_window_h_</SPAN>
<SPAN class="gtkdoc ppc">#define _myapp_window_h_</SPAN>

<SPAN class="gtkdoc ppc">#include &lt;gtk/gtk.h&gt;</SPAN>

<SPAN class="gtkdoc ppc">#define MY_APP_TYPE_WINDOW my_app_window_get_type ()</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS">G_DECLARE_FINAL_TYPE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyAppWindow<SPAN class="gtkdoc opt">,</SPAN> my_app_window<SPAN class="gtkdoc opt">,</SPAN> MY_APP<SPAN class="gtkdoc opt">,</SPAN> WINDOW<SPAN class="gtkdoc opt">,</SPAN> GtkWindow<SPAN class="gtkdoc opt">)</SPAN>

MyAppWindow <SPAN class="gtkdoc opt">*</SPAN>    <SPAN class=function>my_app_window_new</SPAN>    <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc opt">...</SPAN>

<SPAN class="gtkdoc ppc">#endif</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This results in the following things happening:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P>the usual <CODE class=function>my_app_window_get_type()</CODE> function is declared with a return type of <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></LI>
<LI class=listitem>
<P>the MyAppWindow types is defined as a typedef of struct _MyAppWindow. The struct itself is not defined and should be defined from the .c file before <A title=G_DEFINE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE:CAPS"><CODE class=function>G_DEFINE_TYPE()</CODE></A> is used.</P></LI>
<LI class=listitem>
<P>the <CODE class=function>MY_APP_WINDOW()</CODE> cast is emitted as static inline function along with the <CODE class=function>MY_APP_IS_WINDOW()</CODE> type checking function</P></LI>
<LI class=listitem>
<P>the MyAppWindowClass type is defined as a struct containing GtkWindowClass. This is done for the convenience of the person defining the type and should not be considered to be part of the ABI. In particular, without a firm declaration of the instance structure, it is not possible to subclass the type and therefore the fact that the size of the class structure is exposed is not a concern and it can be freely changed at any point in the future.</P></LI>
<LI class=listitem>
<P>g_autoptr() support being added for your type, based on the type of your parent class</P></LI></UL></DIV>
<P>You can only use this function if your parent type also supports <A href="https://developer.gnome.org/gobject/glib-Miscellaneous-Macros.html#g-autoptr"><CODE class=function>g_autoptr()</CODE></A>.</P>
<P>Because the type macro (MY_APP_TYPE_WINDOW in the above example) is not a callable, you must continue to manually define this as a macro for yourself.</P>
<P>The declaration of the <CODE class=function>_get_type()</CODE> function is the first thing emitted by the macro. This allows this macro to be used in the usual way with export control and API versioning macros.</P>
<P>If you want to declare your own class structure, use <A title=G_DECLARE_DERIVABLE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS"><CODE class=function>G_DECLARE_DERIVABLE_TYPE()</CODE></A>.</P>
<P>If you are writing a library, it is important to note that it is possible to convert a type from using <A title=G_DECLARE_FINAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS"><CODE class=function>G_DECLARE_FINAL_TYPE()</CODE></A> to <A title=G_DECLARE_DERIVABLE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS"><CODE class=function>G_DECLARE_DERIVABLE_TYPE()</CODE></A> without breaking API or ABI. As a precaution, you should therefore use <A title=G_DECLARE_FINAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS"><CODE class=function>G_DECLARE_FINAL_TYPE()</CODE></A> until you are sure that it makes sense for your class to be subclassed. Once a class structure has been exposed it is not possible to change its size or remove or reorder items without breaking the API and/or ABI.</P>
<DIV class=refsect3><A name=G-DECLARE-FINAL-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ModuleObjName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in camel case (like GtkWidget)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>module_obj_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type in lowercase, with words separated by '_' (like 'gtk_widget')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>MODULE</P></TD>
<TD class=parameter_description>
<P>The name of the module, in all caps (like 'GTK')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>OBJ_NAME</P></TD>
<TD class=parameter_description>
<P>The bare name of the type, in all caps (like 'WIDGET')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>ParentName</P></TD>
<TD class=parameter_description>
<P>the name of the parent type, in camel case (like GtkWidget)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DECLARE-DERIVABLE-TYPE:CAPS></A>
<H3>G_DECLARE_DERIVABLE_TYPE()</H3><PRE class=programlisting>#define             G_DECLARE_DERIVABLE_TYPE(ModuleObjName, module_obj_name, MODULE, OBJ_NAME, ParentName)</PRE>
<P>A convenience macro for emitting the usual declarations in the header file for a type which will is intended to be subclassed.</P>
<P>You might use it in a header as follows:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc ppc">#ifndef _gtk_frobber_h_</SPAN>
<SPAN class="gtkdoc ppc">#define _gtk_frobber_h_</SPAN>

<SPAN class="gtkdoc ppc">#define GTK_TYPE_FROBBER gtk_frobber_get_type ()</SPAN>
GDK_AVAILABLE_IN_3_12
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS">G_DECLARE_DERIVABLE_TYPE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkFrobber<SPAN class="gtkdoc opt">,</SPAN> gtk_frobber<SPAN class="gtkdoc opt">,</SPAN> GTK<SPAN class="gtkdoc opt">,</SPAN> FROBBER<SPAN class="gtkdoc opt">,</SPAN> GtkWidget<SPAN class="gtkdoc opt">)</SPAN>

<SPAN class="gtkdoc kwb">struct</SPAN> _GtkFrobberClass
<SPAN class="gtkdoc opt">{</SPAN>
  GtkWidgetClass parent_class<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class="gtkdoc kwb">void</SPAN> <SPAN class="gtkdoc opt">(*</SPAN> handle_frob<SPAN class="gtkdoc opt">)  (</SPAN>GtkFrobber <SPAN class="gtkdoc opt">*</SPAN>frobber<SPAN class="gtkdoc opt">,</SPAN>
                         guint       n_frobs<SPAN class="gtkdoc opt">);</SPAN>

  gpointer padding<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>12</SPAN><SPAN class="gtkdoc opt">];</SPAN>
<SPAN class="gtkdoc opt">};</SPAN>

GtkWidget <SPAN class="gtkdoc opt">*</SPAN>    <SPAN class=function>gtk_frobber_new</SPAN>   <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc opt">...</SPAN>

<SPAN class="gtkdoc ppc">#endif</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This results in the following things happening:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P>the usual <CODE class=function>gtk_frobber_get_type()</CODE> function is declared with a return type of <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></LI>
<LI class=listitem>
<P>the GtkFrobber struct is created with GtkWidget as the first and only item. You are expected to use a private structure from your .c file to store your instance variables.</P></LI>
<LI class=listitem>
<P>the GtkFrobberClass type is defined as a typedef to struct _GtkFrobberClass, which is left undefined. You should do this from the header file directly after you use the macro.</P></LI>
<LI class=listitem>
<P>the <CODE class=function>GTK_FROBBER()</CODE> and <CODE class=function>GTK_FROBBER_CLASS()</CODE> casts are emitted as static inline functions along with the <CODE class=function>GTK_IS_FROBBER()</CODE> and <CODE class=function>GTK_IS_FROBBER_CLASS()</CODE> type checking functions and <CODE class=function>GTK_FROBBER_GET_CLASS()</CODE> function.</P></LI>
<LI class=listitem>
<P>g_autoptr() support being added for your type, based on the type of your parent class</P></LI></UL></DIV>
<P>You can only use this function if your parent type also supports <A href="https://developer.gnome.org/gobject/glib-Miscellaneous-Macros.html#g-autoptr"><CODE class=function>g_autoptr()</CODE></A>.</P>
<P>Because the type macro (GTK_TYPE_FROBBER in the above example) is not a callable, you must continue to manually define this as a macro for yourself.</P>
<P>The declaration of the <CODE class=function>_get_type()</CODE> function is the first thing emitted by the macro. This allows this macro to be used in the usual way with export control and API versioning macros.</P>
<P>If you are writing a library, it is important to note that it is possible to convert a type from using <A title=G_DECLARE_FINAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS"><CODE class=function>G_DECLARE_FINAL_TYPE()</CODE></A> to <A title=G_DECLARE_DERIVABLE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS"><CODE class=function>G_DECLARE_DERIVABLE_TYPE()</CODE></A> without breaking API or ABI. As a precaution, you should therefore use <A title=G_DECLARE_FINAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS"><CODE class=function>G_DECLARE_FINAL_TYPE()</CODE></A> until you are sure that it makes sense for your class to be subclassed. Once a class structure has been exposed it is not possible to change its size or remove or reorder items without breaking the API and/or ABI. If you want to declare your own class structure, use <A title=G_DECLARE_DERIVABLE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS"><CODE class=function>G_DECLARE_DERIVABLE_TYPE()</CODE></A>. If you want to declare a class without exposing the class or instance structures, use <A title=G_DECLARE_FINAL_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-FINAL-TYPE:CAPS"><CODE class=function>G_DECLARE_FINAL_TYPE()</CODE></A>.</P>
<P>If you must use <A title=G_DECLARE_DERIVABLE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-DERIVABLE-TYPE:CAPS"><CODE class=function>G_DECLARE_DERIVABLE_TYPE()</CODE></A> you should be sure to include some padding at the bottom of your class structure to leave space for the addition of future virtual functions.</P>
<DIV class=refsect3><A name=G-DECLARE-DERIVABLE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ModuleObjName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in camel case (like GtkWidget)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>module_obj_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type in lowercase, with words separated by '_' (like 'gtk_widget')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>MODULE</P></TD>
<TD class=parameter_description>
<P>The name of the module, in all caps (like 'GTK')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>OBJ_NAME</P></TD>
<TD class=parameter_description>
<P>The bare name of the type, in all caps (like 'WIDGET')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>ParentName</P></TD>
<TD class=parameter_description>
<P>the name of the parent type, in camel case (like GtkWidget)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DECLARE-INTERFACE:CAPS></A>
<H3>G_DECLARE_INTERFACE()</H3><PRE class=programlisting>#define             G_DECLARE_INTERFACE(ModuleObjName, module_obj_name, MODULE, OBJ_NAME, PrerequisiteName)</PRE>
<P>A convenience macro for emitting the usual declarations in the header file for a GInterface type.</P>
<P>You might use it in a header as follows:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc ppc">#ifndef _my_model_h_</SPAN>
<SPAN class="gtkdoc ppc">#define _my_model_h_</SPAN>

<SPAN class="gtkdoc ppc">#define MY_TYPE_MODEL my_model_get_type ()</SPAN>
GDK_AVAILABLE_IN_3_12
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DECLARE-INTERFACE:CAPS">G_DECLARE_INTERFACE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyModel<SPAN class="gtkdoc opt">,</SPAN> my_model<SPAN class="gtkdoc opt">,</SPAN> MY<SPAN class="gtkdoc opt">,</SPAN> MODEL<SPAN class="gtkdoc opt">,</SPAN> GObject<SPAN class="gtkdoc opt">)</SPAN>

<SPAN class="gtkdoc kwb">struct</SPAN> _MyModelInterface
<SPAN class="gtkdoc opt">{</SPAN>
  GTypeInterface g_iface<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer">gpointer</A></SPAN> <SPAN class="gtkdoc opt">(*</SPAN> get_item<SPAN class="gtkdoc opt">)  (</SPAN>MyModel <SPAN class="gtkdoc opt">*</SPAN>model<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">};</SPAN>

gpointer <SPAN class=function>my_model_get_item</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyModel <SPAN class="gtkdoc opt">*</SPAN>model<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc opt">...</SPAN>

<SPAN class="gtkdoc ppc">#endif</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This results in the following things happening:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P>the usual <CODE class=function>my_model_get_type()</CODE> function is declared with a return type of <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></LI>
<LI class=listitem>
<P>the MyModelInterface type is defined as a typedef to struct _MyModelInterface, which is left undefined. You should do this from the header file directly after you use the macro.</P></LI>
<LI class=listitem>
<P>the <CODE class=function>MY_MODEL()</CODE> cast is emitted as static inline functions along with the <CODE class=function>MY_IS_MODEL()</CODE> type checking function and <CODE class=function>MY_MODEL_GET_IFACE()</CODE> function.</P></LI>
<LI class=listitem>
<P>g_autoptr() support being added for your type, based on your prerequisite type.</P></LI></UL></DIV>
<P>You can only use this function if your prerequisite type also supports <A href="https://developer.gnome.org/gobject/glib-Miscellaneous-Macros.html#g-autoptr"><CODE class=function>g_autoptr()</CODE></A>.</P>
<P>Because the type macro (MY_TYPE_MODEL in the above example) is not a callable, you must continue to manually define this as a macro for yourself.</P>
<P>The declaration of the <CODE class=function>_get_type()</CODE> function is the first thing emitted by the macro. This allows this macro to be used in the usual way with export control and API versioning macros.</P>
<DIV class=refsect3><A name=G-DECLARE-INTERFACE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ModuleObjName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in camel case (like GtkWidget)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>module_obj_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type in lowercase, with words separated by '_' (like 'gtk_widget')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>MODULE</P></TD>
<TD class=parameter_description>
<P>The name of the module, in all caps (like 'GTK')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>OBJ_NAME</P></TD>
<TD class=parameter_description>
<P>The bare name of the type, in all caps (like 'WIDGET')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>PrerequisiteName</P></TD>
<TD class=parameter_description>
<P>the name of the prerequisite type, in camel case (like GtkWidget)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-TYPE:CAPS></A>
<H3>G_DEFINE_TYPE()</H3><PRE class=programlisting>#define G_DEFINE_TYPE(TN, t_n, T_P)			    G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, {})
</PRE>
<P>A convenience macro for type implementations, which declares a class initialization function, an instance initialization function (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> for information about these) and a static variable named <CODE class=literal>t_n_parent_class</CODE> pointing to the parent class. Furthermore, it defines a *_get_type() function. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<DIV class=refsect3><A name=G-DEFINE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-TYPE-WITH-PRIVATE:CAPS></A>
<H3>G_DEFINE_TYPE_WITH_PRIVATE()</H3><PRE class=programlisting>#define G_DEFINE_TYPE_WITH_PRIVATE(TN, t_n, T_P)            G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, 0, G_ADD_PRIVATE (TN))
</PRE>
<P>A convenience macro for type implementations, which declares a class initialization function, an instance initialization function (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> for information about these), a static variable named <CODE class=literal>t_n_parent_class</CODE> pointing to the parent class, and adds private instance data to the type. Furthermore, it defines a *_get_type() function. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<P>Note that private structs added with this macros must have a struct name of the form <EM class=parameter><CODE>TN</CODE></EM> Private.</P>
<DIV class=refsect3><A name=G-DEFINE-TYPE-WITH-PRIVATE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-TYPE-WITH-CODE:CAPS></A>
<H3>G_DEFINE_TYPE_WITH_CODE()</H3><PRE class=programlisting>#define G_DEFINE_TYPE_WITH_CODE(TN, t_n, T_P, _C_)	    _G_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, 0) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
</PRE>
<P>A convenience macro for type implementations. Similar to <A title=G_DEFINE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE:CAPS"><CODE class=function>G_DEFINE_TYPE()</CODE></A>, but allows you to insert custom code into the *_get_type() function, e.g. interface implementations via <A title=G_IMPLEMENT_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-IMPLEMENT-INTERFACE:CAPS"><CODE class=function>G_IMPLEMENT_INTERFACE()</CODE></A>. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<DIV class=refsect3><A name=G-DEFINE-TYPE-WITH-CODE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_C_</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the *_get_type() function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-ABSTRACT-TYPE:CAPS></A>
<H3>G_DEFINE_ABSTRACT_TYPE()</H3><PRE class=programlisting>#define G_DEFINE_ABSTRACT_TYPE(TN, t_n, T_P)		    G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT, {})
</PRE>
<P>A convenience macro for type implementations. Similar to <A title=G_DEFINE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE:CAPS"><CODE class=function>G_DEFINE_TYPE()</CODE></A>, but defines an abstract type. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<DIV class=refsect3><A name=G-DEFINE-ABSTRACT-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-ABSTRACT-TYPE-WITH-PRIVATE:CAPS></A>
<H3>G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE()</H3><PRE class=programlisting>#define G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE(TN, t_n, T_P)   G_DEFINE_TYPE_EXTENDED (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT, G_ADD_PRIVATE (TN))
</PRE>
<P>Similar to <A title=G_DEFINE_TYPE_WITH_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-PRIVATE:CAPS"><CODE class=function>G_DEFINE_TYPE_WITH_PRIVATE()</CODE></A>, but defines an abstract type. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<DIV class=refsect3><A name=G-DEFINE-ABSTRACT-TYPE-WITH-PRIVATE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-ABSTRACT-TYPE-WITH-CODE:CAPS></A>
<H3>G_DEFINE_ABSTRACT_TYPE_WITH_CODE()</H3><PRE class=programlisting>#define G_DEFINE_ABSTRACT_TYPE_WITH_CODE(TN, t_n, T_P, _C_) _G_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, G_TYPE_FLAG_ABSTRACT) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
</PRE>
<P>A convenience macro for type implementations. Similar to <A title=G_DEFINE_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-CODE:CAPS"><CODE class=function>G_DEFINE_TYPE_WITH_CODE()</CODE></A>, but defines an abstract type and allows you to insert custom code into the *_get_type() function, e.g. interface implementations via <A title=G_IMPLEMENT_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-IMPLEMENT-INTERFACE:CAPS"><CODE class=function>G_IMPLEMENT_INTERFACE()</CODE></A>. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<DIV class=refsect3><A name=G-DEFINE-ABSTRACT-TYPE-WITH-CODE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_C_</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the <EM class=parameter><CODE><CODE class=function>type_name_get_type()</CODE></CODE></EM> function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-ADD-PRIVATE:CAPS></A>
<H3>G_ADD_PRIVATE()</H3><PRE class=programlisting>#define             G_ADD_PRIVATE(TypeName)</PRE>
<P>A convenience macro to ease adding private data to instances of a new type in the <EM class=parameter><CODE>_C_</CODE></EM> section of <A title=G_DEFINE_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-CODE:CAPS"><CODE class=function>G_DEFINE_TYPE_WITH_CODE()</CODE></A> or <A title=G_DEFINE_ABSTRACT_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-ABSTRACT-TYPE-WITH-CODE:CAPS"><CODE class=function>G_DEFINE_ABSTRACT_TYPE_WITH_CODE()</CODE></A>.</P>
<P>For instance:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> _MyObject MyObject<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> _MyObjectClass MyObjectClass<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> <SPAN class="gtkdoc opt">{</SPAN>
  gint foo<SPAN class="gtkdoc opt">;</SPAN>
  gint bar<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN> MyObjectPrivate<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-CODE:CAPS">G_DEFINE_TYPE_WITH_CODE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject<SPAN class="gtkdoc opt">,</SPAN> my_object<SPAN class="gtkdoc opt">,</SPAN> G_TYPE_OBJECT<SPAN class="gtkdoc opt">,</SPAN>
                         <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-ADD-PRIVATE:CAPS">G_ADD_PRIVATE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject<SPAN class="gtkdoc opt">))</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Will add MyObjectPrivate as the private data to any instance of the MyObject type.</P>
<P>G_DEFINE_TYPE_* macros will automatically create a private function based on the arguments to this macro, which can be used to safely retrieve the private data from an instance of the type; for instance:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>gint
<SPAN class=function>my_object_get_foo</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject <SPAN class="gtkdoc opt">*</SPAN>obj<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  MyObjectPrivate <SPAN class="gtkdoc opt">*</SPAN>priv <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>my_object_get_instance_private</SPAN> <SPAN class="gtkdoc opt">(</SPAN>obj<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-val-if-fail">g_return_val_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>MY_IS_OBJECT</SPAN> <SPAN class="gtkdoc opt">(</SPAN>obj<SPAN class="gtkdoc opt">),</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>return</SPAN> priv<SPAN class="gtkdoc opt">-&gt;</SPAN>foo<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>my_object_set_bar</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject <SPAN class="gtkdoc opt">*</SPAN>obj<SPAN class="gtkdoc opt">,</SPAN>
                   gint      bar<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  MyObjectPrivate <SPAN class="gtkdoc opt">*</SPAN>priv <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>my_object_get_instance_private</SPAN> <SPAN class="gtkdoc opt">(</SPAN>obj<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-if-fail">g_return_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>MY_IS_OBJECT</SPAN> <SPAN class="gtkdoc opt">(</SPAN>obj<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>priv<SPAN class="gtkdoc opt">-&gt;</SPAN>bar <SPAN class="gtkdoc opt">!=</SPAN> bar<SPAN class="gtkdoc opt">)</SPAN>
    priv<SPAN class="gtkdoc opt">-&gt;</SPAN>bar <SPAN class="gtkdoc opt">=</SPAN> bar<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Note that this macro can only be used together with the G_DEFINE_TYPE_* macros, since it depends on variable names from those macros.</P>
<P>Also note that private structs added with these macros must have a struct name of the form <CODE class=literal>TypeNamePrivate</CODE>.</P>
<P>It is safe to call _get_instance_private on <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> or invalid object since it's only adding an offset to the instance pointer. In that case the returned pointer must not be dereferenced.</P>
<DIV class=refsect3><A name=G-ADD-PRIVATE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>the name of the type in CamelCase</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-PRIVATE-OFFSET:CAPS></A>
<H3>G_PRIVATE_OFFSET()</H3><PRE class=programlisting>#define             G_PRIVATE_OFFSET(TypeName, field)</PRE>
<P>Evaluates to the offset of the <EM class=parameter><CODE>field</CODE></EM> inside the instance private data structure for <EM class=parameter><CODE>TypeName</CODE></EM> .</P>
<P>Note that this macro can only be used together with the G_DEFINE_TYPE_* and <A title=G_ADD_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-ADD-PRIVATE:CAPS"><CODE class=function>G_ADD_PRIVATE()</CODE></A> macros, since it depends on variable names from those macros.</P>
<DIV class=refsect3><A name=G-PRIVATE-OFFSET.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>the name of the type in CamelCase</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>field</P></TD>
<TD class=parameter_description>
<P>the name of the field in the private data structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-PRIVATE-FIELD:CAPS></A>
<H3>G_PRIVATE_FIELD()</H3><PRE class=programlisting>#define             G_PRIVATE_FIELD(TypeName, inst, field_type, field_name)</PRE>
<P>Evaluates to the <EM class=parameter><CODE>field_name</CODE></EM> inside the <EM class=parameter><CODE>inst</CODE></EM> private data structure for <EM class=parameter><CODE>TypeName</CODE></EM> .</P>
<P>Note that this macro can only be used together with the G_DEFINE_TYPE_* and <A title=G_ADD_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-ADD-PRIVATE:CAPS"><CODE class=function>G_ADD_PRIVATE()</CODE></A> macros, since it depends on variable names from those macros.</P>
<DIV class=refsect3><A name=G-PRIVATE-FIELD.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>the name of the type in CamelCase</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>inst</P></TD>
<TD class=parameter_description>
<P>the instance of <EM class=parameter><CODE>TypeName</CODE></EM> you wish to access</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>field_type</P></TD>
<TD class=parameter_description>
<P>the type of the field in the private data structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>field_name</P></TD>
<TD class=parameter_description>
<P>the name of the field in the private data structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-PRIVATE-FIELD-P:CAPS></A>
<H3>G_PRIVATE_FIELD_P()</H3><PRE class=programlisting>#define             G_PRIVATE_FIELD_P(TypeName, inst, field_name)</PRE>
<P>Evaluates to a pointer to the <EM class=parameter><CODE>field_name</CODE></EM> inside the <EM class=parameter><CODE>inst</CODE></EM> private data structure for <EM class=parameter><CODE>TypeName</CODE></EM> .</P>
<P>Note that this macro can only be used together with the G_DEFINE_TYPE_* and <A title=G_ADD_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-ADD-PRIVATE:CAPS"><CODE class=function>G_ADD_PRIVATE()</CODE></A> macros, since it depends on variable names from those macros.</P>
<DIV class=refsect3><A name=G-PRIVATE-FIELD-P.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>the name of the type in CamelCase</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>inst</P></TD>
<TD class=parameter_description>
<P>the instance of <EM class=parameter><CODE>TypeName</CODE></EM> you wish to access</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>field_name</P></TD>
<TD class=parameter_description>
<P>the name of the field in the private data structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-INTERFACE:CAPS></A>
<H3>G_DEFINE_INTERFACE()</H3><PRE class=programlisting>#define G_DEFINE_INTERFACE(TN, t_n, T_P)		    G_DEFINE_INTERFACE_WITH_CODE(TN, t_n, T_P, ;)
</PRE>
<P>A convenience macro for <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> definitions, which declares a default vtable initialization function and defines a *_get_type() function.</P>
<P>The macro expects the interface initialization function to have the name <CODE class=literal>t_n ## _default_init</CODE>, and the interface structure to have the name <CODE class=literal>TN ## Interface</CODE>.</P>
<DIV class=refsect3><A name=G-DEFINE-INTERFACE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the prerequisite type for the interface, or 0 (<A title=G_TYPE_INVALID class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INVALID:CAPS"><CODE class=literal>G_TYPE_INVALID</CODE></A>) for no prerequisite type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-INTERFACE-WITH-CODE:CAPS></A>
<H3>G_DEFINE_INTERFACE_WITH_CODE()</H3><PRE class=programlisting>#define G_DEFINE_INTERFACE_WITH_CODE(TN, t_n, T_P, _C_)     _G_DEFINE_INTERFACE_EXTENDED_BEGIN(TN, t_n, T_P) {_C_;} _G_DEFINE_INTERFACE_EXTENDED_END()
</PRE>
<P>A convenience macro for <A title="struct GTypeInterface" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInterface"><SPAN class=type>GTypeInterface</SPAN></A> definitions. Similar to <A title=G_DEFINE_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-INTERFACE:CAPS"><CODE class=function>G_DEFINE_INTERFACE()</CODE></A>, but allows you to insert custom code into the *_get_type() function, e.g. additional interface implementations via <A title=G_IMPLEMENT_INTERFACE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-IMPLEMENT-INTERFACE:CAPS"><CODE class=function>G_IMPLEMENT_INTERFACE()</CODE></A>, or additional prerequisite types. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for a similar example using <A title=G_DEFINE_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-CODE:CAPS"><CODE class=function>G_DEFINE_TYPE_WITH_CODE()</CODE></A>.</P>
<DIV class=refsect3><A name=G-DEFINE-INTERFACE-WITH-CODE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the prerequisite type for the interface, or 0 (<A title=G_TYPE_INVALID class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INVALID:CAPS"><CODE class=literal>G_TYPE_INVALID</CODE></A>) for no prerequisite type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_C_</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the *_get_type() function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-IMPLEMENT-INTERFACE:CAPS></A>
<H3>G_IMPLEMENT_INTERFACE()</H3><PRE class=programlisting>#define             G_IMPLEMENT_INTERFACE(TYPE_IFACE, iface_init)</PRE>
<P>A convenience macro to ease interface addition in the <CODE class=literal>_C_</CODE> section of <A title=G_DEFINE_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-WITH-CODE:CAPS"><CODE class=function>G_DEFINE_TYPE_WITH_CODE()</CODE></A> or <A title=G_DEFINE_ABSTRACT_TYPE_WITH_CODE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-ABSTRACT-TYPE-WITH-CODE:CAPS"><CODE class=function>G_DEFINE_ABSTRACT_TYPE_WITH_CODE()</CODE></A>. See <A title=G_DEFINE_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_TYPE_EXTENDED()</CODE></A> for an example.</P>
<P>Note that this macro can only be used together with the G_DEFINE_TYPE_* macros, since it depends on variable names from those macros.</P>
<DIV class=refsect3><A name=G-IMPLEMENT-INTERFACE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TYPE_IFACE</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the interface to add</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>iface_init</P></TD>
<TD class=parameter_description>
<P>The interface init function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-TYPE-EXTENDED:CAPS></A>
<H3>G_DEFINE_TYPE_EXTENDED()</H3><PRE class=programlisting>#define G_DEFINE_TYPE_EXTENDED(TN, t_n, T_P, _f_, _C_)	    _G_DEFINE_TYPE_EXTENDED_BEGIN (TN, t_n, T_P, _f_) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
</PRE>
<P>The most general convenience macro for type implementations, on which <A title=G_DEFINE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE:CAPS"><CODE class=function>G_DEFINE_TYPE()</CODE></A>, etc are based.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE-EXTENDED:CAPS">G_DEFINE_TYPE_EXTENDED</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadget<SPAN class="gtkdoc opt">,</SPAN>
                        gtk_gadget<SPAN class="gtkdoc opt">,</SPAN>
                        GTK_TYPE_WIDGET<SPAN class="gtkdoc opt">,</SPAN>
                        <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                        <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-IMPLEMENT-INTERFACE:CAPS">G_IMPLEMENT_INTERFACE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>TYPE_GIZMO<SPAN class="gtkdoc opt">,</SPAN>
                                               gtk_gadget_gizmo_init<SPAN class="gtkdoc opt">));</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>expands to</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_init</SPAN>       <SPAN class="gtkdoc opt">(</SPAN>GtkGadget      <SPAN class="gtkdoc opt">*</SPAN>self<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadgetClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc kwb">static</SPAN> gpointer gtk_gadget_parent_class <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_class_intern_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  gtk_gadget_parent_class <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-peek-parent">g_type_class_peek_parent</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function>gtk_gadget_class_init</SPAN> <SPAN class="gtkdoc opt">((</SPAN>GtkGadgetClass<SPAN class="gtkdoc opt">*)</SPAN> klass<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

GType
<SPAN class=function>gtk_gadget_get_type</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwb">static</SPAN> <SPAN class="gtkdoc kwc">volatile</SPAN> gsize g_define_type_id__volatile <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Threads.html#g-once-init-enter">g_once_init_enter</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>g_define_type_id__volatile<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      GType g_define_type_id <SPAN class="gtkdoc opt">=</SPAN>
        <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static-simple">g_type_register_static_simple</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GTK_TYPE_WIDGET<SPAN class="gtkdoc opt">,</SPAN>
                                       <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-intern-static-string">g_intern_static_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"GtkGadget"</SPAN><SPAN class="gtkdoc opt">),</SPAN>
                                       <SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadgetClass<SPAN class="gtkdoc opt">),</SPAN>
                                       <SPAN class="gtkdoc opt">(</SPAN>GClassInitFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_class_intern_init<SPAN class="gtkdoc opt">,</SPAN>
                                       <SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadget<SPAN class="gtkdoc opt">),</SPAN>
                                       <SPAN class="gtkdoc opt">(</SPAN>GInstanceInitFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_init<SPAN class="gtkdoc opt">,</SPAN>
                                       <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class="gtkdoc opt">{</SPAN>
        <SPAN class="gtkdoc kwb">const</SPAN> GInterfaceInfo g_implement_interface_info <SPAN class="gtkdoc opt">= {</SPAN>
          <SPAN class="gtkdoc opt">(</SPAN>GInterfaceInitFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_gizmo_init
        <SPAN class="gtkdoc opt">};</SPAN>
        <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-add-interface-static">g_type_add_interface_static</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>g_define_type_id<SPAN class="gtkdoc opt">,</SPAN> TYPE_GIZMO<SPAN class="gtkdoc opt">, &amp;</SPAN>g_implement_interface_info<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class="gtkdoc opt">}</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Threads.html#g-once-init-leave">g_once_init_leave</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>g_define_type_id__volatile<SPAN class="gtkdoc opt">,</SPAN> g_define_type_id<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
  <SPAN class=keyword>return</SPAN> g_define_type_id__volatile<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>The only pieces which have to be manually provided are the definitions of the instance and class structure and the definitions of the instance and class init functions.</P>
<DIV class=refsect3><A name=G-DEFINE-TYPE-EXTENDED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_f_</P></TD>
<TD class=parameter_description>
<P><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> to pass to <A title=g_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static"><CODE class=function>g_type_register_static()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_C_</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the *_get_type() function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-BOXED-TYPE:CAPS></A>
<H3>G_DEFINE_BOXED_TYPE()</H3><PRE class=programlisting>#define G_DEFINE_BOXED_TYPE(TypeName, type_name, copy_func, free_func) G_DEFINE_BOXED_TYPE_WITH_CODE (TypeName, type_name, copy_func, free_func, {})
</PRE>
<P>A convenience macro for boxed type implementations, which defines a <CODE class=function>type_name_get_type()</CODE> function registering the boxed type.</P>
<DIV class=refsect3><A name=G-DEFINE-BOXED-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>copy_func</P></TD>
<TD class=parameter_description>
<P>the <A title=GBoxedCopyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedCopyFunc"><SPAN class=type>GBoxedCopyFunc</SPAN></A> for the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>free_func</P></TD>
<TD class=parameter_description>
<P>the <A title=GBoxedFreeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedFreeFunc"><SPAN class=type>GBoxedFreeFunc</SPAN></A> for the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-BOXED-TYPE-WITH-CODE:CAPS></A>
<H3>G_DEFINE_BOXED_TYPE_WITH_CODE()</H3><PRE class=programlisting>#define G_DEFINE_BOXED_TYPE_WITH_CODE(TypeName, type_name, copy_func, free_func, _C_) _G_DEFINE_BOXED_TYPE_BEGIN (TypeName, type_name, copy_func, free_func) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
</PRE>
<P>A convenience macro for boxed type implementations. Similar to <A title=G_DEFINE_BOXED_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-BOXED-TYPE:CAPS"><CODE class=function>G_DEFINE_BOXED_TYPE()</CODE></A>, but allows to insert custom code into the <CODE class=function>type_name_get_type()</CODE> function, e.g. to register value transformations with <A title=g_value_register_transform_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-register-transform-func"><CODE class=function>g_value_register_transform_func()</CODE></A>, for instance:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-BOXED-TYPE-WITH-CODE:CAPS">G_DEFINE_BOXED_TYPE_WITH_CODE</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GdkRectangle<SPAN class="gtkdoc opt">,</SPAN> gdk_rectangle<SPAN class="gtkdoc opt">,</SPAN>
                               gdk_rectangle_copy<SPAN class="gtkdoc opt">,</SPAN>
                               gdk_rectangle_free<SPAN class="gtkdoc opt">,</SPAN>
                               <SPAN class=function>register_rectangle_transform_funcs</SPAN> <SPAN class="gtkdoc opt">(</SPAN>g_define_type_id<SPAN class="gtkdoc opt">))</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Similarly to the <A title=G_DEFINE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-TYPE:CAPS"><CODE class=literal>G_DEFINE_TYPE</CODE></A> family of macros, the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the newly defined boxed type is exposed in the <CODE class=literal>g_define_type_id</CODE> variable.</P>
<DIV class=refsect3><A name=G-DEFINE-BOXED-TYPE-WITH-CODE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>copy_func</P></TD>
<TD class=parameter_description>
<P>the <A title=GBoxedCopyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedCopyFunc"><SPAN class=type>GBoxedCopyFunc</SPAN></A> for the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>free_func</P></TD>
<TD class=parameter_description>
<P>the <A title=GBoxedFreeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedFreeFunc"><SPAN class=type>GBoxedFreeFunc</SPAN></A> for the new type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_C_</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the *_get_type() function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-POINTER-TYPE:CAPS></A>
<H3>G_DEFINE_POINTER_TYPE()</H3><PRE class=programlisting>#define G_DEFINE_POINTER_TYPE(TypeName, type_name) G_DEFINE_POINTER_TYPE_WITH_CODE (TypeName, type_name, {})
</PRE>
<P>A convenience macro for pointer type implementations, which defines a <CODE class=function>type_name_get_type()</CODE> function registering the pointer type.</P>
<DIV class=refsect3><A name=G-DEFINE-POINTER-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-POINTER-TYPE-WITH-CODE:CAPS></A>
<H3>G_DEFINE_POINTER_TYPE_WITH_CODE()</H3><PRE class=programlisting>#define G_DEFINE_POINTER_TYPE_WITH_CODE(TypeName, type_name, _C_) _G_DEFINE_POINTER_TYPE_BEGIN (TypeName, type_name) {_C_;} _G_DEFINE_TYPE_EXTENDED_END()
</PRE>
<P>A convenience macro for pointer type implementations. Similar to <A title=G_DEFINE_POINTER_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-DEFINE-POINTER-TYPE:CAPS"><CODE class=function>G_DEFINE_POINTER_TYPE()</CODE></A>, but allows to insert custom code into the <CODE class=function>type_name_get_type()</CODE> function.</P>
<DIV class=refsect3><A name=G-DEFINE-POINTER-TYPE-WITH-CODE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_C_</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the *_get_type() function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Type-Information.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GType></A>
<H3>GType</H3>
<P>A numerical value which represents the unique identifier of a registered type.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FUNDAMENTAL-MAX:CAPS></A>
<H3>G_TYPE_FUNDAMENTAL_MAX</H3><PRE class=programlisting>#define&nbsp;G_TYPE_FUNDAMENTAL_MAX		(255 &lt;&lt; G_TYPE_FUNDAMENTAL_SHIFT)
</PRE>
<P>An integer constant that represents the number of identifiers reserved for types that are assigned at compile-time.</P></DIV>
<HR>

<DIV class=refsect2><A name=GTypeInterface></A>
<H3>struct GTypeInterface</H3><PRE class=programlisting>struct GTypeInterface {
};
</PRE>
<P>An opaque structure used as the base of all interface types.</P></DIV>
<HR>

<DIV class=refsect2><A name=GTypeInstance></A>
<H3>struct GTypeInstance</H3><PRE class=programlisting>struct GTypeInstance {
};
</PRE>
<P>An opaque structure used as the base of all type instances.</P></DIV>
<HR>

<DIV class=refsect2><A name=GTypeClass></A>
<H3>struct GTypeClass</H3><PRE class=programlisting>struct GTypeClass {
};
</PRE>
<P>An opaque structure used as the base of all classes.</P></DIV>
<HR>

<DIV class=refsect2><A name=GTypeInfo></A>
<H3>struct GTypeInfo</H3><PRE class=programlisting>struct GTypeInfo {
  /* interface types, classed types, instantiated types */
  guint16                class_size;
  
  GBaseInitFunc          base_init;
  GBaseFinalizeFunc      base_finalize;
  
  /* interface types, classed types, instantiated types */
  GClassInitFunc         class_init;
  GClassFinalizeFunc     class_finalize;
  gconstpointer          class_data;
  
  /* instantiated types */
  guint16                instance_size;
  guint16                n_preallocs;
  GInstanceInitFunc      instance_init;
  
  /* value handling */
  const GTypeValueTable&nbsp;*value_table;
};
</PRE>
<P>This structure is used to provide the type system with the information required to initialize and destruct (finalize) a type's class and its instances.</P>
<P>The initialized structure is passed to the <A title=g_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static"><CODE class=function>g_type_register_static()</CODE></A> function (or is copied into the provided <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure in the <A title=g_type_plugin_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-type-info"><CODE class=function>g_type_plugin_complete_type_info()</CODE></A>). The type system will perform a deep copy of this structure, so its memory does not need to be persistent across invocation of <A title=g_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-static"><CODE class=function>g_type_register_static()</CODE></A>.</P>
<DIV class=refsect3><A name=GTypeInfo.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.class-size></A>class_size</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Size of the class structure (required for interface, classed and instantiatable types)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GBaseInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseInitFunc"><SPAN class=type>GBaseInitFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.base-init></A>base_init</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Location of the base initialization function (optional)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GBaseFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GBaseFinalizeFunc"><SPAN class=type>GBaseFinalizeFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.base-finalize></A>base_finalize</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Location of the base finalization function (optional)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GClassInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassInitFunc"><SPAN class=type>GClassInitFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.class-init></A>class_init</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Location of the class initialization function for classed and instantiatable types. Location of the default vtable inititalization function for interface types. (optional) This function is used both to fill in virtual functions in the class or default vtable, and to do type-specific setup such as registering signals and object properties.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GClassFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GClassFinalizeFunc"><SPAN class=type>GClassFinalizeFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.class-finalize></A>class_finalize</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Location of the class finalization function for classed and instantiatable types. Location of the default vtable finalization function for interface types. (optional)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.class-data></A>class_data</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>User-supplied data passed to the class init/finalize functions</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.instance-size></A>instance_size</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Size of the instance (object) structure (required for instantiatable types only)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.n-preallocs></A>n_preallocs</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Prior to GLib 2.10, it specified the number of pre-allocated (cached) instances to reserve memory for (0 indicates no caching). Since GLib 2.10, it is ignored, since instances are allocated with the slice allocator now.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GInstanceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInstanceInitFunc"><SPAN class=type>GInstanceInitFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeInfo.instance-init></A>instance_init</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Location of the instance initialization function (optional, for instantiatable types only)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GTypeInfo.value-table></A>value_table</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>A <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> function table for generic handling of GValues of this type (usually only useful for fundamental types)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeFundamentalInfo></A>
<H3>struct GTypeFundamentalInfo</H3><PRE class=programlisting>struct GTypeFundamentalInfo {
  GTypeFundamentalFlags  type_flags;
};
</PRE>
<P>A structure that provides information to the type system which is used specifically for managing fundamental types.</P>
<DIV class=refsect3><A name=GTypeFundamentalInfo.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="enum GTypeFundamentalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalFlags"><SPAN class=type>GTypeFundamentalFlags</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeFundamentalInfo.type-flags></A>type_flags</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P><A title="enum GTypeFundamentalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFundamentalFlags"><SPAN class=type>GTypeFundamentalFlags</SPAN></A> describing the characteristics of the fundamental type</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GInterfaceInfo></A>
<H3>struct GInterfaceInfo</H3><PRE class=programlisting>struct GInterfaceInfo {
  GInterfaceInitFunc     interface_init;
  GInterfaceFinalizeFunc interface_finalize;
  gpointer               interface_data;
};
</PRE>
<P>A structure that provides information to the type system which is used specifically for managing interface types.</P>
<DIV class=refsect3><A name=GInterfaceInfo.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title=GInterfaceInitFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInitFunc"><SPAN class=type>GInterfaceInitFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GInterfaceInfo.interface-init></A>interface_init</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>location of the interface initialization function</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GInterfaceFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceFinalizeFunc"><SPAN class=type>GInterfaceFinalizeFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GInterfaceInfo.interface-finalize></A>interface_finalize</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>location of the interface finalization function</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GInterfaceInfo.interface-data></A>interface_data</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>user-supplied data passed to the interface init/finalize functions</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeValueTable></A>
<H3>struct GTypeValueTable</H3><PRE class=programlisting>struct GTypeValueTable {
  void     (*value_init)         (GValue       *value);
  void     (*value_free)         (GValue       *value);
  void     (*value_copy)         (const GValue *src_value,
				  GValue       *dest_value);
  /* varargs functionality (optional) */
  gpointer (*value_peek_pointer) (const GValue *value);
  const gchar *collect_format;
  gchar*   (*collect_value)      (GValue       *value,
				  guint         n_collect_values,
				  GTypeCValue  *collect_values,
				  guint		collect_flags);
  const gchar *lcopy_format;
  gchar*   (*lcopy_value)        (const GValue *value,
				  guint         n_collect_values,
				  GTypeCValue  *collect_values,
				  guint		collect_flags);
};
</PRE>
<P>The <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> provides the functions required by the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> implementation, to serve as a container for values of a type.</P>
<DIV class=refsect3><A name=GTypeValueTable.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeValueTable.value-init></A>value_init</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Default initialize <EM class=parameter><CODE>values</CODE></EM> contents by poking values directly into the value-&gt;data array. The data array of the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> passed into this function was zero-filled with <CODE class=literal><CODE class=function>memset()</CODE></CODE>, so no care has to be taken to free any old contents. E.g. for the implementation of a string value that may never be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the implementation might look like:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>""</SPAN><SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeValueTable.value-free></A>value_free</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Free any old contents that might be left in the data array of the passed in <EM class=parameter><CODE>value</CODE></EM> . No resources may remain allocated through the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> contents after this function returns. E.g. for our above string type:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// only free strings without a specific flag for static storage</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!(</SPAN>value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_uint <SPAN class="gtkdoc opt">&amp;</SPAN> G_VALUE_NOCOPY_CONTENTS<SPAN class="gtkdoc opt">))</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeValueTable.value-copy></A>value_copy</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P><EM class=parameter><CODE>dest_value</CODE></EM> is a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> with zero-filled data section and <EM class=parameter><CODE>src_value</CODE></EM> is a properly setup <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of same or derived type. The purpose of this function is to copy the contents of <EM class=parameter><CODE>src_value</CODE></EM> into <EM class=parameter><CODE>dest_value</CODE></EM> in a way, that even after <EM class=parameter><CODE>src_value</CODE></EM> has been freed, the contents of <EM class=parameter><CODE>dest_value</CODE></EM> remain valid. String type example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>dest_value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>src_value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeValueTable.value-peek-pointer></A>value_peek_pointer</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>If the value contents fit into a pointer, such as objects or strings, return this pointer, so the caller can peek at the current contents. To extend on our above string example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=keyword>return</SPAN> value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GTypeValueTable.collect-format></A>collect_format</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>A string format describing how to collect the contents of this value bit-by-bit. Each character in the format represents an argument to be collected, and the characters themselves indicate the type of the argument. Currently supported arguments are:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P>'i' - Integers. passed as collect_values[].v_int.</P></LI>
<LI class=listitem>
<P>'l' - Longs. passed as collect_values[].v_long.</P></LI>
<LI class=listitem>
<P>'d' - Doubles. passed as collect_values[].v_double.</P></LI>
<LI class=listitem>
<P>'p' - Pointers. passed as collect_values[].v_pointer. It should be noted that for variable argument list construction, ANSI C promotes every type smaller than an integer to an int, and floats to doubles. So for collection of short int or char, 'i' needs to be used, and for collection of floats 'd'.</P></LI></UL></DIV></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeValueTable.collect-value></A>collect_value</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>The <CODE class=function>collect_value()</CODE> function is responsible for converting the values collected from a variable argument list into contents suitable for storage in a GValue. This function should setup <EM class=parameter><CODE>value</CODE></EM> similar to <CODE class=function>value_init()</CODE>; e.g. for a string value that does not allow <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers, it needs to either spew an error, or do an implicit conversion by storing an empty string. The <EM class=parameter><CODE>value</CODE></EM> passed in to this function has a zero-filled data array, so just like for <CODE class=function>value_init()</CODE> it is guaranteed to not contain any old contents that might need freeing. <EM class=parameter><CODE>n_collect_values</CODE></EM> is exactly the string length of <EM class=parameter><CODE>collect_format</CODE></EM> , and <EM class=parameter><CODE>collect_values</CODE></EM> is an array of unions <A title=GTypeCValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#GTypeCValue"><SPAN class=type>GTypeCValue</SPAN></A> with length <EM class=parameter><CODE>n_collect_values</CODE></EM> , containing the collected values according to <EM class=parameter><CODE>collect_format</CODE></EM> . <EM class=parameter><CODE>collect_flags</CODE></EM> is an argument provided as a hint by the caller. It may contain the flag <CODE class=literal>G_VALUE_NOCOPY_CONTENTS</CODE> indicating, that the collected value contents may be considered "static" for the duration of the <EM class=parameter><CODE>value</CODE></EM> lifetime. Thus an extra copy of the contents stored in <EM class=parameter><CODE>collect_values</CODE></EM> is not required for assignment to <EM class=parameter><CODE>value</CODE></EM> . For our above string example, we continue with:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN>collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">)</SPAN>
value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>""</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>else if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>collect_flags <SPAN class="gtkdoc opt">&amp;</SPAN> G_VALUE_NOCOPY_CONTENTS<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer <SPAN class="gtkdoc opt">=</SPAN> collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc slc">// keep a flag for the value_free() implementation to not free this string</SPAN>
value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_uint <SPAN class="gtkdoc opt">=</SPAN> G_VALUE_NOCOPY_CONTENTS<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class=keyword>else</SPAN>
value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>return</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>It should be noted, that it is generally a bad idea to follow the <SPAN class=type>G_VALUE_NOCOPY_CONTENTS</SPAN> hint for reference counted types. Due to reentrancy requirements and reference count assertions performed by the signal emission code, reference counts should always be incremented for reference counted contents stored in the value-&gt;data array. To deviate from our string example for a moment, and taking a look at an exemplary implementation for <CODE class=function>collect_value()</CODE> of <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
GObject <SPAN class="gtkdoc opt">*</SPAN>object <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT:CAPS">G_OBJECT</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc slc">// never honour G_VALUE_NOCOPY_CONTENTS for ref-counted types</SPAN>
value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref">g_object_ref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>return</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class=keyword>else</SPAN>
<SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup-printf">g_strdup_printf</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Object passed as invalid NULL pointer"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>The reference count for valid objects is always incremented, regardless of <EM class=parameter><CODE>collect_flags</CODE></EM> . For invalid objects, the example returns a newly allocated string without altering <EM class=parameter><CODE>value</CODE></EM> . Upon success, <CODE class=function>collect_value()</CODE> needs to return <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If, however, an error condition occurred, <CODE class=function>collect_value()</CODE> may spew an error by returning a newly allocated non-<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> string, giving a suitable description of the error condition. The calling code makes no assumptions about the <EM class=parameter><CODE>value</CODE></EM> contents being valid upon error returns, <EM class=parameter><CODE>value</CODE></EM> is simply thrown away without further freeing. As such, it is a good idea to not allocate <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> contents, prior to returning an error, however, <CODE class=function>collect_values()</CODE> is not obliged to return a correctly setup <EM class=parameter><CODE>value</CODE></EM> for error returns, simply because any non-<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> return is considered a fatal condition so further program behaviour is undefined.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GTypeValueTable.lcopy-format></A>lcopy_format</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Format description of the arguments to collect for <EM class=parameter><CODE>lcopy_value</CODE></EM> , analogous to <EM class=parameter><CODE>collect_format</CODE></EM> . Usually, <EM class=parameter><CODE>lcopy_format</CODE></EM> string consists only of 'p's to provide <CODE class=function>lcopy_value()</CODE> with pointers to storage locations.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeValueTable.lcopy-value></A>lcopy_value</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>This function is responsible for storing the <EM class=parameter><CODE>value</CODE></EM> contents into arguments passed through a variable argument list which got collected into <EM class=parameter><CODE>collect_values</CODE></EM> according to <EM class=parameter><CODE>lcopy_format</CODE></EM> . <EM class=parameter><CODE>n_collect_values</CODE></EM> equals the string length of <EM class=parameter><CODE>lcopy_format</CODE></EM> , and <EM class=parameter><CODE>collect_flags</CODE></EM> may contain <CODE class=literal>G_VALUE_NOCOPY_CONTENTS</CODE>. In contrast to <CODE class=function>collect_value()</CODE>, <CODE class=function>lcopy_value()</CODE> is obliged to always properly support <CODE class=literal>G_VALUE_NOCOPY_CONTENTS</CODE>. Similar to <CODE class=function>collect_value()</CODE> the function may prematurely abort by returning a newly allocated string describing an error condition. To complete the string example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>gchar <SPAN class="gtkdoc opt">**</SPAN>string_p <SPAN class="gtkdoc opt">=</SPAN> collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN>string_p<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup-printf">g_strdup_printf</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"string location passed as NULL"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>collect_flags <SPAN class="gtkdoc opt">&amp;</SPAN> G_VALUE_NOCOPY_CONTENTS<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>string_p <SPAN class="gtkdoc opt">=</SPAN> value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>else</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>string_p <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>And an illustrative version of <CODE class=function>lcopy_value()</CODE> for reference-counted types:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>GObject <SPAN class="gtkdoc opt">**</SPAN>object_p <SPAN class="gtkdoc opt">=</SPAN> collect_values<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN>object_p<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup-printf">g_strdup_printf</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"object location passed as NULL"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN>value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>object_p <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>else if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>collect_flags <SPAN class="gtkdoc opt">&amp;</SPAN> G_VALUE_NOCOPY_CONTENTS<SPAN class="gtkdoc opt">)</SPAN> <SPAN class="gtkdoc slc">// always honour</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>object_p <SPAN class="gtkdoc opt">=</SPAN> value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>else</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>object_p <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref">g_object_ref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>value<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">].</SPAN>v_pointer<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>return</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FLAG-RESERVED-ID-BIT:CAPS></A>
<H3>G_TYPE_FLAG_RESERVED_ID_BIT</H3><PRE class=programlisting>#define&nbsp;G_TYPE_FLAG_RESERVED_ID_BIT&nbsp;((GType) (1 &lt;&lt; 0))
</PRE>
<P>A bit in the type number that's supposed to be left untouched.</P></DIV>
<HR>

<DIV class=refsect2><A name=GTypeDebugFlags></A>
<H3>enum GTypeDebugFlags</H3>
<DIV class=warning>
<P><CODE class=literal>GTypeDebugFlags</CODE> has been deprecated since version 2.36 and should not be used in newly-written code.</P>
<P>g_type_init() is now done automatically</P></DIV>
<P>These flags used to be passed to <A title=g_type_init_with_debug_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-init-with-debug-flags"><CODE class=function>g_type_init_with_debug_flags()</CODE></A> which is now deprecated.</P>
<P>If you need to enable debugging features, use the GOBJECT_DEBUG environment variable.</P>
<DIV class=refsect3><A name=GTypeDebugFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-DEBUG-NONE:CAPS></A>G_TYPE_DEBUG_NONE</P></TD>
<TD class=enum_member_description>
<P>Print no messages</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-DEBUG-OBJECTS:CAPS></A>G_TYPE_DEBUG_OBJECTS</P></TD>
<TD class=enum_member_description>
<P>Print messages about object bookkeeping</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-DEBUG-SIGNALS:CAPS></A>G_TYPE_DEBUG_SIGNALS</P></TD>
<TD class=enum_member_description>
<P>Print messages about signal emissions</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-DEBUG-INSTANCE-COUNT:CAPS></A>G_TYPE_DEBUG_INSTANCE_COUNT</P></TD>
<TD class=enum_member_description>
<P>Keep a count of instances of each type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-DEBUG-MASK:CAPS></A>G_TYPE_DEBUG_MASK</P></TD>
<TD class=enum_member_description>
<P>Mask covering all debug flags</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeQuery></A>
<H3>struct GTypeQuery</H3><PRE class=programlisting>struct GTypeQuery {
  GType		type;
  const gchar  *type_name;
  guint		class_size;
  guint		instance_size;
};
</PRE>
<P>A structure holding information for a specific type. It is filled in by the <A title=g_type_query&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-query"><CODE class=function>g_type_query()</CODE></A> function.</P>
<DIV class=refsect3><A name=GTypeQuery.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeQuery.type></A>type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value of the type</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GTypeQuery.type-name></A>type_name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the name of the type</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeQuery.class-size></A>class_size</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the size of the class structure</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeQuery.instance-size></A>instance_size</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the size of the instance structure</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeFlags></A>
<H3>enum GTypeFlags</H3>
<P>Bit masks used to check or determine characteristics of a type.</P>
<DIV class=refsect3><A name=GTypeFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-FLAG-ABSTRACT:CAPS></A>G_TYPE_FLAG_ABSTRACT</P></TD>
<TD class=enum_member_description>
<P>Indicates an abstract type. No instances can be created for an abstract type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-FLAG-VALUE-ABSTRACT:CAPS></A>G_TYPE_FLAG_VALUE_ABSTRACT</P></TD>
<TD class=enum_member_description>
<P>Indicates an abstract value type, i.e. a type that introduces a value table, but can't be used for <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeFundamentalFlags></A>
<H3>enum GTypeFundamentalFlags</H3>
<P>Bit masks used to check or determine specific characteristics of a fundamental type.</P>
<DIV class=refsect3><A name=GTypeFundamentalFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-FLAG-CLASSED:CAPS></A>G_TYPE_FLAG_CLASSED</P></TD>
<TD class=enum_member_description>
<P>Indicates a classed type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-FLAG-INSTANTIATABLE:CAPS></A>G_TYPE_FLAG_INSTANTIATABLE</P></TD>
<TD class=enum_member_description>
<P>Indicates an instantiable type (implies classed)</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-FLAG-DERIVABLE:CAPS></A>G_TYPE_FLAG_DERIVABLE</P></TD>
<TD class=enum_member_description>
<P>Indicates a flat derivable type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-TYPE-FLAG-DEEP-DERIVABLE:CAPS></A>G_TYPE_FLAG_DEEP_DERIVABLE</P></TD>
<TD class=enum_member_description>
<P>Indicates a deep derivable type (implies derivable)</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INVALID:CAPS></A>
<H3>G_TYPE_INVALID</H3><PRE class=programlisting>#define G_TYPE_INVALID			G_TYPE_MAKE_FUNDAMENTAL (0)
</PRE>
<P>An invalid <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> used as error return value in some functions which return a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-NONE:CAPS></A>
<H3>G_TYPE_NONE</H3><PRE class=programlisting>#define G_TYPE_NONE			G_TYPE_MAKE_FUNDAMENTAL (1)
</PRE>
<P>A fundamental type which is used as a replacement for the C void return type.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INTERFACE:CAPS></A>
<H3>G_TYPE_INTERFACE</H3><PRE class=programlisting>#define G_TYPE_INTERFACE		G_TYPE_MAKE_FUNDAMENTAL (2)
</PRE>
<P>The fundamental type from which all interfaces are derived.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHAR:CAPS></A>
<H3>G_TYPE_CHAR</H3><PRE class=programlisting>#define G_TYPE_CHAR			G_TYPE_MAKE_FUNDAMENTAL (3)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>. The type designated by G_TYPE_CHAR is unconditionally an 8-bit signed integer. This may or may not be the same type a the C type "gchar".</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-UCHAR:CAPS></A>
<H3>G_TYPE_UCHAR</H3><PRE class=programlisting>#define G_TYPE_UCHAR			G_TYPE_MAKE_FUNDAMENTAL (4)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guchar"><SPAN class=type>guchar</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-BOOLEAN:CAPS></A>
<H3>G_TYPE_BOOLEAN</H3><PRE class=programlisting>#define G_TYPE_BOOLEAN			G_TYPE_MAKE_FUNDAMENTAL (5)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INT:CAPS></A>
<H3>G_TYPE_INT</H3><PRE class=programlisting>#define G_TYPE_INT			G_TYPE_MAKE_FUNDAMENTAL (6)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-UINT:CAPS></A>
<H3>G_TYPE_UINT</H3><PRE class=programlisting>#define G_TYPE_UINT			G_TYPE_MAKE_FUNDAMENTAL (7)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-LONG:CAPS></A>
<H3>G_TYPE_LONG</H3><PRE class=programlisting>#define G_TYPE_LONG			G_TYPE_MAKE_FUNDAMENTAL (8)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-ULONG:CAPS></A>
<H3>G_TYPE_ULONG</H3><PRE class=programlisting>#define G_TYPE_ULONG			G_TYPE_MAKE_FUNDAMENTAL (9)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INT64:CAPS></A>
<H3>G_TYPE_INT64</H3><PRE class=programlisting>#define G_TYPE_INT64			G_TYPE_MAKE_FUNDAMENTAL (10)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-UINT64:CAPS></A>
<H3>G_TYPE_UINT64</H3><PRE class=programlisting>#define G_TYPE_UINT64			G_TYPE_MAKE_FUNDAMENTAL (11)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-ENUM:CAPS></A>
<H3>G_TYPE_ENUM</H3><PRE class=programlisting>#define G_TYPE_ENUM			G_TYPE_MAKE_FUNDAMENTAL (12)
</PRE>
<P>The fundamental type from which all enumeration types are derived.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FLAGS:CAPS></A>
<H3>G_TYPE_FLAGS</H3><PRE class=programlisting>#define G_TYPE_FLAGS			G_TYPE_MAKE_FUNDAMENTAL (13)
</PRE>
<P>The fundamental type from which all flags types are derived.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-FLOAT:CAPS></A>
<H3>G_TYPE_FLOAT</H3><PRE class=programlisting>#define G_TYPE_FLOAT			G_TYPE_MAKE_FUNDAMENTAL (14)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-DOUBLE:CAPS></A>
<H3>G_TYPE_DOUBLE</H3><PRE class=programlisting>#define G_TYPE_DOUBLE			G_TYPE_MAKE_FUNDAMENTAL (15)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-STRING:CAPS></A>
<H3>G_TYPE_STRING</H3><PRE class=programlisting>#define G_TYPE_STRING			G_TYPE_MAKE_FUNDAMENTAL (16)
</PRE>
<P>The fundamental type corresponding to nul-terminated C strings.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-POINTER:CAPS></A>
<H3>G_TYPE_POINTER</H3><PRE class=programlisting>#define G_TYPE_POINTER			G_TYPE_MAKE_FUNDAMENTAL (17)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-BOXED:CAPS></A>
<H3>G_TYPE_BOXED</H3><PRE class=programlisting>#define G_TYPE_BOXED			G_TYPE_MAKE_FUNDAMENTAL (18)
</PRE>
<P>The fundamental type from which all boxed types are derived.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM:CAPS></A>
<H3>G_TYPE_PARAM</H3><PRE class=programlisting>#define G_TYPE_PARAM			G_TYPE_MAKE_FUNDAMENTAL (19)
</PRE>
<P>The fundamental type from which all <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> types are derived.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-OBJECT:CAPS></A>
<H3>G_TYPE_OBJECT</H3><PRE class=programlisting>#define G_TYPE_OBJECT			G_TYPE_MAKE_FUNDAMENTAL (20)
</PRE>
<P>The fundamental type for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-GTYPE:CAPS></A>
<H3>G_TYPE_GTYPE</H3><PRE class=programlisting>#define&nbsp;G_TYPE_GTYPE			 (g_gtype_get_type())
</PRE>
<P>The type for <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-VARIANT:CAPS></A>
<H3>G_TYPE_VARIANT</H3><PRE class=programlisting>#define&nbsp;G_TYPE_VARIANT                  G_TYPE_MAKE_FUNDAMENTAL (21)
</PRE>
<P>The fundamental type corresponding to <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>All floating <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances passed through the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> system are consumed.</P>
<P>Note that callbacks in closures, and signal handlers for signals of return type <A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS"><CODE class=literal>G_TYPE_VARIANT</CODE></A>, must never return floating variants.</P>
<P>Note: GLib 2.24 did include a boxed type with this name. It was replaced with this fundamental type in 2.26.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CHECKSUM:CAPS></A>
<H3>G_TYPE_CHECKSUM</H3><PRE class=programlisting>#define G_TYPE_CHECKSUM (g_checksum_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Data-Checksums.html#GChecksum"><SPAN class=type>GChecksum</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-36.html#api-index-2.36">2.36</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-RESERVED-GLIB-FIRST:CAPS></A>
<H3>G_TYPE_RESERVED_GLIB_FIRST</H3><PRE class=programlisting>#define G_TYPE_RESERVED_GLIB_FIRST&nbsp;(22)
</PRE>
<P>First fundamental type number to create a new fundamental type id with <A title=G_TYPE_MAKE_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-MAKE-FUNDAMENTAL:CAPS"><CODE class=function>G_TYPE_MAKE_FUNDAMENTAL()</CODE></A> reserved for GLib.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-RESERVED-GLIB-LAST:CAPS></A>
<H3>G_TYPE_RESERVED_GLIB_LAST</H3><PRE class=programlisting>#define G_TYPE_RESERVED_GLIB_LAST&nbsp;(31)
</PRE>
<P>Last fundamental type number reserved for GLib.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-RESERVED-BSE-FIRST:CAPS></A>
<H3>G_TYPE_RESERVED_BSE_FIRST</H3><PRE class=programlisting>#define G_TYPE_RESERVED_BSE_FIRST&nbsp;(32)
</PRE>
<P>First fundamental type number to create a new fundamental type id with <A title=G_TYPE_MAKE_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-MAKE-FUNDAMENTAL:CAPS"><CODE class=function>G_TYPE_MAKE_FUNDAMENTAL()</CODE></A> reserved for BSE.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-RESERVED-BSE-LAST:CAPS></A>
<H3>G_TYPE_RESERVED_BSE_LAST</H3><PRE class=programlisting>#define G_TYPE_RESERVED_BSE_LAST&nbsp;(48)
</PRE>
<P>Last fundamental type number reserved for BSE.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-RESERVED-USER-FIRST:CAPS></A>
<H3>G_TYPE_RESERVED_USER_FIRST</H3><PRE class=programlisting>#define G_TYPE_RESERVED_USER_FIRST&nbsp;(49)
</PRE>
<P>First available fundamental type number to create new fundamental type id with <A title=G_TYPE_MAKE_FUNDAMENTAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-MAKE-FUNDAMENTAL:CAPS"><CODE class=function>G_TYPE_MAKE_FUNDAMENTAL()</CODE></A>.</P></DIV></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="23219">Topic #23219: GTypePlugin.. GTypePlugin &#38323;?An interface for dynamically loadable types.. .. Functions.. void (*GTypePluginUse) () .. void (*GTypePluginUnuse) () .. void ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>GTypePlugin</SPAN></H2>
<P>GTypePlugin &#8212; An interface for dynamically loadable types</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=GTypePlugin.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GTypePluginUse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginUse">*GTypePluginUse</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GTypePluginUnuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginUnuse">*GTypePluginUnuse</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GTypePluginCompleteTypeInfo&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginCompleteTypeInfo">*GTypePluginCompleteTypeInfo</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GTypePluginCompleteInterfaceInfo&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginCompleteInterfaceInfo">*GTypePluginCompleteInterfaceInfo</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_plugin_use&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-use">g_type_plugin_use</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_plugin_unuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-unuse">g_type_plugin_unuse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_plugin_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-type-info">g_type_plugin_complete_type_info</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_plugin_complete_interface_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-interface-info">g_type_plugin_complete_interface_info</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GTypePlugin.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePlugin-struct">GTypePlugin</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass">GTypePluginClass</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GTypePlugin.object-hierarchy></A>
<H2>Object Hierarchy</H2><PRE class=screen>    <A href="https://developer.gnome.org/gobject/unstable/GTypeModule.html">GInterface</A>
    <SPAN class=lineart>&#9584;&#9472;&#9472;</SPAN> GTypePlugin
</PRE></DIV>
<DIV class=refsect1><A name=GTypePlugin.implementations></A>
<H2>Known Implementations</H2>
<P>GTypePlugin is implemented by <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html">GTypeModule</A>.</P></DIV>
<DIV class=refsect1><A name=GTypePlugin.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=GTypePlugin.description></A>
<H2>Description</H2>
<P>The GObject type system supports dynamic loading of types. The <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> interface is used to handle the lifecycle of dynamically loaded types. It goes as follows:</P>
<DIV class=orderedlist>
<OL class=orderedlist type=1>
<LI class=listitem>
<P>The type is initially introduced (usually upon loading the module the first time, or by your main application that knows what modules introduces what types), like this:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>new_type_id <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-dynamic">g_type_register_dynamic</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>parent_type_id<SPAN class="gtkdoc opt">,</SPAN>
                                      <SPAN class=string>"TypeName"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                      new_type_plugin<SPAN class="gtkdoc opt">,</SPAN>
                                      type_flags<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>where <EM class=parameter><CODE>new_type_plugin</CODE></EM> is an implementation of the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> interface.</P></LI>
<LI class=listitem>
<P>The type's implementation is referenced, e.g. through <A title=g_type_class_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-ref"><CODE class=function>g_type_class_ref()</CODE></A> or through <A title=g_type_create_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-create-instance"><CODE class=function>g_type_create_instance()</CODE></A> (this is being called by <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A>) or through one of the above done on a type derived from <EM class=parameter><CODE>new_type_id</CODE></EM> .</P></LI>
<LI class=listitem>
<P>This causes the type system to load the type's implementation by calling <A title=g_type_plugin_use&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-use"><CODE class=function>g_type_plugin_use()</CODE></A> and <A title=g_type_plugin_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-type-info"><CODE class=function>g_type_plugin_complete_type_info()</CODE></A> on <EM class=parameter><CODE>new_type_plugin</CODE></EM> .</P></LI>
<LI class=listitem>
<P>At some point the type's implementation isn't required anymore, e.g. after <A title=g_type_class_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref"><CODE class=function>g_type_class_unref()</CODE></A> or <A title=g_type_free_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-free-instance"><CODE class=function>g_type_free_instance()</CODE></A> (called when the reference count of an instance drops to zero).</P></LI>
<LI class=listitem>
<P>This causes the type system to throw away the information retrieved from <A title=g_type_plugin_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-type-info"><CODE class=function>g_type_plugin_complete_type_info()</CODE></A> and then it calls <A title=g_type_plugin_unuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-unuse"><CODE class=function>g_type_plugin_unuse()</CODE></A> on <EM class=parameter><CODE>new_type_plugin</CODE></EM> .</P></LI>
<LI class=listitem>
<P>Things may repeat from the second step.</P></LI></OL></DIV>
<P>So basically, you need to implement a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> type that carries a use_count, once use_count goes from zero to one, you need to load the implementation to successfully handle the upcoming <A title=g_type_plugin_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-type-info"><CODE class=function>g_type_plugin_complete_type_info()</CODE></A> call. Later, maybe after succeeding use/unuse calls, once use_count drops to zero, you can unload the implementation again. The type system makes sure to call <A title=g_type_plugin_use&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-use"><CODE class=function>g_type_plugin_use()</CODE></A> and <A title=g_type_plugin_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#g-type-plugin-complete-type-info"><CODE class=function>g_type_plugin_complete_type_info()</CODE></A> again when the type is needed again.</P>
<P><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> is an implementation of <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> that already implements most of this except for the actual module loading and unloading. It even handles multiple registered types per module.</P></DIV>
<DIV class=refsect1><A name=GTypePlugin.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GTypePluginUse></A>
<H3>GTypePluginUse&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GTypePluginUse<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>use_plugin</CODE></EM> function of <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A>, which gets called to increase the use count of <EM class=parameter><CODE>plugin</CODE></EM> .</P>
<DIV class=refsect3><A name=GTypePluginUse.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> whose use count should be increased</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypePluginUnuse></A>
<H3>GTypePluginUnuse&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GTypePluginUnuse<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>unuse_plugin</CODE></EM> function of <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GTypePluginUnuse.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> whose use count should be decreased</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypePluginCompleteTypeInfo></A>
<H3>GTypePluginCompleteTypeInfo&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GTypePluginCompleteTypeInfo<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_type</CODE></EM>,
                                <EM class=parameter><CODE><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *info</CODE></EM>,
                                <EM class=parameter><CODE><A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> *value_table</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>complete_type_info</CODE></EM> function of <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GTypePluginCompleteTypeInfo.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> whose info is completed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> struct to fill in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value_table</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> to fill in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypePluginCompleteInterfaceInfo></A>
<H3>GTypePluginCompleteInterfaceInfo&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GTypePluginCompleteInterfaceInfo<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>,
                                     <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                                     <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                                     <EM class=parameter><CODE><A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> *info</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>complete_interface_info</CODE></EM> function of <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GTypePluginCompleteInterfaceInfo.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of an instantiable type to which the interface is added</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the interface whose info is completed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> to fill in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-plugin-use></A>
<H3>g_type_plugin_use&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_plugin_use (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>);</PRE>
<P>Calls the <EM class=parameter><CODE>use_plugin</CODE></EM> function from the <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A> of <EM class=parameter><CODE>plugin</CODE></EM> . There should be no need to use this function outside of the GObject type system itself.</P>
<DIV class=refsect3><A name=g-type-plugin-use.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-plugin-unuse></A>
<H3>g_type_plugin_unuse&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_plugin_unuse (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>);</PRE>
<P>Calls the <EM class=parameter><CODE>unuse_plugin</CODE></EM> function from the <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A> of <EM class=parameter><CODE>plugin</CODE></EM> . There should be no need to use this function outside of the GObject type system itself.</P>
<DIV class=refsect3><A name=g-type-plugin-unuse.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-plugin-complete-type-info></A>
<H3>g_type_plugin_complete_type_info&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_plugin_complete_type_info (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_type</CODE></EM>,
                                  <EM class=parameter><CODE><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *info</CODE></EM>,
                                  <EM class=parameter><CODE><A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> *value_table</CODE></EM>);</PRE>
<P>Calls the <EM class=parameter><CODE>complete_type_info</CODE></EM> function from the <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A> of <EM class=parameter><CODE>plugin</CODE></EM> . There should be no need to use this function outside of the GObject type system itself.</P>
<DIV class=refsect3><A name=g-type-plugin-complete-type-info.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> whose info is completed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> struct to fill in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value_table</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> to fill in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-plugin-complete-interface-info></A>
<H3>g_type_plugin_complete_interface_info&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_plugin_complete_interface_info (<EM class=parameter><CODE><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> *plugin</CODE></EM>,
                                       <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                                       <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                                       <EM class=parameter><CODE><A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> *info</CODE></EM>);</PRE>
<P>Calls the <EM class=parameter><CODE>complete_interface_info</CODE></EM> function from the <A title="struct GTypePluginClass" class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginClass"><SPAN class=type>GTypePluginClass</SPAN></A> of <EM class=parameter><CODE>plugin</CODE></EM> . There should be no need to use this function outside of the GObject type system itself.</P>
<DIV class=refsect3><A name=g-type-plugin-complete-interface-info.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>plugin</P></TD>
<TD class=parameter_description>
<P>the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of an instantiable type to which the interface is added</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the interface whose info is completed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> to fill in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=GTypePlugin.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GTypePlugin-struct></A>
<H3>GTypePlugin</H3><PRE class=programlisting>typedef struct _GTypePlugin GTypePlugin;</PRE>
<P>The GTypePlugin typedef is used as a placeholder for objects that implement the GTypePlugin interface.</P></DIV>
<HR>

<DIV class=refsect2><A name=GTypePluginClass></A>
<H3>struct GTypePluginClass</H3><PRE class=programlisting>struct GTypePluginClass {
  GTypePluginUse		   use_plugin;
  GTypePluginUnuse		   unuse_plugin;
  GTypePluginCompleteTypeInfo	   complete_type_info;
  GTypePluginCompleteInterfaceInfo complete_interface_info;
};
</PRE>
<P>The <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> interface is used by the type system in order to handle the lifecycle of dynamically loaded types.</P>
<DIV class=refsect3><A name=GTypePluginClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title=GTypePluginUse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginUse"><SPAN class=type>GTypePluginUse</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypePluginClass.use-plugin></A>use_plugin</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Increases the use count of the plugin.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GTypePluginUnuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginUnuse"><SPAN class=type>GTypePluginUnuse</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypePluginClass.unuse-plugin></A>unuse_plugin</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Decreases the use count of the plugin.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GTypePluginCompleteTypeInfo&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginCompleteTypeInfo"><SPAN class=type>GTypePluginCompleteTypeInfo</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypePluginClass.complete-type-info></A>complete_type_info</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Fills in the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> and <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> structs for the type. The structs are initialized with <CODE class=literal>memset(s, 0, sizeof (s))</CODE> before calling this function.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GTypePluginCompleteInterfaceInfo&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html#GTypePluginCompleteInterfaceInfo"><SPAN class=type>GTypePluginCompleteInterfaceInfo</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypePluginClass.complete-interface-info></A>complete_interface_info</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Fills in missing parts of the <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> for the interface. The structs is initialized with <CODE class=literal>memset(s, 0, sizeof (s))</CODE> before calling this function.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=GTypePlugin.see-also></A>
<H2>See Also</H2>
<P><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> and <A title=g_type_register_dynamic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-register-dynamic"><CODE class=function>g_type_register_dynamic()</CODE></A>.</P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="23179">Topic #23179: GTypeModule.. GTypeModule &#38323;?Type loading modules.. .. Functions.. gboolean g_type_module_use () .. void g_type_module_unuse () .. void g_type_module_set_name () .. GType g_type ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>GTypeModule</SPAN></H2>
<P>GTypeModule &#8212; Type loading modules</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=GTypeModule.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_type_module_use&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-use">g_type_module_use</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_module_unuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-unuse">g_type_module_unuse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_module_set_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-set-name">g_type_module_set_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_module_register_type&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-type">g_type_module_register_type</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_type_module_add_interface&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-add-interface">g_type_module_add_interface</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_module_register_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-enum">g_type_module_register_enum</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_type_module_register_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-flags">g_type_module_register_flags</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_DYNAMIC_TYPE() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE:CAPS">G_DEFINE_DYNAMIC_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DEFINE_DYNAMIC_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS">G_DEFINE_DYNAMIC_TYPE_EXTENDED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IMPLEMENT_INTERFACE_DYNAMIC() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-IMPLEMENT-INTERFACE-DYNAMIC:CAPS">G_IMPLEMENT_INTERFACE_DYNAMIC</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_ADD_PRIVATE_DYNAMIC() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-ADD-PRIVATE-DYNAMIC:CAPS">G_ADD_PRIVATE_DYNAMIC</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GTypeModule.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeModule" class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#GTypeModule-struct">GTypeModule</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GTypeModuleClass" class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#GTypeModuleClass">GTypeModuleClass</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GTypeModule.object-hierarchy></A>
<H2>Object Hierarchy</H2><PRE class=screen>    <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject">GObject</A>
    <SPAN class=lineart>&#9584;&#9472;&#9472;</SPAN> GTypeModule
</PRE></DIV>
<DIV class=refsect1><A name=GTypeModule.implemented-interfaces></A>
<H2>Implemented Interfaces</H2>
<P>GTypeModule implements <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html">GTypePlugin</A>.</P></DIV>
<DIV class=refsect1><A name=GTypeModule.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=GTypeModule.description></A>
<H2>Description</H2>
<P><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> provides a simple implementation of the <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> interface. The model of <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> is a dynamically loaded module which implements some number of types and interface implementations. When the module is loaded, it registers its types and interfaces using <A title=g_type_module_register_type&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-type"><CODE class=function>g_type_module_register_type()</CODE></A> and <A title=g_type_module_add_interface&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-add-interface"><CODE class=function>g_type_module_add_interface()</CODE></A>. As long as any instances of these types and interface implementations are in use, the module is kept loaded. When the types and interfaces are gone, the module may be unloaded. If the types and interfaces become used again, the module will be reloaded. Note that the last unref cannot happen in module code, since that would lead to the caller's code being unloaded before <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> returns to it.</P>
<P>Keeping track of whether the module should be loaded or not is done by using a use count - it starts at zero, and whenever it is greater than zero, the module is loaded. The use count is maintained internally by the type system, but also can be explicitly controlled by <A title=g_type_module_use&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-use"><CODE class=function>g_type_module_use()</CODE></A> and <A title=g_type_module_unuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-unuse"><CODE class=function>g_type_module_unuse()</CODE></A>. Typically, when loading a module for the first type, <A title=g_type_module_use&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-use"><CODE class=function>g_type_module_use()</CODE></A> will be used to load it so that it can initialize its types. At some later point, when the module no longer needs to be loaded except for the type implementations it contains, <A title=g_type_module_unuse&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-unuse"><CODE class=function>g_type_module_unuse()</CODE></A> is called.</P>
<P><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> does not actually provide any implementation of module loading and unloading. To create a particular module type you must derive from <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> and implement the load and unload functions in <A title="struct GTypeModuleClass" class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#GTypeModuleClass"><SPAN class=type>GTypeModuleClass</SPAN></A>.</P></DIV>
<DIV class=refsect1><A name=GTypeModule.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-type-module-use></A>
<H3>g_type_module_use&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_type_module_use (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>);</PRE>
<P>Increases the use count of a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> by one. If the use count was zero before, the plugin will be loaded. If loading the plugin fails, the use count is reset to its prior value.</P>
<DIV class=refsect3><A name=g-type-module-use.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-module-use.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the plugin needed to be loaded and loading the plugin failed.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-module-unuse></A>
<H3>g_type_module_unuse&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_module_unuse (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>);</PRE>
<P>Decreases the use count of a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> by one. If the result is zero, the module will be unloaded. (However, the <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> will not be freed, and types associated with the <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> are not unregistered. Once a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> is initialized, it must exist forever.)</P>
<DIV class=refsect3><A name=g-type-module-unuse.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-module-set-name></A>
<H3>g_type_module_set_name&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_module_set_name (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>,
                        <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Sets the name for a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P>
<DIV class=refsect3><A name=g-type-module-set-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>a human-readable name to use in error messages.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-module-register-type></A>
<H3>g_type_module_register_type&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_module_register_type (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>,
                             <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> parent_type</CODE></EM>,
                             <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *type_name</CODE></EM>,
                             <EM class=parameter><CODE>const <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *type_info</CODE></EM>,
                             <EM class=parameter><CODE><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Looks up or registers a type that is implemented with a particular type plugin. If a type with name <EM class=parameter><CODE>type_name</CODE></EM> was previously registered, the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier for the type is returned, otherwise the type is newly registered, and the resulting <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier returned.</P>
<P>When reregistering a type (typically because a module is unloaded then reloaded, and reinitialized), <EM class=parameter><CODE>module</CODE></EM> and <EM class=parameter><CODE>parent_type</CODE></EM> must be the same as they were previously.</P>
<P>As long as any instances of the type exist, the type plugin will not be unloaded.</P>
<DIV class=refsect3><A name=g-type-module-register-type.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>parent_type</P></TD>
<TD class=parameter_description>
<P>the type for the parent class</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>name for the type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_info</P></TD>
<TD class=parameter_description>
<P>type information structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags field providing details about the type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-module-register-type.returns></A>
<H4>Returns</H4>
<P>the new or existing type ID</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-module-add-interface></A>
<H3>g_type_module_add_interface&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_type_module_add_interface (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>,
                             <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                             <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> interface_type</CODE></EM>,
                             <EM class=parameter><CODE>const <A title="struct GInterfaceInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GInterfaceInfo"><SPAN class=type>GInterfaceInfo</SPAN></A> *interface_info</CODE></EM>);</PRE>
<P>Registers an additional interface for a type, whose interface lives in the given type plugin. If the interface was already registered for the type in this plugin, nothing will be done.</P>
<P>As long as any instances of the type exist, the type plugin will not be unloaded.</P>
<DIV class=refsect3><A name=g-type-module-add-interface.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P>type to which to add the interface.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_type</P></TD>
<TD class=parameter_description>
<P>interface type to add</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interface_info</P></TD>
<TD class=parameter_description>
<P>type information structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-type-module-register-enum></A>
<H3>g_type_module_register_enum&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_module_register_enum (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>,
                             <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                             <EM class=parameter><CODE>const <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> *const_static_values</CODE></EM>);</PRE>
<P>Looks up or registers an enumeration that is implemented with a particular type plugin. If a type with name <EM class=parameter><CODE>type_name</CODE></EM> was previously registered, the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier for the type is returned, otherwise the type is newly registered, and the resulting <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier returned.</P>
<P>As long as any instances of the type exist, the type plugin will not be unloaded.</P>
<DIV class=refsect3><A name=g-type-module-register-enum.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>name for the type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>const_static_values</P></TD>
<TD class=parameter_description>
<P>an array of <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> structs for the possible enumeration values. The array is terminated by a struct with all members being 0.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-module-register-enum.returns></A>
<H4>Returns</H4>
<P>the new or existing type ID</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-6.html#api-index-2.6">2.6</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-type-module-register-flags></A>
<H3>g_type_module_register_flags&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_type_module_register_flags (<EM class=parameter><CODE><A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A> *module</CODE></EM>,
                              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                              <EM class=parameter><CODE>const <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> *const_static_values</CODE></EM>);</PRE>
<P>Looks up or registers a flags type that is implemented with a particular type plugin. If a type with name <EM class=parameter><CODE>type_name</CODE></EM> was previously registered, the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier for the type is returned, otherwise the type is newly registered, and the resulting <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier returned.</P>
<P>As long as any instances of the type exist, the type plugin will not be unloaded.</P>
<DIV class=refsect3><A name=g-type-module-register-flags.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>module</P></TD>
<TD class=parameter_description>
<P>a <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>name for the type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>const_static_values</P></TD>
<TD class=parameter_description>
<P>an array of <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> structs for the possible flags values. The array is terminated by a struct with all members being 0.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-type-module-register-flags.returns></A>
<H4>Returns</H4>
<P>the new or existing type ID</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-6.html#api-index-2.6">2.6</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-DYNAMIC-TYPE:CAPS></A>
<H3>G_DEFINE_DYNAMIC_TYPE()</H3><PRE class=programlisting>#define G_DEFINE_DYNAMIC_TYPE(TN, t_n, T_P)          G_DEFINE_DYNAMIC_TYPE_EXTENDED (TN, t_n, T_P, 0, {})
</PRE>
<P>A convenience macro for dynamic type implementations, which declares a class initialization function, an instance initialization function (see <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> for information about these) and a static variable named <EM class=parameter><CODE>t_n</CODE></EM> &lt;!-- --&gt;_parent_class pointing to the parent class. Furthermore, it defines a <CODE class=literal>*_get_type()</CODE> and a static <CODE class=literal>*_register_type()</CODE> functions for use in your <CODE class=literal><CODE class=function>module_init()</CODE></CODE>.</P>
<P>See <A title=G_DEFINE_DYNAMIC_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_DYNAMIC_TYPE_EXTENDED()</CODE></A> for an example.</P>
<DIV class=refsect3><A name=G-DEFINE-DYNAMIC-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TN</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>t_n</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>T_P</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-14.html#api-index-2.14">2.14</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS></A>
<H3>G_DEFINE_DYNAMIC_TYPE_EXTENDED()</H3><PRE class=programlisting>#define             G_DEFINE_DYNAMIC_TYPE_EXTENDED(TypeName, type_name, TYPE_PARENT, flags, CODE)</PRE>
<P>A more general version of <A title=G_DEFINE_DYNAMIC_TYPE() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE:CAPS"><CODE class=function>G_DEFINE_DYNAMIC_TYPE()</CODE></A> which allows to specify <A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> and custom code.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS">G_DEFINE_DYNAMIC_TYPE_EXTENDED</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadget<SPAN class="gtkdoc opt">,</SPAN>
                                gtk_gadget<SPAN class="gtkdoc opt">,</SPAN>
                                GTK_TYPE_THING<SPAN class="gtkdoc opt">,</SPAN>
                                <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-IMPLEMENT-INTERFACE-DYNAMIC:CAPS">G_IMPLEMENT_INTERFACE_DYNAMIC</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>TYPE_GIZMO<SPAN class="gtkdoc opt">,</SPAN>
                                                               gtk_gadget_gizmo_init<SPAN class="gtkdoc opt">));</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>expands to</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_init</SPAN>              <SPAN class="gtkdoc opt">(</SPAN>GtkGadget      <SPAN class="gtkdoc opt">*</SPAN>self<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_class_init</SPAN>        <SPAN class="gtkdoc opt">(</SPAN>GtkGadgetClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_class_finalize</SPAN>    <SPAN class="gtkdoc opt">(</SPAN>GtkGadgetClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc kwb">static</SPAN> gpointer gtk_gadget_parent_class <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">static</SPAN> GType    gtk_gadget_type_id <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">;</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>     <SPAN class=function>gtk_gadget_class_intern_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  gtk_gadget_parent_class <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-peek-parent">g_type_class_peek_parent</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN> 
  <SPAN class=function>gtk_gadget_class_init</SPAN> <SPAN class="gtkdoc opt">((</SPAN>GtkGadgetClass<SPAN class="gtkdoc opt">*)</SPAN> klass<SPAN class="gtkdoc opt">);</SPAN> 
<SPAN class="gtkdoc opt">}</SPAN>

GType
<SPAN class=function>gtk_gadget_get_type</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>return</SPAN> gtk_gadget_type_id<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>gtk_gadget_register_type</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GTypeModule <SPAN class="gtkdoc opt">*</SPAN>type_module<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwb">const</SPAN> GTypeInfo g_define_type_info <SPAN class="gtkdoc opt">= {</SPAN>
    <SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadgetClass<SPAN class="gtkdoc opt">),</SPAN>
    <SPAN class="gtkdoc opt">(</SPAN>GBaseInitFunc<SPAN class="gtkdoc opt">)</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN>
    <SPAN class="gtkdoc opt">(</SPAN>GBaseFinalizeFunc<SPAN class="gtkdoc opt">)</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN>
    <SPAN class="gtkdoc opt">(</SPAN>GClassInitFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_class_intern_init<SPAN class="gtkdoc opt">,</SPAN>
    <SPAN class="gtkdoc opt">(</SPAN>GClassFinalizeFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_class_finalize<SPAN class="gtkdoc opt">,</SPAN>
    NULL<SPAN class="gtkdoc opt">,</SPAN>   <SPAN class="gtkdoc slc">// class_data</SPAN>
    <SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkGadget<SPAN class="gtkdoc opt">),</SPAN>
    <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN>      <SPAN class="gtkdoc slc">// n_preallocs</SPAN>
    <SPAN class="gtkdoc opt">(</SPAN>GInstanceInitFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_init<SPAN class="gtkdoc opt">,</SPAN> 
    NULL    <SPAN class="gtkdoc slc">// value_table</SPAN>
  <SPAN class="gtkdoc opt">};</SPAN>
  gtk_gadget_type_id <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-type">g_type_module_register_type</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>type_module<SPAN class="gtkdoc opt">,</SPAN>
                                                    GTK_TYPE_THING<SPAN class="gtkdoc opt">,</SPAN>
                                                    <SPAN class=string>"GtkGadget"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                                    <SPAN class="gtkdoc opt">&amp;</SPAN>g_define_type_info<SPAN class="gtkdoc opt">,</SPAN>
                                                    <SPAN class="gtkdoc opt">(</SPAN>GTypeFlags<SPAN class="gtkdoc opt">)</SPAN> flags<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class="gtkdoc kwb">const</SPAN> GInterfaceInfo g_implement_interface_info <SPAN class="gtkdoc opt">= {</SPAN>
      <SPAN class="gtkdoc opt">(</SPAN>GInterfaceInitFunc<SPAN class="gtkdoc opt">)</SPAN> gtk_gadget_gizmo_init
    <SPAN class="gtkdoc opt">};</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-add-interface">g_type_module_add_interface</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>type_module<SPAN class="gtkdoc opt">,</SPAN> g_define_type_id<SPAN class="gtkdoc opt">,</SPAN> TYPE_GIZMO<SPAN class="gtkdoc opt">, &amp;</SPAN>g_implement_interface_info<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=G-DEFINE-DYNAMIC-TYPE-EXTENDED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in Camel case.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_name</P></TD>
<TD class=parameter_description>
<P>The name of the new type, in lowercase, with words separated by '_'.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>TYPE_PARENT</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the parent type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P><A title="enum GTypeFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeFlags"><SPAN class=type>GTypeFlags</SPAN></A> to pass to <A title=g_type_module_register_type&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-type"><CODE class=function>g_type_module_register_type()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>CODE</P></TD>
<TD class=parameter_description>
<P>Custom code that gets inserted in the *_get_type() function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-14.html#api-index-2.14">2.14</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-IMPLEMENT-INTERFACE-DYNAMIC:CAPS></A>
<H3>G_IMPLEMENT_INTERFACE_DYNAMIC()</H3><PRE class=programlisting>#define             G_IMPLEMENT_INTERFACE_DYNAMIC(TYPE_IFACE, iface_init)</PRE>
<P>A convenience macro to ease interface addition in the <EM class=parameter><CODE>_C_</CODE></EM> section of <A title=G_DEFINE_DYNAMIC_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_DYNAMIC_TYPE_EXTENDED()</CODE></A>. See <A title=G_DEFINE_DYNAMIC_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_DYNAMIC_TYPE_EXTENDED()</CODE></A> for an example.</P>
<P>Note that this macro can only be used together with the G_DEFINE_DYNAMIC_TYPE_EXTENDED macros, since it depends on variable names from that macro.</P>
<DIV class=refsect3><A name=G-IMPLEMENT-INTERFACE-DYNAMIC.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TYPE_IFACE</P></TD>
<TD class=parameter_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the interface to add</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>iface_init</P></TD>
<TD class=parameter_description>
<P>The interface init function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-ADD-PRIVATE-DYNAMIC:CAPS></A>
<H3>G_ADD_PRIVATE_DYNAMIC()</H3><PRE class=programlisting>#define             G_ADD_PRIVATE_DYNAMIC(TypeName)</PRE>
<P>A convenience macro to ease adding private data to instances of a new dynamic type in the <EM class=parameter><CODE>_C_</CODE></EM> section of <A title=G_DEFINE_DYNAMIC_TYPE_EXTENDED() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#G-DEFINE-DYNAMIC-TYPE-EXTENDED:CAPS"><CODE class=function>G_DEFINE_DYNAMIC_TYPE_EXTENDED()</CODE></A>. See <A title=G_ADD_PRIVATE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-ADD-PRIVATE:CAPS"><CODE class=function>G_ADD_PRIVATE()</CODE></A> for details, it is similar but for static types.</P>
<P>Note that this macro can only be used together with the G_DEFINE_DYNAMIC_TYPE_EXTENDED macros, since it depends on variable names from that macro.</P>
<DIV class=refsect3><A name=G-ADD-PRIVATE-DYNAMIC.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>TypeName</P></TD>
<TD class=parameter_description>
<P>the name of the type in CamelCase</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV></DIV>
<DIV class=refsect1><A name=GTypeModule.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GTypeModule-struct></A>
<H3>struct GTypeModule</H3><PRE class=programlisting>struct GTypeModule {
  gchar *name;
};
</PRE>
<P>The members of the GTypeModule structure should not be accessed directly, except for the <EM class=parameter><CODE>name</CODE></EM> field.</P>
<DIV class=refsect3><A name=GTypeModule.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GTypeModule-struct.name></A>name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the name of the module</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GTypeModuleClass></A>
<H3>struct GTypeModuleClass</H3><PRE class=programlisting>struct GTypeModuleClass {
  GObjectClass parent_class;

  gboolean (* load)   (GTypeModule *module);
  void     (* unload) (GTypeModule *module);
};
</PRE>
<P>In order to implement dynamic loading of types based on <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html"><SPAN class=type>GTypeModule</SPAN></A>, the <EM class=parameter><CODE>load</CODE></EM> and <EM class=parameter><CODE>unload</CODE></EM> functions in <A title="struct GTypeModuleClass" class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#GTypeModuleClass"><SPAN class=type>GTypeModuleClass</SPAN></A> must be implemented.</P>
<DIV class=refsect3><A name=GTypeModuleClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeModuleClass.load></A>load</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>loads the module and registers one or more types using <A title=g_type_module_register_type&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html#g-type-module-register-type"><CODE class=function>g_type_module_register_type()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GTypeModuleClass.unload></A>unload</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>unloads the module</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=GTypeModule.see-also></A>
<H2>See Also</H2>
<P><A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A>, <A href="https://developer.gnome.org/gobject/glib-Dynamic-Loading-of-Modules.html#GModule"><SPAN class=type>GModule</SPAN></A></P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28674">Topic #28674: GObject.. GObject &#38323;?The base object type.. .. Functions.. void (*GObjectGetPropertyFunc) () .. void (*GObjectSetPropertyFunc) () .. void (*GObjectFinalizeFunc) () .. #defineG ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>GObject</SPAN></H2>
<P>GObject &#8212; The base object type</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GObjectGetPropertyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectGetPropertyFunc">*GObjectGetPropertyFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GObjectSetPropertyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectSetPropertyFunc">*GObjectSetPropertyFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GObjectFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectFinalizeFunc">*GObjectFinalizeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-TYPE-IS-OBJECT:CAPS">G_TYPE_IS_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT:CAPS">G_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-IS-OBJECT:CAPS">G_IS_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS:CAPS">G_OBJECT_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_OBJECT_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-IS-OBJECT-CLASS:CAPS">G_IS_OBJECT_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_GET_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-GET-CLASS:CAPS">G_OBJECT_GET_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-TYPE:CAPS">G_OBJECT_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_TYPE_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-TYPE-NAME:CAPS">G_OBJECT_TYPE_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_CLASS_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS-TYPE:CAPS">G_OBJECT_CLASS_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_CLASS_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS-NAME:CAPS">G_OBJECT_CLASS_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property">g_object_class_install_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_class_install_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-properties">g_object_class_install_properties</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_class_find_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-find-property">g_object_class_find_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A title=g_object_class_list_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-list-properties">g_object_class_list_properties</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_class_override_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-override-property">g_object_class_override_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_interface_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-interface-install-property">g_object_interface_install_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_interface_find_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-interface-find-property">g_object_interface_find_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A title=g_object_interface_list_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-interface-list-properties">g_object_interface_list_properties</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new">g_object_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_newv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-newv">g_object_newv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref">g_object_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink">g_object_ref_sink</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_set_object() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-set-object">g_set_object</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_clear_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-clear-object">g_clear_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_object_is_floating&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-is-floating">g_object_is_floating</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_force_floating&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-force-floating">g_object_force_floating</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify">*GWeakNotify</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_weak_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-ref">g_object_weak_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_weak_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-unref">g_object_weak_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer">g_object_add_weak_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_remove_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-remove-weak-pointer">g_object_remove_weak_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GToggleNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GToggleNotify">*GToggleNotify</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref">g_object_add_toggle_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_remove_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-remove-toggle-ref">g_object_remove_toggle_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_connect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-connect">g_object_connect</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_disconnect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-disconnect">g_object_disconnect</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set">g_object_set</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get">g_object_get</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify">g_object_notify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec">g_object_notify_by_pspec</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify">g_object_freeze_notify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_thaw_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-thaw-notify">g_object_thaw_notify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_get_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-data">g_object_get_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data">g_object_set_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_data_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data-full">g_object_set_data_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_steal_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-data">g_object_steal_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_dup_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-dup-data">g_object_dup_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_object_replace_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-replace-data">g_object_replace_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata">g_object_get_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata">g_object_set_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_qdata_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata-full">g_object_set_qdata_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_steal_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-qdata">g_object_steal_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_dup_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-dup-qdata">g_object_dup_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_object_replace_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-replace-qdata">g_object_replace_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-property">g_object_set_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_get_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-property">g_object_get_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_new_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new-valist">g_object_new_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-valist">g_object_set_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_get_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-valist">g_object_get_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_watch_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-watch-closure">g_object_watch_closure</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_run_dispose&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-run-dispose">g_object_run_dispose</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_WARN_INVALID_PROPERTY_ID() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-WARN-INVALID-PROPERTY-ID:CAPS">G_OBJECT_WARN_INVALID_PROPERTY_ID</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_weak_ref_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-init">g_weak_ref_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_weak_ref_clear&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-clear">g_weak_ref_clear</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_weak_ref_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-get">g_weak_ref_get</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_weak_ref_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-set">g_weak_ref_set</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.signals></A>
<H2>Signals</H2>
<DIV class=informaltable>
<TABLE class=informaltable border=0>
<COLGROUP>
<COL class=signals_return width=150>
<COL class=signals_name width=300>
<COL class=signals_flags width=200></COLGROUP>
<TBODY>
<TR>
<TD class=signal_type><SPAN class=returnvalue>void</SPAN></TD>
<TD class=signal_name><A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify">notify</A></TD>
<TD class=signal_flags><A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-NO-HOOKS:CAPS">No Hooks</A></TD></TR></TBODY></TABLE></DIV></DIV><A name=GObject></A>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-struct">GObject</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass">GObjectClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GObjectConstructParam" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectConstructParam">GObjectConstructParam</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParameter" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GParameter">GParameter</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GInitiallyUnowned class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned">GInitiallyUnowned</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GInitiallyUnownedClass class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnownedClass">GInitiallyUnownedClass</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INITIALLY_UNOWNED class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-TYPE-INITIALLY-UNOWNED:CAPS">G_TYPE_INITIALLY_UNOWNED</A></TD></TR>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef">GWeakRef</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.object-hierarchy></A>
<H2>Object Hierarchy</H2><PRE class=screen>    GObject
    <SPAN class=lineart>&#9500;&#9472;&#9472;</SPAN> <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html">GBinding</A>
    <SPAN class=lineart>&#9584;&#9472;&#9472;</SPAN> <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html">GTypeModule</A>
</PRE></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.description></A>
<H2>Description</H2>
<P>GObject is the fundamental type providing the common attributes and methods for all object types in GTK+, Pango and other libraries based on GObject. The GObject class provides methods for object construction and destruction, property access methods, and signal support. Signals are described in detail <A title=Signals class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html">here</A>.</P>
<P>For a tutorial on implementing a new GObject class, see <A title="How to define and implement a new GObject" class=link href="https://developer.gnome.org/gobject/stable/howto-gobject.html">How to define and implement a new GObject</A>. For a list of naming conventions for GObjects and their methods, see the <A title=Conventions class=link href="https://developer.gnome.org/gobject/stable/gtype-conventions.html">GType conventions</A>. For the high-level concepts behind GObject, read <A title="Instantiable classed types: objects" class=link href="https://developer.gnome.org/gobject/stable/gtype-instantiable-classed.html">Instantiable classed types: Objects</A>.</P>
<DIV class=refsect3><A name=floating-ref></A>
<H4>Floating references</H4>
<P>GInitiallyUnowned is derived from GObject. The only difference between the two is that the initial reference of a GInitiallyUnowned is flagged as a "floating" reference. This means that it is not specifically claimed to be "owned" by any code portion. The main motivation for providing floating references is C convenience. In particular, it allows code to be written as:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>container <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>create_container</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
<SPAN class=function>container_add_child</SPAN> <SPAN class="gtkdoc opt">(</SPAN>container<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function>create_child</SPAN><SPAN class="gtkdoc opt">());</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>If <CODE class=function>container_add_child()</CODE> calls <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A> on the passed-in child, no reference of the newly created child is leaked. Without floating references, <CODE class=function>container_add_child()</CODE> can only <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> the new child, so to implement this code without reference leaks, it would have to be written as:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>Child <SPAN class="gtkdoc opt">*</SPAN>child<SPAN class="gtkdoc opt">;</SPAN>
container <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>create_container</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
child <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>create_child</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
<SPAN class=function>container_add_child</SPAN> <SPAN class="gtkdoc opt">(</SPAN>container<SPAN class="gtkdoc opt">,</SPAN> child<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>child<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>The floating reference can be converted into an ordinary reference by calling <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A>. For already sunken objects (objects that don't have a floating reference anymore), <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A> is equivalent to <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> and returns a new reference.</P>
<P>Since floating references are useful almost exclusively for C convenience, language bindings that provide automated reference and memory ownership maintenance (such as smart pointers or garbage collection) should not expose floating references in their API.</P>
<P>Some object implementations may need to save an objects floating state across certain code portions (an example is <A href="http://developer.gnome.org/gtk4/GtkMenu.html#GtkMenu-struct"><SPAN class=type>GtkMenu</SPAN></A>), to achieve this, the following sequence can be used:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// save floating state</SPAN>
gboolean was_floating <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-is-floating">g_object_is_floating</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink">g_object_ref_sink</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc slc">// protected code portion</SPAN>

<SPAN class="gtkdoc opt">...</SPAN>

<SPAN class="gtkdoc slc">// restore floating state</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>was_floating<SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-force-floating">g_object_force_floating</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>else</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN> <SPAN class="gtkdoc slc">// release previously acquired reference</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GObjectGetPropertyFunc></A>
<H3>GObjectGetPropertyFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GObjectGetPropertyFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                           <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>get_property</CODE></EM> function of <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectGetPropertyFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the numeric id under which the property was registered with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to return the property value in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> describing the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GObjectSetPropertyFunc></A>
<H3>GObjectSetPropertyFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GObjectSetPropertyFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                           <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>set_property</CODE></EM> function of <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectSetPropertyFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the numeric id under which the property was registered with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the new value for the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> describing the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GObjectFinalizeFunc></A>
<H3>GObjectFinalizeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GObjectFinalizeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>finalize</CODE></EM> function of <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectFinalizeFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> being finalized</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-OBJECT:CAPS></A>
<H3>G_TYPE_IS_OBJECT()</H3><PRE class=programlisting>#define G_TYPE_IS_OBJECT(type)      (G_TYPE_FUNDAMENTAL (type) == G_TYPE_OBJECT)
</PRE>
<P>Check if the passed in type id is a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> or derived from it.</P>
<DIV class=refsect3><A name=G-TYPE-IS-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>Type id to check</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-OBJECT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, indicating whether <EM class=parameter><CODE>type</CODE></EM> is a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT:CAPS></A>
<H3>G_OBJECT()</H3><PRE class=programlisting>#define G_OBJECT(object)            (G_TYPE_CHECK_INSTANCE_CAST ((object), G_TYPE_OBJECT, GObject))
</PRE>
<P>Casts a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> or derived pointer into a (GObject*) pointer. Depending on the current debugging level, this function may invoke certain runtime checks to identify invalid casts.</P>
<DIV class=refsect3><A name=G-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Object which is subject to casting.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-OBJECT:CAPS></A>
<H3>G_IS_OBJECT()</H3><PRE class=programlisting>#define G_IS_OBJECT(object)         (G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE ((object), G_TYPE_OBJECT))
</PRE>
<P>Checks whether a valid <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> pointer is of type <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Instance to check for being a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-CLASS:CAPS></A>
<H3>G_OBJECT_CLASS()</H3><PRE class=programlisting>#define G_OBJECT_CLASS(class)       (G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_OBJECT, GObjectClass))
</PRE>
<P>Casts a derived <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> structure into a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-OBJECT-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-OBJECT-CLASS:CAPS></A>
<H3>G_IS_OBJECT_CLASS()</H3><PRE class=programlisting>#define G_IS_OBJECT_CLASS(class)    (G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_OBJECT))
</PRE>
<P>Checks whether <EM class=parameter><CODE>class</CODE></EM> "is a" valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> structure of type <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> or derived.</P>
<DIV class=refsect3><A name=G-IS-OBJECT-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-GET-CLASS:CAPS></A>
<H3>G_OBJECT_GET_CLASS()</H3><PRE class=programlisting>#define G_OBJECT_GET_CLASS(object)  (G_TYPE_INSTANCE_GET_CLASS ((object), G_TYPE_OBJECT, GObjectClass))
</PRE>
<P>Get the class structure associated to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance.</P>
<DIV class=refsect3><A name=G-OBJECT-GET-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-GET-CLASS.returns></A>
<H4>Returns</H4>
<P>pointer to object class structure.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-TYPE:CAPS></A>
<H3>G_OBJECT_TYPE()</H3><PRE class=programlisting>#define G_OBJECT_TYPE(object)       (G_TYPE_FROM_INSTANCE (object))
</PRE>
<P>Get the type id of an object.</P>
<DIV class=refsect3><A name=G-OBJECT-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Object to return the type id for.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-TYPE.returns></A>
<H4>Returns</H4>
<P>Type id of <EM class=parameter><CODE>object</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-TYPE-NAME:CAPS></A>
<H3>G_OBJECT_TYPE_NAME()</H3><PRE class=programlisting>#define G_OBJECT_TYPE_NAME(object)  (g_type_name (G_OBJECT_TYPE (object)))
</PRE>
<P>Get the name of an object's type.</P>
<DIV class=refsect3><A name=G-OBJECT-TYPE-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Object to return the type name for.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-TYPE-NAME.returns></A>
<H4>Returns</H4>
<P>Type name of <EM class=parameter><CODE>object</CODE></EM> . The string is owned by the type system and should not be freed.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-CLASS-TYPE:CAPS></A>
<H3>G_OBJECT_CLASS_TYPE()</H3><PRE class=programlisting>#define G_OBJECT_CLASS_TYPE(class)  (G_TYPE_FROM_CLASS (class))
</PRE>
<P>Get the type id of a class structure.</P>
<DIV class=refsect3><A name=G-OBJECT-CLASS-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-CLASS-TYPE.returns></A>
<H4>Returns</H4>
<P>Type id of <EM class=parameter><CODE>class</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-CLASS-NAME:CAPS></A>
<H3>G_OBJECT_CLASS_NAME()</H3><PRE class=programlisting>#define G_OBJECT_CLASS_NAME(class)  (g_type_name (G_OBJECT_CLASS_TYPE (class)))
</PRE>
<P>Return the name of a class structure's type.</P>
<DIV class=refsect3><A name=G-OBJECT-CLASS-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-CLASS-NAME.returns></A>
<H4>Returns</H4>
<P>Type name of <EM class=parameter><CODE>class</CODE></EM> . The string is owned by the type system and should not be freed.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-install-property></A>
<H3>g_object_class_install_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_class_install_property (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                                 <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Installs a new property.</P>
<P>All properties should be installed during the class initializer. It is possible to install properties after that, but doing so is not recommend, and specifically, is not guaranteed to be thread-safe vs. use of properties on the same type on other threads.</P>
<P>Note that it is possible to redefine a property in a derived class, by installing a property with the same name. This can be useful at times, e.g. to change the range of allowed values or the default value.</P>
<DIV class=refsect3><A name=g-object-class-install-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the id for the new property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the new property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-install-properties></A>
<H3>g_object_class_install_properties&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_class_install_properties (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_pspecs</CODE></EM>,
                                   <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> **pspecs</CODE></EM>);</PRE>
<P>Installs new properties from an array of <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A>.</P>
<P>All properties should be installed during the class initializer. It is possible to install properties after that, but doing so is not recommend, and specifically, is not guaranteed to be thread-safe vs. use of properties on the same type on other threads.</P>
<P>The property id of each property is the index of each <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> in the <EM class=parameter><CODE>pspecs</CODE></EM> array.</P>
<P>The property id of 0 is treated specially by <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> and it should not be used to store a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<P>This function should be used if you plan to use a static array of <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> and <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A>. For instance, this class initialization:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">enum</SPAN> <SPAN class="gtkdoc opt">{</SPAN>
  PROP_0<SPAN class="gtkdoc opt">,</SPAN> PROP_FOO<SPAN class="gtkdoc opt">,</SPAN> PROP_BAR<SPAN class="gtkdoc opt">,</SPAN> N_PROPERTIES
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">static</SPAN> GParamSpec <SPAN class="gtkdoc opt">*</SPAN>obj_properties<SPAN class="gtkdoc opt">[</SPAN>N_PROPERTIES<SPAN class="gtkdoc opt">] = {</SPAN> NULL<SPAN class="gtkdoc opt">, };</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_object_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObjectClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GObjectClass <SPAN class="gtkdoc opt">*</SPAN>gobject_class <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS:CAPS">G_OBJECT_CLASS</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN>

  obj_properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">] =</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-int">g_param_spec_int</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                      <SPAN class="gtkdoc opt">-</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">,</SPAN> G_MAXINT<SPAN class="gtkdoc opt">,</SPAN>
                      <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                      G_PARAM_READWRITE<SPAN class="gtkdoc opt">);</SPAN>

  obj_properties<SPAN class="gtkdoc opt">[</SPAN>PROP_BAR<SPAN class="gtkdoc opt">] =</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-string">g_param_spec_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"bar"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Bar"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Bar"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                         NULL<SPAN class="gtkdoc opt">,</SPAN>
                         G_PARAM_READWRITE<SPAN class="gtkdoc opt">);</SPAN>

  gobject_class<SPAN class="gtkdoc opt">-&gt;</SPAN>set_property <SPAN class="gtkdoc opt">=</SPAN> my_object_set_property<SPAN class="gtkdoc opt">;</SPAN>
  gobject_class<SPAN class="gtkdoc opt">-&gt;</SPAN>get_property <SPAN class="gtkdoc opt">=</SPAN> my_object_get_property<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-properties">g_object_class_install_properties</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gobject_class<SPAN class="gtkdoc opt">,</SPAN>
                                     N_PROPERTIES<SPAN class="gtkdoc opt">,</SPAN>
                                     obj_properties<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>allows calling <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A> to notify of property changes:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>my_object_set_foo</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject <SPAN class="gtkdoc opt">*</SPAN>self<SPAN class="gtkdoc opt">,</SPAN> gint foo<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">-&gt;</SPAN>foo <SPAN class="gtkdoc opt">!=</SPAN> foo<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      self<SPAN class="gtkdoc opt">-&gt;</SPAN>foo <SPAN class="gtkdoc opt">=</SPAN> foo<SPAN class="gtkdoc opt">;</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec">g_object_notify_by_pspec</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT:CAPS">G_OBJECT</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">),</SPAN> obj_properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">]);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
 <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-object-class-install-properties.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_pspecs</P></TD>
<TD class=parameter_description>
<P>the length of the <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspecs</P></TD>
<TD class=parameter_description>
<P>the <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> array defining the new properties. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_pspecs]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-find-property></A>
<H3>g_object_class_find_property&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_object_class_find_property (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>);</PRE>
<P>Looks up the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for a property of a class.</P>
<DIV class=refsect3><A name=g-object-class-find-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of the property to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-class-find-property.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the property, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the class doesn't have a property of that name. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-list-properties></A>
<H3>g_object_class_list_properties&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;**
g_object_class_list_properties (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_properties</CODE></EM>);</PRE>
<P>Get an array of <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>* for all properties of a class.</P>
<DIV class=refsect3><A name=g-object-class-list-properties.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_properties</P></TD>
<TD class=parameter_description>
<P>return location for the length of the returned array. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-class-list-properties.returns></A>
<H4>Returns</H4>
<P>an array of <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>* which should be freed after use. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_properties][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-override-property></A>
<H3>g_object_class_override_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_class_override_property (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>property_id</CODE></EM> as referring to a property with the name <EM class=parameter><CODE>name</CODE></EM> in a parent class or in an interface implemented by <EM class=parameter><CODE>oclass</CODE></EM> . This allows this class to "override" a property implementation in a parent class or to provide the implementation of a property from an interface.</P>
<P>Internally, overriding is implemented by creating a property of type <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A>; generally operations that query the properties of the object class, such as <A title=g_object_class_find_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-find-property"><CODE class=function>g_object_class_find_property()</CODE></A> or <A title=g_object_class_list_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-list-properties"><CODE class=function>g_object_class_list_properties()</CODE></A> will return the overridden property. However, in one case, the <EM class=parameter><CODE>construct_properties</CODE></EM> argument of the <EM class=parameter><CODE>constructor</CODE></EM> virtual function, the <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A> is passed instead, so that the <EM class=parameter><CODE>param_id</CODE></EM> field of the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> will be correct. For virtually all uses, this makes no difference. If you need to get the overridden property, you can call <A title=g_param_spec_get_redirect_target&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-redirect-target"><CODE class=function>g_param_spec_get_redirect_target()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-class-override-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the new property ID</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the name of a property registered in a parent class or in an interface of this class.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-interface-install-property></A>
<H3>g_object_interface_install_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_interface_install_property (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                                     <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Add a property to an interface; this is only useful for interfaces that are added to GObject-derived types. Adding a property to an interface forces all objects classes with that interface to have a compatible property. The compatible property could be a newly created <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>, but normally <A title=g_object_class_override_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-override-property"><CODE class=function>g_object_class_override_property()</CODE></A> will be used so that the object class only needs to provide an implementation and inherits the property description, default value, bounds, and so forth from the interface property.</P>
<P>This function is meant to be called from the interface's default vtable initialization function (the <EM class=parameter><CODE>class_init</CODE></EM> member of <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>.) It must not be called after after <EM class=parameter><CODE>class_init</CODE></EM> has been called for any object types implementing this interface.</P>
<DIV class=refsect3><A name=g-object-interface-install-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>any interface vtable for the interface, or the default vtable for the interface. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the new property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-interface-find-property></A>
<H3>g_object_interface_find_property&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_object_interface_find_property (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>);</PRE>
<P>Find the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> with the given name for an interface. Generally, the interface vtable passed in as <EM class=parameter><CODE>g_iface</CODE></EM> will be the default vtable from <A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref"><CODE class=function>g_type_default_interface_ref()</CODE></A>, or, if you know the interface has already been loaded, <A title=g_type_default_interface_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-peek"><CODE class=function>g_type_default_interface_peek()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-interface-find-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>any interface vtable for the interface, or the default vtable for the interface. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>name of a property to lookup.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-interface-find-property.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the property of the interface with the name <EM class=parameter><CODE>property_name</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no such property exists. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-interface-list-properties></A>
<H3>g_object_interface_list_properties&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;**
g_object_interface_list_properties (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_properties_p</CODE></EM>);</PRE>
<P>Lists the properties of an interface.Generally, the interface vtable passed in as <EM class=parameter><CODE>g_iface</CODE></EM> will be the default vtable from <A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref"><CODE class=function>g_type_default_interface_ref()</CODE></A>, or, if you know the interface has already been loaded, <A title=g_type_default_interface_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-peek"><CODE class=function>g_type_default_interface_peek()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-interface-list-properties.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>any interface vtable for the interface, or the default vtable for the interface. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_properties_p</P></TD>
<TD class=parameter_description>
<P>location to store number of properties returned. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-interface-list-properties.returns></A>
<H4>Returns</H4>
<P>a pointer to an array of pointers to <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> structures. The paramspecs are owned by GLib, but the array should be freed with <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> when you are done with it. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_properties_p][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-new></A>
<H3>g_object_new&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_new (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a new instance of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype and sets its properties.</P>
<P>Construction parameters (see <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT</SPAN></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT-ONLY:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT_ONLY</SPAN></A>) which are not explicitly specified are set to their default values.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P>the type id of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype to instantiate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>the name of the first property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the value of the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-new.returns></A>
<H4>Returns</H4>
<P>(transfer full) (type GObject.Object) : a new instance of <EM class=parameter><CODE>object_type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-newv></A>
<H3>g_object_newv&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_newv (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_parameters</CODE></EM>,
               <EM class=parameter><CODE><A title="struct GParameter" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GParameter"><SPAN class=type>GParameter</SPAN></A> *parameters</CODE></EM>);</PRE>
<P>Creates a new instance of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype and sets its properties.</P>
<P>Construction parameters (see <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT</SPAN></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT-ONLY:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT_ONLY</SPAN></A>) which are not explicitly specified are set to their default values.</P>
<P><SPAN class=annotation>[<ACRONYM title="Rename the original symbol's name to SYMBOL."><SPAN class=acronym>rename-to</SPAN></ACRONYM> g_object_new]</SPAN></P>
<DIV class=refsect3><A name=g-object-newv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P>the type id of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype to instantiate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_parameters</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>parameters</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>parameters</P></TD>
<TD class=parameter_description>
<P>an array of <A title="struct GParameter" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GParameter"><SPAN class=type>GParameter</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_parameters]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-newv.returns></A>
<H4>Returns</H4>
<P>a new instance of <EM class=parameter><CODE>object_type</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-ref></A>
<H3>g_object_ref&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_ref (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Increases the reference count of <EM class=parameter><CODE>object</CODE></EM> .</P>
<DIV class=refsect3><A name=g-object-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-ref.returns></A>
<H4>Returns</H4>
<P>the same <EM class=parameter><CODE>object</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-unref></A>
<H3>g_object_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_unref (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Decreases the reference count of <EM class=parameter><CODE>object</CODE></EM> . When its reference count drops to 0, the object is finalized (i.e. its memory is freed).</P>
<P>If the pointer to the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> may be reused in future (for example, if it is an instance variable of another object), it is recommended to clear the pointer to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> rather than retain a dangling pointer to a potentially invalid <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance. Use <A title=g_clear_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-clear-object"><CODE class=function>g_clear_object()</CODE></A> for this.</P>
<DIV class=refsect3><A name=g-object-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-ref-sink></A>
<H3>g_object_ref_sink&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_ref_sink (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Increase the reference count of <EM class=parameter><CODE>object</CODE></EM> , and possibly remove the <A title="Floating references" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#floating-ref">floating</A> reference, if <EM class=parameter><CODE>object</CODE></EM> has a floating reference.</P>
<P>In other words, if the object is floating, then this call "assumes ownership" of the floating reference, converting it to a normal reference by clearing the floating flag while leaving the reference count unchanged. If the object is not floating, then this call adds a new normal reference increasing the reference count by one.</P>
<DIV class=refsect3><A name=g-object-ref-sink.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-ref-sink.returns></A>
<H4>Returns</H4>
<P><EM class=parameter><CODE>object</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-set-object></A>
<H3>g_set_object()</H3><PRE class=programlisting>#define             g_set_object(object_ptr, new_object)</PRE>
<P>Updates a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> pointer to refer to <EM class=parameter><CODE>new_object</CODE></EM> . It increments the reference count of <EM class=parameter><CODE>new_object</CODE></EM> (if non-<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), decrements the reference count of the current value of <EM class=parameter><CODE>object_ptr</CODE></EM> (if non-<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), and assigns <EM class=parameter><CODE>new_object</CODE></EM> to <EM class=parameter><CODE>object_ptr</CODE></EM> . The assignment is not atomic.</P>
<P><EM class=parameter><CODE>object_ptr</CODE></EM> must not be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>A macro is also included that allows this function to be used without pointer casts. The function itself is static inline, so its address may vary between compilation units.</P>
<P>One convenient usage of this function is in implementing property setters:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>foo_set_bar</SPAN> <SPAN class="gtkdoc opt">(</SPAN>Foo <SPAN class="gtkdoc opt">*</SPAN>foo<SPAN class="gtkdoc opt">,</SPAN>
             Bar <SPAN class="gtkdoc opt">*</SPAN>new_bar<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-if-fail">g_return_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>IS_FOO</SPAN> <SPAN class="gtkdoc opt">(</SPAN>foo<SPAN class="gtkdoc opt">));</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-if-fail">g_return_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>new_bar <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">||</SPAN> <SPAN class=function>IS_BAR</SPAN> <SPAN class="gtkdoc opt">(</SPAN>new_bar<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-set-object">g_set_object</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>foo<SPAN class="gtkdoc opt">-&gt;</SPAN>bar<SPAN class="gtkdoc opt">,</SPAN> new_bar<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify">g_object_notify</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>foo<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"bar"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-set-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_ptr</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> reference</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>new_object</P></TD>
<TD class=parameter_description>
<P>a pointer to the new <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to assign to it, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to clear the pointer. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-set-object.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the value of <EM class=parameter><CODE>object_ptr</CODE></EM> changed, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-clear-object></A>
<H3>g_clear_object&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_clear_object (<EM class=parameter><CODE>volatile <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> **object_ptr</CODE></EM>);</PRE>
<P>Clears a reference to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>.</P>
<P><EM class=parameter><CODE>object_ptr</CODE></EM> must not be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>If the reference is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then this function does nothing. Otherwise, the reference count of the object is decreased and the pointer is set to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>A macro is also included that allows this function to be used without pointer casts.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-clear-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_ptr</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> reference</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-28.html#api-index-2.28">2.28</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-is-floating></A>
<H3>g_object_is_floating&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_object_is_floating (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Checks whether <EM class=parameter><CODE>object</CODE></EM> has a <A title="Floating references" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#floating-ref">floating</A> reference.</P>
<DIV class=refsect3><A name=g-object-is-floating.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-is-floating.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>object</CODE></EM> has a floating reference</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-force-floating></A>
<H3>g_object_force_floating&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_force_floating (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>This function is intended for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> implementations to re-enforce a <A title="Floating references" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#floating-ref">floating</A> object reference. Doing this is seldom required: all <A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned"><SPAN class=type>GInitiallyUnowneds</SPAN></A> are created with a floating reference which usually just needs to be sunken by calling <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-force-floating.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GWeakNotify></A>
<H3>GWeakNotify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GWeakNotify<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *where_the_object_was</CODE></EM>);</PRE>
<P>A <A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> function can be added to an object as a callback that gets triggered when the object is finalized. Since the object is already being finalized when the <A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> is called, there's not much you could do with the object, apart from e.g. using its address as hash-index or the like.</P>
<DIV class=refsect3><A name=GWeakNotify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data that was provided when the weak reference was established</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>where_the_object_was</P></TD>
<TD class=parameter_description>
<P>the object being finalized</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-weak-ref></A>
<H3>g_object_weak_ref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_weak_ref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE><A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> notify</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Adds a weak reference callback to an object. Weak references are used for notification when an object is finalized. They are called "weak references" because they allow you to safely hold a pointer to an object without calling <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> (<A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> adds a strong reference, that is, forces the object to stay alive).</P>
<P>Note that the weak references created by this method are not thread-safe: they cannot safely be used in one thread if the object's last <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> might happen in another thread. Use <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> if thread-safety is required.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-weak-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to reference weakly</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>callback to invoke before the object is freed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>extra data to pass to notify</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-weak-unref></A>
<H3>g_object_weak_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_weak_unref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE><A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> notify</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes a weak reference callback to an object.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-weak-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to remove a weak reference from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>callback to search for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to search for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-add-weak-pointer></A>
<H3>g_object_add_weak_pointer&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_add_weak_pointer (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *weak_pointer_location</CODE></EM>);</PRE>
<P>Adds a weak reference from weak_pointer to <EM class=parameter><CODE>object</CODE></EM> to indicate that the pointer located at <EM class=parameter><CODE>weak_pointer_location</CODE></EM> is only valid during the lifetime of <EM class=parameter><CODE>object</CODE></EM> . When the <EM class=parameter><CODE>object</CODE></EM> is finalized, <EM class=parameter><CODE>weak_pointer</CODE></EM> will be set to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>Note that as with <A title=g_object_weak_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-ref"><CODE class=function>g_object_weak_ref()</CODE></A>, the weak references created by this method are not thread-safe: they cannot safely be used in one thread if the object's last <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> might happen in another thread. Use <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> if thread-safety is required.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-add-weak-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The object that should be weak referenced.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>weak_pointer_location</P></TD>
<TD class=parameter_description>
<P>The memory address of a pointer. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>][not optional]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-remove-weak-pointer></A>
<H3>g_object_remove_weak_pointer&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_remove_weak_pointer (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *weak_pointer_location</CODE></EM>);</PRE>
<P>Removes a weak reference from <EM class=parameter><CODE>object</CODE></EM> that was previously added using <A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer"><CODE class=function>g_object_add_weak_pointer()</CODE></A>. The <EM class=parameter><CODE>weak_pointer_location</CODE></EM> has to match the one used with <A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer"><CODE class=function>g_object_add_weak_pointer()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-remove-weak-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The object that is weak referenced.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>weak_pointer_location</P></TD>
<TD class=parameter_description>
<P>The memory address of a pointer. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>][not optional]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GToggleNotify></A>
<H3>GToggleNotify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GToggleNotify<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                  <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> is_last_ref</CODE></EM>);</PRE>
<P>A callback function used for notification when the state of a toggle reference changes. See <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A>.</P>
<DIV class=refsect3><A name=GToggleNotify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>Callback data passed to <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The object on which <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A> was called.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>is_last_ref</P></TD>
<TD class=parameter_description>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the toggle reference is now the last reference to the object. <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the toggle reference was the last reference and there are now other references.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-add-toggle-ref></A>
<H3>g_object_add_toggle_ref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_add_toggle_ref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                         <EM class=parameter><CODE><A title=GToggleNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GToggleNotify"><SPAN class=type>GToggleNotify</SPAN></A> notify</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Increases the reference count of the object by one and sets a callback to be called when all other references to the object are dropped, or when this is already the last reference to the object and another reference is established.</P>
<P>This functionality is intended for binding <EM class=parameter><CODE>object</CODE></EM> to a proxy object managed by another memory manager. This is done with two paired references: the strong reference added by <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A> and a reverse reference to the proxy object which is either a strong reference or weak reference.</P>
<P>The setup is that when there are no other references to <EM class=parameter><CODE>object</CODE></EM> , only a weak reference is held in the reverse direction from <EM class=parameter><CODE>object</CODE></EM> to the proxy object, but when there are other references held to <EM class=parameter><CODE>object</CODE></EM> , a strong reference is held. The <EM class=parameter><CODE>notify</CODE></EM> callback is called when the reference from <EM class=parameter><CODE>object</CODE></EM> to the proxy object should be "toggled" from strong to weak (<EM class=parameter><CODE>is_last_ref</CODE></EM> true) or weak to strong (<EM class=parameter><CODE>is_last_ref</CODE></EM> false).</P>
<P>Since a (normal) reference must be held to the object before calling <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A>, the initial state of the reverse link is always strong.</P>
<P>Multiple toggle references may be added to the same gobject, however if there are multiple toggle references to an object, none of them will ever be notified until all but one are removed. For this reason, you should only ever use a toggle reference if there is important state in the proxy object.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-add-toggle-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>a function to call when this reference is the last reference to the object, or is no longer the last reference.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>notify</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-8.html#api-index-2.8">2.8</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-remove-toggle-ref></A>
<H3>g_object_remove_toggle_ref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_remove_toggle_ref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                            <EM class=parameter><CODE><A title=GToggleNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GToggleNotify"><SPAN class=type>GToggleNotify</SPAN></A> notify</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes a reference added with <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A>. The reference count of the object is decreased by one.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-remove-toggle-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>a function to call when this reference is the last reference to the object, or is no longer the last reference.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>notify</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-8.html#api-index-2.8">2.8</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-connect></A>
<H3>g_object_connect&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_connect (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_spec</CODE></EM>,
                  <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>A convenience function to connect multiple signals at once.</P>
<P>The signal specs expected by this function have the form "modifier::signal_name", where modifier can be one of the following:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: circle">
<LI class=listitem>
<P>signal: equivalent to g_signal_connect_data (..., NULL, 0)</P></LI></UL></DIV></LI>
<LI class=listitem>
<P>object-signal, object_signal: equivalent to g_signal_connect_object (..., 0)</P></LI>
<LI class=listitem>
<P>swapped-signal, swapped_signal: equivalent to g_signal_connect_data (..., NULL, G_CONNECT_SWAPPED)</P></LI>
<LI class=listitem>
<P>swapped_object_signal, swapped-object-signal: equivalent to g_signal_connect_object (..., G_CONNECT_SWAPPED)</P></LI>
<LI class=listitem>
<P>signal_after, signal-after: equivalent to g_signal_connect_data (..., NULL, G_CONNECT_AFTER)</P></LI>
<LI class=listitem>
<P>object_signal_after, object-signal-after: equivalent to g_signal_connect_object (..., G_CONNECT_AFTER)</P></LI>
<LI class=listitem>
<P>swapped_signal_after, swapped-signal-after: equivalent to g_signal_connect_data (..., NULL, G_CONNECT_SWAPPED | G_CONNECT_AFTER)</P></LI>
<LI class=listitem>
<P>swapped_object_signal_after, swapped-object-signal-after: equivalent to g_signal_connect_object (..., G_CONNECT_SWAPPED | G_CONNECT_AFTER)</P></LI></UL></DIV>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>menu<SPAN class="gtkdoc opt">-&gt;</SPAN>toplevel <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-connect">g_object_connect</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new">g_object_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GTK_TYPE_WINDOW<SPAN class="gtkdoc opt">,</SPAN>
						   <SPAN class=string>"type"</SPAN><SPAN class="gtkdoc opt">,</SPAN> GTK_WINDOW_POPUP<SPAN class="gtkdoc opt">,</SPAN>
						   <SPAN class=string>"child"</SPAN><SPAN class="gtkdoc opt">,</SPAN> menu<SPAN class="gtkdoc opt">,</SPAN>
						   NULL<SPAN class="gtkdoc opt">),</SPAN>
				     <SPAN class=string>"signal::event"</SPAN><SPAN class="gtkdoc opt">,</SPAN> gtk_menu_window_event<SPAN class="gtkdoc opt">,</SPAN> menu<SPAN class="gtkdoc opt">,</SPAN>
				     <SPAN class=string>"signal::size_request"</SPAN><SPAN class="gtkdoc opt">,</SPAN> gtk_menu_window_size_request<SPAN class="gtkdoc opt">,</SPAN> menu<SPAN class="gtkdoc opt">,</SPAN>
				     <SPAN class=string>"signal::destroy"</SPAN><SPAN class="gtkdoc opt">,</SPAN> gtk_widget_destroyed<SPAN class="gtkdoc opt">, &amp;</SPAN>menu<SPAN class="gtkdoc opt">-&gt;</SPAN>toplevel<SPAN class="gtkdoc opt">,</SPAN>
				     NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-connect.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_spec</P></TD>
<TD class=parameter_description>
<P>the spec for the first signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> for the first signal, followed by data for the first signal, followed optionally by more signal spec/callback/data triples, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-connect.returns></A>
<H4>Returns</H4>
<P><EM class=parameter><CODE>object</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>][<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-disconnect></A>
<H3>g_object_disconnect&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_disconnect (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_spec</CODE></EM>,
                     <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>A convenience function to disconnect multiple signals at once.</P>
<P>The signal specs expected by this function have the form "any_signal", which means to disconnect any signal with matching callback and data, or "any_signal::signal_name", which only disconnects the signal named "signal_name".</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-disconnect.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_spec</P></TD>
<TD class=parameter_description>
<P>the spec for the first signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> for the first signal, followed by data for the first signal, followed optionally by more signal spec/callback/data triples, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set></A>
<H3>g_object_set&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Sets properties on an object.</P>
<P>Note that the "notify" signals are queued and only emitted (in reverse order) after all properties have been set. See <A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify"><CODE class=function>g_object_freeze_notify()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>value for the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get></A>
<H3>g_object_get&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_get (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Gets properties of an object.</P>
<P>In general, a copy is made of the property contents and the caller is responsible for freeing the memory in the appropriate manner for the type, for instance by calling <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> or <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A>.</P>
<P>Here is an example of using <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A> to get the contents of three properties: an integer, a string and an object:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>gint intval<SPAN class="gtkdoc opt">;</SPAN>
gchar <SPAN class="gtkdoc opt">*</SPAN>strval<SPAN class="gtkdoc opt">;</SPAN>
GObject <SPAN class="gtkdoc opt">*</SPAN>objval<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get">g_object_get</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>my_object<SPAN class="gtkdoc opt">,</SPAN>
              <SPAN class=string>"int-property"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>intval<SPAN class="gtkdoc opt">,</SPAN>
              <SPAN class=string>"str-property"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>strval<SPAN class="gtkdoc opt">,</SPAN>
              <SPAN class=string>"obj-property"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>objval<SPAN class="gtkdoc opt">,</SPAN>
              NULL<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc slc">// Do something with intval, strval, objval</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>strval<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>objval<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-get.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to get</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>return location for the first property, followed optionally by more name/return location pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-notify></A>
<H3>g_object_notify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_notify (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                 <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>);</PRE>
<P>Emits a "notify" signal for the property <EM class=parameter><CODE>property_name</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> .</P>
<P>When possible, eg. when signaling a property change from within the class that registered the property, you should use <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A> instead.</P>
<P>Note that emission of the notify signal may be blocked with <A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify"><CODE class=function>g_object_freeze_notify()</CODE></A>. In this case, the signal emissions are queued and will be emitted (in reverse order) when <A title=g_object_thaw_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-thaw-notify"><CODE class=function>g_object_thaw_notify()</CODE></A> is called.</P>
<DIV class=refsect3><A name=g-object-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of a property installed on the class of <EM class=parameter><CODE>object</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-notify-by-pspec></A>
<H3>g_object_notify_by_pspec&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_notify_by_pspec (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                          <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Emits a "notify" signal for the property specified by <EM class=parameter><CODE>pspec</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> .</P>
<P>This function omits the property name lookup, hence it is faster than <A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify"><CODE class=function>g_object_notify()</CODE></A>.</P>
<P>One way to avoid using <A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify"><CODE class=function>g_object_notify()</CODE></A> from within the class that registered the properties, and using <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A> instead, is to store the GParamSpec used with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A> inside a static array, e.g.:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">enum</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  PROP_0<SPAN class="gtkdoc opt">,</SPAN>
  PROP_FOO<SPAN class="gtkdoc opt">,</SPAN>
  PROP_LAST
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">static</SPAN> GParamSpec <SPAN class="gtkdoc opt">*</SPAN>properties<SPAN class="gtkdoc opt">[</SPAN>PROP_LAST<SPAN class="gtkdoc opt">];</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_object_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObjectClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">] =</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-int">g_param_spec_int</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"The foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                           <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>100</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                           <SPAN class=number>50</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                           G_PARAM_READWRITE<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property">g_object_class_install_property</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gobject_class<SPAN class="gtkdoc opt">,</SPAN>
                                   PROP_FOO<SPAN class="gtkdoc opt">,</SPAN>
                                   properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">]);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>and then notify a change on the "foo" property with:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec">g_object_notify_by_pspec</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">,</SPAN> properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">]);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-object-notify-by-pspec.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of a property installed on the class of <EM class=parameter><CODE>object</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-freeze-notify></A>
<H3>g_object_freeze_notify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_freeze_notify (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>Increases the freeze count on <EM class=parameter><CODE>object</CODE></EM> . If the freeze count is non-zero, the emission of "notify" signals on <EM class=parameter><CODE>object</CODE></EM> is stopped. The signals are queued until the freeze count is decreased to zero. Duplicate notifications are squashed so that at most one <A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify"><SPAN class=type>&#8220;notify&#8221;</SPAN></A> signal is emitted for each property modified while the object is frozen.</P>
<P>This is necessary for accessors that modify multiple properties to prevent premature notification while the object is still being modified.</P>
<DIV class=refsect3><A name=g-object-freeze-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-thaw-notify></A>
<H3>g_object_thaw_notify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_thaw_notify (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>Reverts the effect of a previous call to <A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify"><CODE class=function>g_object_freeze_notify()</CODE></A>. The freeze count is decreased on <EM class=parameter><CODE>object</CODE></EM> and when it reaches zero, queued "notify" signals are emitted.</P>
<P>Duplicate notifications for each property are squashed so that at most one <A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify"><SPAN class=type>&#8220;notify&#8221;</SPAN></A> signal is emitted for each property, in the reverse order in which they have been queued.</P>
<P>It is an error to call this function when the freeze count is zero.</P>
<DIV class=refsect3><A name=g-object-thaw-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-data></A>
<H3>g_object_get_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_get_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>);</PRE>
<P>Gets a named field from the objects table of associations (see <A title=g_object_set_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data"><CODE class=function>g_object_set_data()</CODE></A>).</P>
<DIV class=refsect3><A name=g-object-get-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key for that association</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-get-data.returns></A>
<H4>Returns</H4>
<P>the data if found, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no such data exists. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-data></A>
<H3>g_object_set_data&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Each object carries around a table of associations from strings to pointers. This function lets you set an association.</P>
<P>If the object already had an association with that name, the old association will be destroyed.</P>
<DIV class=refsect3><A name=g-object-set-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to associate with that key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-data-full></A>
<H3>g_object_set_data_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_data_full (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                        <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>);</PRE>
<P>Like <A title=g_object_set_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data"><CODE class=function>g_object_set_data()</CODE></A> except it adds notification for when the association is destroyed, either by setting it to a different value or when the object is destroyed.</P>
<P>Note that the <EM class=parameter><CODE>destroy</CODE></EM> callback is not called if <EM class=parameter><CODE>data</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-data-full.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to associate with that key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>function to call when the association is destroyed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-steal-data></A>
<H3>g_object_steal_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_steal_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>);</PRE>
<P>Remove a specified datum from the object's data associations, without invoking the association's destroy handler.</P>
<DIV class=refsect3><A name=g-object-steal-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-steal-data.returns></A>
<H4>Returns</H4>
<P>the data if found, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no such data exists. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-dup-data></A>
<H3>g_object_dup_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_dup_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Keyed-Data-Lists.html#GDuplicateFunc"><SPAN class=type>GDuplicateFunc</SPAN></A> dup_func</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>This is a variant of <A title=g_object_get_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-data"><CODE class=function>g_object_get_data()</CODE></A> which returns a 'duplicate' of the value. <EM class=parameter><CODE>dup_func</CODE></EM> defines the meaning of 'duplicate' in this context, it could e.g. take a reference on a ref-counted object.</P>
<P>If the <EM class=parameter><CODE>key</CODE></EM> is not set on the object then <EM class=parameter><CODE>dup_func</CODE></EM> will be called with a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> argument.</P>
<P>Note that <EM class=parameter><CODE>dup_func</CODE></EM> is called while user data of <EM class=parameter><CODE>object</CODE></EM> is locked.</P>
<P>This function can be useful to avoid races when multiple threads are using object data on the same key on the same object.</P>
<DIV class=refsect3><A name=g-object-dup-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a string, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dup_func</P></TD>
<TD class=parameter_description>
<P>function to dup the value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>passed as user_data to <EM class=parameter><CODE>dup_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-dup-data.returns></A>
<H4>Returns</H4>
<P>the result of calling <EM class=parameter><CODE>dup_func</CODE></EM> on the value associated with <EM class=parameter><CODE>key</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if not set. If <EM class=parameter><CODE>dup_func</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the value is returned unmodified.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-replace-data></A>
<H3>g_object_replace_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_object_replace_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> oldval</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> newval</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> *old_destroy</CODE></EM>);</PRE>
<P>Compares the user data for the key <EM class=parameter><CODE>key</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> with <EM class=parameter><CODE>oldval</CODE></EM> , and if they are the same, replaces <EM class=parameter><CODE>oldval</CODE></EM> with <EM class=parameter><CODE>newval</CODE></EM> .</P>
<P>This is like a typical atomic compare-and-exchange operation, for user data on an object.</P>
<P>If the previous value was replaced then ownership of the old value (<EM class=parameter><CODE>oldval</CODE></EM> ) is passed to the caller, including the registered destroy notify for it (passed out in <EM class=parameter><CODE>old_destroy</CODE></EM> ). Its up to the caller to free this as he wishes, which may or may not include using <EM class=parameter><CODE>old_destroy</CODE></EM> as sometimes replacement should not destroy the object in the normal way.</P>
<DIV class=refsect3><A name=g-object-replace-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a string, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>oldval</P></TD>
<TD class=parameter_description>
<P>the old value to compare against. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>newval</P></TD>
<TD class=parameter_description>
<P>the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>a destroy notify for the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>old_destroy</P></TD>
<TD class=parameter_description>
<P>destroy notify for the existing value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-replace-data.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the existing value for <EM class=parameter><CODE>key</CODE></EM> was replaced by <EM class=parameter><CODE>newval</CODE></EM> , <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-qdata></A>
<H3>g_object_get_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_get_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>This function gets back user data pointers stored via <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-get-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to get a stored user data pointer from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-get-qdata.returns></A>
<H4>Returns</H4>
<P>The user data pointer set, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-qdata></A>
<H3>g_object_set_qdata&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>This sets an opaque, named pointer on an object. The name is specified through a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> (retrived e.g. via <A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-quark-from-static-string"><CODE class=function>g_quark_from_static_string()</CODE></A>), and the pointer can be gotten back from the <EM class=parameter><CODE>object</CODE></EM> with <A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata"><CODE class=function>g_object_get_qdata()</CODE></A> until the <EM class=parameter><CODE>object</CODE></EM> is finalized. Setting a previously set user data pointer, overrides (frees) the old pointer set, using <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><SPAN class=type>NULL</SPAN></A> as pointer essentially removes the data stored.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to set store a user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>An opaque user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-qdata-full></A>
<H3>g_object_set_qdata_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_qdata_full (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>);</PRE>
<P>This function works like <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A>, but in addition, a void (*destroy) (gpointer) function may be specified which is called with <EM class=parameter><CODE>data</CODE></EM> as argument when the <EM class=parameter><CODE>object</CODE></EM> is finalized, or the data is being overwritten by a call to <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A> with the same <EM class=parameter><CODE>quark</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-qdata-full.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to set store a user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>An opaque user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>Function to invoke with <EM class=parameter><CODE>data</CODE></EM> as argument, when <EM class=parameter><CODE>data</CODE></EM> needs to be freed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-steal-qdata></A>
<H3>g_object_steal_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_steal_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>This function gets back user data pointers stored via <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A> and removes the <EM class=parameter><CODE>data</CODE></EM> from object without invoking its <CODE class=function>destroy()</CODE> function (if any was set). Usually, calling this function is only required to update user data pointers with a destroy notifier, for example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>object_add_to_user_list</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GObject     <SPAN class="gtkdoc opt">*</SPAN>object<SPAN class="gtkdoc opt">,</SPAN>
                         <SPAN class="gtkdoc kwb">const</SPAN> gchar <SPAN class="gtkdoc opt">*</SPAN>new_string<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc slc">// the quark, naming the object data</SPAN>
  GQuark quark_string_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-quark-from-static-string">g_quark_from_static_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"my-string-list"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc slc">// retrive the old string list</SPAN>
  GList <SPAN class="gtkdoc opt">*</SPAN>list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-qdata">g_object_steal_qdata</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">,</SPAN> quark_string_list<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class="gtkdoc slc">// prepend new string</SPAN>
  list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>new_string<SPAN class="gtkdoc opt">));</SPAN>
  <SPAN class="gtkdoc slc">// this changed 'list', so we need to set it again</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata-full">g_object_set_qdata_full</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">,</SPAN> quark_string_list<SPAN class="gtkdoc opt">,</SPAN> list<SPAN class="gtkdoc opt">,</SPAN> free_string_list<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>free_string_list</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GList <SPAN class="gtkdoc opt">*</SPAN>node<SPAN class="gtkdoc opt">, *</SPAN>list <SPAN class="gtkdoc opt">=</SPAN> data<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=keyword>for</SPAN> <SPAN class="gtkdoc opt">(</SPAN>node <SPAN class="gtkdoc opt">=</SPAN> list<SPAN class="gtkdoc opt">;</SPAN> node<SPAN class="gtkdoc opt">;</SPAN> node <SPAN class="gtkdoc opt">=</SPAN> node<SPAN class="gtkdoc opt">-&gt;</SPAN>next<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>node<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#g-list-free">g_list_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Using <A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata"><CODE class=function>g_object_get_qdata()</CODE></A> in the above example, instead of <A title=g_object_steal_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-qdata"><CODE class=function>g_object_steal_qdata()</CODE></A> would have left the destroy function set, and thus the partial string list would have been freed upon <A title=g_object_set_qdata_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata-full"><CODE class=function>g_object_set_qdata_full()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-steal-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to get a stored user data pointer from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-steal-qdata.returns></A>
<H4>Returns</H4>
<P>The user data pointer set, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-dup-qdata></A>
<H3>g_object_dup_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_dup_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Keyed-Data-Lists.html#GDuplicateFunc"><SPAN class=type>GDuplicateFunc</SPAN></A> dup_func</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>This is a variant of <A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata"><CODE class=function>g_object_get_qdata()</CODE></A> which returns a 'duplicate' of the value. <EM class=parameter><CODE>dup_func</CODE></EM> defines the meaning of 'duplicate' in this context, it could e.g. take a reference on a ref-counted object.</P>
<P>If the <EM class=parameter><CODE>quark</CODE></EM> is not set on the object then <EM class=parameter><CODE>dup_func</CODE></EM> will be called with a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> argument.</P>
<P>Note that <EM class=parameter><CODE>dup_func</CODE></EM> is called while user data of <EM class=parameter><CODE>object</CODE></EM> is locked.</P>
<P>This function can be useful to avoid races when multiple threads are using object data on the same key on the same object.</P>
<DIV class=refsect3><A name=g-object-dup-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dup_func</P></TD>
<TD class=parameter_description>
<P>function to dup the value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>passed as user_data to <EM class=parameter><CODE>dup_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-dup-qdata.returns></A>
<H4>Returns</H4>
<P>the result of calling <EM class=parameter><CODE>dup_func</CODE></EM> on the value associated with <EM class=parameter><CODE>quark</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if not set. If <EM class=parameter><CODE>dup_func</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the value is returned unmodified.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-replace-qdata></A>
<H3>g_object_replace_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_object_replace_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> oldval</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> newval</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> *old_destroy</CODE></EM>);</PRE>
<P>Compares the user data for the key <EM class=parameter><CODE>quark</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> with <EM class=parameter><CODE>oldval</CODE></EM> , and if they are the same, replaces <EM class=parameter><CODE>oldval</CODE></EM> with <EM class=parameter><CODE>newval</CODE></EM> .</P>
<P>This is like a typical atomic compare-and-exchange operation, for user data on an object.</P>
<P>If the previous value was replaced then ownership of the old value (<EM class=parameter><CODE>oldval</CODE></EM> ) is passed to the caller, including the registered destroy notify for it (passed out in <EM class=parameter><CODE>old_destroy</CODE></EM> ). Its up to the caller to free this as he wishes, which may or may not include using <EM class=parameter><CODE>old_destroy</CODE></EM> as sometimes replacement should not destroy the object in the normal way.</P>
<DIV class=refsect3><A name=g-object-replace-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>oldval</P></TD>
<TD class=parameter_description>
<P>the old value to compare against. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>newval</P></TD>
<TD class=parameter_description>
<P>the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>a destroy notify for the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>old_destroy</P></TD>
<TD class=parameter_description>
<P>destroy notify for the existing value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-replace-qdata.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the existing value for <EM class=parameter><CODE>quark</CODE></EM> was replaced by <EM class=parameter><CODE>newval</CODE></EM> , <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-property></A>
<H3>g_object_set_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_property (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>,
                       <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Sets a property on an object.</P>
<DIV class=refsect3><A name=g-object-set-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of the property to set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-property></A>
<H3>g_object_get_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_get_property (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>,
                       <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Gets a property of an object. <EM class=parameter><CODE>value</CODE></EM> must have been initialized to the expected type of the property (or a type to which the expected type can be transformed) using <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A>.</P>
<P>In general, a copy is made of the property contents and the caller is responsible for freeing the memory by calling <A title=g_value_unset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-unset"><CODE class=function>g_value_unset()</CODE></A>.</P>
<P>Note that <A title=g_object_get_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-property"><CODE class=function>g_object_get_property()</CODE></A> is really intended for language bindings, <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A> is much more convenient for C programming.</P>
<DIV class=refsect3><A name=g-object-get-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of the property to get</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>return location for the property value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-new-valist></A>
<H3>g_object_new_valist&nbsp;()</H3><PRE class=programlisting><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;*
g_object_new_valist (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Creates a new instance of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype and sets its properties.</P>
<P>Construction parameters (see <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT</SPAN></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT-ONLY:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT_ONLY</SPAN></A>) which are not explicitly specified are set to their default values.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-new-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P>the type id of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype to instantiate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>the name of the first property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>the value of the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-new-valist.returns></A>
<H4>Returns</H4>
<P>a new instance of <EM class=parameter><CODE>object_type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-valist></A>
<H3>g_object_set_valist&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_valist (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Sets properties on an object.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>value for the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-valist></A>
<H3>g_object_get_valist&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_get_valist (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Gets properties of an object.</P>
<P>In general, a copy is made of the property contents and the caller is responsible for freeing the memory in the appropriate manner for the type, for instance by calling <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> or <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A>.</P>
<P>See <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-get-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to get</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>return location for the first property, followed optionally by more name/return location pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-watch-closure></A>
<H3>g_object_watch_closure&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_watch_closure (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                        <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>This function essentially limits the life time of the <EM class=parameter><CODE>closure</CODE></EM> to the life time of the object. That is, when the object is finalized, the <EM class=parameter><CODE>closure</CODE></EM> is invalidated by calling <A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate"><CODE class=function>g_closure_invalidate()</CODE></A> on it, in order to prevent invocations of the closure with a finalized (nonexisting) object. Also, <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> and <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> are added as marshal guards to the <EM class=parameter><CODE>closure</CODE></EM> , to ensure that an extra reference count is held on <EM class=parameter><CODE>object</CODE></EM> during invocation of the <EM class=parameter><CODE>closure</CODE></EM> . Usually, this function will be called on closures that use this <EM class=parameter><CODE>object</CODE></EM> as closure data.</P>
<DIV class=refsect3><A name=g-object-watch-closure.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>GObject restricting lifetime of <EM class=parameter><CODE>closure</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>GClosure to watch</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-run-dispose></A>
<H3>g_object_run_dispose&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_run_dispose (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>Releases all references to other objects. This can be used to break reference cycles.</P>
<P>This function should only be called from object system implementations.</P>
<DIV class=refsect3><A name=g-object-run-dispose.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-WARN-INVALID-PROPERTY-ID:CAPS></A>
<H3>G_OBJECT_WARN_INVALID_PROPERTY_ID()</H3><PRE class=programlisting>#define             G_OBJECT_WARN_INVALID_PROPERTY_ID(object, property_id, pspec)</PRE>
<P>This macro should be used to emit a standard warning about unexpected properties in <CODE class=function>set_property()</CODE> and <CODE class=function>get_property()</CODE> implementations.</P>
<DIV class=refsect3><A name=G-OBJECT-WARN-INVALID-PROPERTY-ID.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> on which <CODE class=function>set_property()</CODE> or <CODE class=function>get_property()</CODE> was called</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the numeric id of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-init></A>
<H3>g_weak_ref_init&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_weak_ref_init (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>,
                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Initialise a non-statically-allocated <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A>.</P>
<P>This function also calls <A title=g_weak_ref_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-set"><CODE class=function>g_weak_ref_set()</CODE></A> with <EM class=parameter><CODE>object</CODE></EM> on the freshly-initialised weak reference.</P>
<P>This function should always be matched with a call to <A title=g_weak_ref_clear&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-clear"><CODE class=function>g_weak_ref_clear()</CODE></A>. It is not necessary to use this function for a <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> in static storage because it will already be properly initialised. Just use <A title=g_weak_ref_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-set"><CODE class=function>g_weak_ref_set()</CODE></A> directly.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-init.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>uninitialized or empty location for a weak reference. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-clear></A>
<H3>g_weak_ref_clear&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_weak_ref_clear (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>);</PRE>
<P>Frees resources associated with a non-statically-allocated <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A>. After this call, the <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> is left in an undefined state.</P>
<P>You should only call this on a <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> that previously had <A title=g_weak_ref_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-init"><CODE class=function>g_weak_ref_init()</CODE></A> called on it.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-clear.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>location of a weak reference, which may be empty. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-get></A>
<H3>g_weak_ref_get&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_weak_ref_get (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>);</PRE>
<P>If <EM class=parameter><CODE>weak_ref</CODE></EM> is not empty, atomically acquire a strong reference to the object it points to, and return that reference.</P>
<P>This function is needed because of the potential race between taking the pointer value and <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> on it, if the object was losing its last reference at the same time in a different thread.</P>
<P>The caller should release the resulting reference in the usual way, by using <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-get.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>location of a weak reference to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-weak-ref-get.returns></A>
<H4>Returns</H4>
<P>the object pointed to by <EM class=parameter><CODE>weak_ref</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if it was empty. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>][<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-set></A>
<H3>g_weak_ref_set&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_weak_ref_set (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>,
                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Change the object to which <EM class=parameter><CODE>weak_ref</CODE></EM> points, or set it to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>You must own a strong reference on <EM class=parameter><CODE>object</CODE></EM> while calling this function.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-set.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>location for a weak reference</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GObject-struct></A>
<H3>struct GObject</H3><PRE class=programlisting>struct GObject;</PRE>
<P>All the fields in the GObject structure are private to the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> implementation and should never be accessed directly.</P></DIV>
<HR>

<DIV class=refsect2><A name=GObjectClass></A>
<H3>struct GObjectClass</H3><PRE class=programlisting>struct GObjectClass {
  GTypeClass   g_type_class;

  /* seldom overidden */
  GObject*   (*constructor)     (GType                  type,
                                 guint                  n_construct_properties,
                                 GObjectConstructParam *construct_properties);
  /* overridable methods */
  void       (*set_property)		(GObject        *object,
                                         guint           property_id,
                                         const GValue   *value,
                                         GParamSpec     *pspec);
  void       (*get_property)		(GObject        *object,
                                         guint           property_id,
                                         GValue         *value,
                                         GParamSpec     *pspec);
  void       (*dispose)			(GObject        *object);
  void       (*finalize)		(GObject        *object);
  /* seldom overidden */
  void       (*dispatch_properties_changed) (GObject      *object,
					     guint	   n_pspecs,
					     GParamSpec  **pspecs);
  /* signals */
  void	     (*notify)			(GObject&nbsp;*object,
					 GParamSpec&nbsp;*pspec);

  /* called when done constructing */
  void	     (*constructed)		(GObject&nbsp;*object);
};
</PRE>
<P>The class structure for the GObject type.</P>
<P>&lt;example&gt; &lt;title&gt;Implementing singletons using a constructor&lt;/title&gt; &lt;programlisting&gt; static MySingleton *the_singleton = NULL;</P>
<P>static GObject* my_singleton_constructor (GType type, guint n_construct_params, GObjectConstructParam *construct_params) { GObject *object;</P>
<P>if (!the_singleton) { object = G_OBJECT_CLASS (parent_class)-&gt;constructor (type, n_construct_params, construct_params); the_singleton = MY_SINGLETON (object); } else object = g_object_ref (G_OBJECT (the_singleton));</P>
<P>return object; } &lt;/programlisting&gt;&lt;/example&gt;</P>
<DIV class=refsect3><A name=GObjectClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GObjectClass.g-type-class></A>g_type_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parent class</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.constructor></A>constructor</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the <EM class=parameter><CODE>constructor</CODE></EM> function is called by <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> to complete the object initialization after all the construction properties are set. The first thing a <EM class=parameter><CODE>constructor</CODE></EM> implementation must do is chain up to the <EM class=parameter><CODE>constructor</CODE></EM> of the parent class. Overriding <EM class=parameter><CODE>constructor</CODE></EM> should be rarely needed, e.g. to handle construct properties, or to implement singletons.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.set-property></A>set_property</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the generic setter for all properties of this type. Should be overridden for every type with properties. If implementations of <EM class=parameter><CODE>set_property</CODE></EM> don't emit property change notification explicitly, this will be done implicitly by the type system. However, if the notify signal is emitted explicitly, the type system will not emit it a second time.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.get-property></A>get_property</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the generic getter for all properties of this type. Should be overridden for every type with properties.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.dispose></A>dispose</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the <EM class=parameter><CODE>dispose</CODE></EM> function is supposed to drop all references to other objects, but keep the instance otherwise intact, so that client method invocations still work. It may be run multiple times (due to reference loops). Before returning, <EM class=parameter><CODE>dispose</CODE></EM> should chain up to the <EM class=parameter><CODE>dispose</CODE></EM> method of the parent class.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.finalize></A>finalize</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>instance finalization function, should finish the finalization of the instance begun in <EM class=parameter><CODE>dispose</CODE></EM> and chain up to the <EM class=parameter><CODE>finalize</CODE></EM> method of the parent class.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.dispatch-properties-changed></A>dispatch_properties_changed</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>emits property change notification for a bunch of properties. Overriding <EM class=parameter><CODE>dispatch_properties_changed</CODE></EM> should be rarely needed.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.notify></A>notify</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the class closure for the notify signal</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.constructed></A>constructed</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the <EM class=parameter><CODE>constructed</CODE></EM> function is called by <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> as the final step of the object creation process. At the point of the call, all construction properties have been set on the object. The purpose of this call is to allow for object initialisation steps that can only be performed after construction properties have been set. <EM class=parameter><CODE>constructed</CODE></EM> implementors should chain up to the <EM class=parameter><CODE>constructed</CODE></EM> call of their parent class to allow it to complete its initialisation.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GObjectConstructParam></A>
<H3>struct GObjectConstructParam</H3><PRE class=programlisting>struct GObjectConstructParam {
  GParamSpec *pspec;
  GValue     *value;
};
</PRE>
<P>The GObjectConstructParam struct is an auxiliary structure used to hand <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>/<A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> pairs to the <EM class=parameter><CODE>constructor</CODE></EM> of a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectConstructParam.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GObjectConstructParam.pspec></A>pspec</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of the construct parameter</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GObjectConstructParam.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the value to set the parameter to</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GParameter></A>
<H3>struct GParameter</H3><PRE class=programlisting>struct GParameter {
  const gchar *name;
  GValue       value;
};
</PRE>
<P>The GParameter struct is an auxiliary structure used to hand parameter name/value pairs to <A title=g_object_newv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-newv"><CODE class=function>g_object_newv()</CODE></A>.</P>
<DIV class=refsect3><A name=GParameter.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParameter.name></A>name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parameter name</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParameter.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parameter value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GInitiallyUnowned></A>
<H3>GInitiallyUnowned</H3><PRE class=programlisting>typedef struct _GObject                  GInitiallyUnowned;
</PRE>
<P>All the fields in the GInitiallyUnowned structure are private to the <A title=GInitiallyUnowned class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned"><SPAN class=type>GInitiallyUnowned</SPAN></A> implementation and should never be accessed directly.</P></DIV>
<HR>

<DIV class=refsect2><A name=GInitiallyUnownedClass></A>
<H3>GInitiallyUnownedClass</H3><PRE class=programlisting>typedef struct _GObjectClass             GInitiallyUnownedClass;
</PRE>
<P>The class structure for the GInitiallyUnowned type.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INITIALLY-UNOWNED:CAPS></A>
<H3>G_TYPE_INITIALLY_UNOWNED</H3><PRE class=programlisting>#define G_TYPE_INITIALLY_UNOWNED	      (g_initially_unowned_get_type())
</PRE>
<P>The type for <A title=GInitiallyUnowned class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned"><SPAN class=type>GInitiallyUnowned</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GWeakRef></A>
<H3>GWeakRef</H3><PRE class=programlisting>typedef struct {
} GWeakRef;
</PRE>
<P>A structure containing a weak reference to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. It can either be empty (i.e. point to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), or point to an object for as long as at least one "strong" reference to that object exists. Before the object's <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass.dispose"><SPAN class=type>GObjectClass.dispose</SPAN></A> method is called, every <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> associated with becomes empty (i.e. points to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>).</P>
<P>Like <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> can be statically allocated, stack- or heap-allocated, or embedded in larger structures.</P>
<P>Unlike <A title=g_object_weak_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-ref"><CODE class=function>g_object_weak_ref()</CODE></A> and <A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer"><CODE class=function>g_object_add_weak_pointer()</CODE></A>, this weak reference is thread-safe: converting a weak pointer to a reference is atomic with respect to invalidation of weak pointers to destroyed objects.</P>
<P>If the object's <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass.dispose"><SPAN class=type>GObjectClass.dispose</SPAN></A> method results in additional references to the object being held, any <A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRefs</SPAN></A> taken before it was disposed will continue to point to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If <A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRefs</SPAN></A> are taken after the object is disposed and re-referenced, they will continue to point to it until its refcount goes back to zero, at which point they too will be invalidated.</P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.signal-details></A>
<H2>Signal Details</H2>
<DIV class=refsect2><A name=GObject-notify></A>
<H3>The <CODE class=literal>&#8220;notify&#8221;</CODE> signal</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
user_function (<A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>    *gobject,
               <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec,
               <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>    user_data)</PRE>
<P>The notify signal is emitted on an object when one of its properties has been changed. Note that getting this signal doesn't guarantee that the value of the property has actually changed, it may also be emitted when the setter for the property is called to reinstate the previous value.</P>
<P>This signal is typically used to obtain change notification for a single property, by specifying the property name as a detail in the <A title=g_signal_connect() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect"><CODE class=function>g_signal_connect()</CODE></A> call, like this:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect">g_signal_connect</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>text_view<SPAN class="gtkdoc opt">-&gt;</SPAN>buffer<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"notify::paste-target-list"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CALLBACK:CAPS">G_CALLBACK</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gtk_text_view_target_list_notify<SPAN class="gtkdoc opt">),</SPAN>
                  text_view<SPAN class="gtkdoc opt">)</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>It is important to note that you must use canonical parameter names as detail strings for the notify signal.</P>
<DIV class=refsect3><A name=GObject-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>gobject</P></TD>
<TD class=parameter_description>
<P>the object which received the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of the property which changed.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data set when the signal handler was connected.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P>Flags: <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-NO-HOOKS:CAPS">No Hooks</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.see-also></A>
<H2>See Also</H2>
<P><A title="struct GParamSpecObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecObject"><SPAN class=type>GParamSpecObject</SPAN></A>, <A title=g_param_spec_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-object"><CODE class=function>g_param_spec_object()</CODE></A></P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28675">Topic #28675: Enumeration and Flag Types.. Enumeration and Flag Types &#38323;?Enumeration and flags types.. .. Functions.. #defineG_ENUM_CLASS_TYPE() .. #defineG_ENUM_CLASS_TYPE_NAME() .. ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Enumeration and Flag Types</SPAN></H2>
<P>Enumeration and Flag Types &#8212; Enumeration and flags types</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_ENUM_CLASS_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-ENUM-CLASS-TYPE:CAPS">G_ENUM_CLASS_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_ENUM_CLASS_TYPE_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-ENUM-CLASS-TYPE-NAME:CAPS">G_ENUM_CLASS_TYPE_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_ENUM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-TYPE-IS-ENUM:CAPS">G_TYPE_IS_ENUM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_ENUM_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-ENUM-CLASS:CAPS">G_ENUM_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_ENUM_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-IS-ENUM-CLASS:CAPS">G_IS_ENUM_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_FLAGS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-TYPE-IS-FLAGS:CAPS">G_TYPE_IS_FLAGS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_FLAGS_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-FLAGS-CLASS:CAPS">G_FLAGS_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_FLAGS_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-IS-FLAGS-CLASS:CAPS">G_IS_FLAGS_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_FLAGS_CLASS_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-FLAGS-CLASS-TYPE:CAPS">G_FLAGS_CLASS_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_FLAGS_CLASS_TYPE_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#G-FLAGS-CLASS-TYPE-NAME:CAPS">G_FLAGS_CLASS_TYPE_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=returnvalue>GEnumValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_enum_get_value&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value">g_enum_get_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=returnvalue>GEnumValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_enum_get_value_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value-by-name">g_enum_get_value_by_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=returnvalue>GEnumValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_enum_get_value_by_nick&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value-by-nick">g_enum_get_value_by_nick</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=returnvalue>GFlagsValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_flags_get_first_value&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-get-first-value">g_flags_get_first_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=returnvalue>GFlagsValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_flags_get_value_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-get-value-by-name">g_flags_get_value_by_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=returnvalue>GFlagsValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_flags_get_value_by_nick&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-get-value-by-nick">g_flags_get_value_by_nick</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_enum_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-register-static">g_enum_register_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_flags_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-register-static">g_flags_register_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_enum_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-complete-type-info">g_enum_complete_type_info</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_flags_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-complete-type-info">g_flags_complete_type_info</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass">GEnumClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass">GFlagsClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue">GEnumValue</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue">GFlagsValue</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.description></A>
<H2>Description</H2>
<P>The GLib type system provides fundamental types for enumeration and flags types. (Flags types are like enumerations, but allow their values to be combined by bitwise or). A registered enumeration or flags type associates a name and a nickname with each allowed value, and the methods <A title=g_enum_get_value_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value-by-name"><CODE class=function>g_enum_get_value_by_name()</CODE></A>, <A title=g_enum_get_value_by_nick&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value-by-nick"><CODE class=function>g_enum_get_value_by_nick()</CODE></A>, <A title=g_flags_get_value_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-get-value-by-name"><CODE class=function>g_flags_get_value_by_name()</CODE></A> and <A title=g_flags_get_value_by_nick&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-get-value-by-nick"><CODE class=function>g_flags_get_value_by_nick()</CODE></A> can look up values by their name or nickname. When an enumeration or flags type is registered with the GLib type system, it can be used as value type for object properties, using <A title=g_param_spec_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-enum"><CODE class=function>g_param_spec_enum()</CODE></A> or <A title=g_param_spec_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-flags"><CODE class=function>g_param_spec_flags()</CODE></A>.</P>
<P>GObject ships with a utility called glib-mkenums, that can construct suitable type registration functions from C enumeration definitions.</P>
<P>Example of how to get a string representation of an enum value:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>GEnumClass <SPAN class="gtkdoc opt">*</SPAN>enum_class<SPAN class="gtkdoc opt">;</SPAN>
GEnumValue <SPAN class="gtkdoc opt">*</SPAN>enum_value<SPAN class="gtkdoc opt">;</SPAN>

enum_class <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-ref">g_type_class_ref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>MAMAN_TYPE_MY_ENUM<SPAN class="gtkdoc opt">);</SPAN>
enum_value <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-get-value">g_enum_get_value</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>enum_class<SPAN class="gtkdoc opt">,</SPAN> MAMAN_MY_ENUM_FOO<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-print">g_print</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Name: %s</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> enum_value<SPAN class="gtkdoc opt">-&gt;</SPAN>value_name<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-class-unref">g_type_class_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>enum_class<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-ENUM-CLASS-TYPE:CAPS></A>
<H3>G_ENUM_CLASS_TYPE()</H3><PRE class=programlisting>#define G_ENUM_CLASS_TYPE(class)       (G_TYPE_FROM_CLASS (class))
</PRE>
<P>Get the type identifier from a given <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-ENUM-CLASS-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-ENUM-CLASS-TYPE.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-ENUM-CLASS-TYPE-NAME:CAPS></A>
<H3>G_ENUM_CLASS_TYPE_NAME()</H3><PRE class=programlisting>#define G_ENUM_CLASS_TYPE_NAME(class)  (g_type_name (G_ENUM_CLASS_TYPE (class)))
</PRE>
<P>Get the static type name from a given <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-ENUM-CLASS-TYPE-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-ENUM-CLASS-TYPE-NAME.returns></A>
<H4>Returns</H4>
<P>the type name.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-ENUM:CAPS></A>
<H3>G_TYPE_IS_ENUM()</H3><PRE class=programlisting>#define G_TYPE_IS_ENUM(type)	       (G_TYPE_FUNDAMENTAL (type) == G_TYPE_ENUM)
</PRE>
<P>Checks whether <EM class=parameter><CODE>type</CODE></EM> "is a" <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A>.</P>
<DIV class=refsect3><A name=G-TYPE-IS-ENUM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> ID.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-ENUM.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>type</CODE></EM> "is a" <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A>.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-ENUM-CLASS:CAPS></A>
<H3>G_ENUM_CLASS()</H3><PRE class=programlisting>#define G_ENUM_CLASS(class)	       (G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_ENUM, GEnumClass))
</PRE>
<P>Casts a derived <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> structure into a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-ENUM-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-ENUM-CLASS:CAPS></A>
<H3>G_IS_ENUM_CLASS()</H3><PRE class=programlisting>#define G_IS_ENUM_CLASS(class)	       (G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_ENUM))
</PRE>
<P>Checks whether <EM class=parameter><CODE>class</CODE></EM> "is a" valid <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> structure of type <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A> or derived.</P>
<DIV class=refsect3><A name=G-IS-ENUM-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-FLAGS:CAPS></A>
<H3>G_TYPE_IS_FLAGS()</H3><PRE class=programlisting>#define G_TYPE_IS_FLAGS(type)	       (G_TYPE_FUNDAMENTAL (type) == G_TYPE_FLAGS)
</PRE>
<P>Checks whether <EM class=parameter><CODE>type</CODE></EM> "is a" <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A>.</P>
<DIV class=refsect3><A name=G-TYPE-IS-FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> ID.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-FLAGS.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>type</CODE></EM> "is a" <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A>.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-FLAGS-CLASS:CAPS></A>
<H3>G_FLAGS_CLASS()</H3><PRE class=programlisting>#define G_FLAGS_CLASS(class)	       (G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_FLAGS, GFlagsClass))
</PRE>
<P>Casts a derived <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> structure into a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-FLAGS-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-FLAGS-CLASS:CAPS></A>
<H3>G_IS_FLAGS_CLASS()</H3><PRE class=programlisting>#define G_IS_FLAGS_CLASS(class)        (G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_FLAGS))
</PRE>
<P>Checks whether <EM class=parameter><CODE>class</CODE></EM> "is a" valid <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> structure of type <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A> or derived.</P>
<DIV class=refsect3><A name=G-IS-FLAGS-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-FLAGS-CLASS-TYPE:CAPS></A>
<H3>G_FLAGS_CLASS_TYPE()</H3><PRE class=programlisting>#define G_FLAGS_CLASS_TYPE(class)      (G_TYPE_FROM_CLASS (class))
</PRE>
<P>Get the type identifier from a given <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-FLAGS-CLASS-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-FLAGS-CLASS-TYPE.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-FLAGS-CLASS-TYPE-NAME:CAPS></A>
<H3>G_FLAGS_CLASS_TYPE_NAME()</H3><PRE class=programlisting>#define G_FLAGS_CLASS_TYPE_NAME(class) (g_type_name (G_FLAGS_CLASS_TYPE (class)))
</PRE>
<P>Get the static type name from a given <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-FLAGS-CLASS-TYPE-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-FLAGS-CLASS-TYPE-NAME.returns></A>
<H4>Returns</H4>
<P>the type name.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-enum-get-value></A>
<H3>g_enum_get_value&nbsp;()</H3><PRE class=programlisting><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=returnvalue>GEnumValue</SPAN></A>&nbsp;*
g_enum_get_value (<EM class=parameter><CODE><A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> *enum_class</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> value</CODE></EM>);</PRE>
<P>Returns the <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> for a value.</P>
<DIV class=refsect3><A name=g-enum-get-value.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>enum_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-enum-get-value.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> for <EM class=parameter><CODE>value</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if <EM class=parameter><CODE>value</CODE></EM> is not a member of the enumeration. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-enum-get-value-by-name></A>
<H3>g_enum_get_value_by_name&nbsp;()</H3><PRE class=programlisting><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=returnvalue>GEnumValue</SPAN></A>&nbsp;*
g_enum_get_value_by_name (<EM class=parameter><CODE><A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> *enum_class</CODE></EM>,
                          <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Looks up a <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> by name.</P>
<DIV class=refsect3><A name=g-enum-get-value-by-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>enum_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the name to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-enum-get-value-by-name.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> with name <EM class=parameter><CODE>name</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the enumeration doesn't have a member with that name. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-enum-get-value-by-nick></A>
<H3>g_enum_get_value_by_nick&nbsp;()</H3><PRE class=programlisting><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=returnvalue>GEnumValue</SPAN></A>&nbsp;*
g_enum_get_value_by_nick (<EM class=parameter><CODE><A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> *enum_class</CODE></EM>,
                          <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>);</PRE>
<P>Looks up a <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> by nickname.</P>
<DIV class=refsect3><A name=g-enum-get-value-by-nick.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>enum_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>the nickname to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-enum-get-value-by-nick.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> with nickname <EM class=parameter><CODE>nick</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the enumeration doesn't have a member with that nickname. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-flags-get-first-value></A>
<H3>g_flags_get_first_value&nbsp;()</H3><PRE class=programlisting><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=returnvalue>GFlagsValue</SPAN></A>&nbsp;*
g_flags_get_first_value (<EM class=parameter><CODE><A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> *flags_class</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> value</CODE></EM>);</PRE>
<P>Returns the first <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> which is set in <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=g-flags-get-first-value.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>flags_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-flags-get-first-value.returns></A>
<H4>Returns</H4>
<P>the first <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> which is set in <EM class=parameter><CODE>value</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if none is set. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-flags-get-value-by-name></A>
<H3>g_flags_get_value_by_name&nbsp;()</H3><PRE class=programlisting><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=returnvalue>GFlagsValue</SPAN></A>&nbsp;*
g_flags_get_value_by_name (<EM class=parameter><CODE><A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> *flags_class</CODE></EM>,
                           <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Looks up a <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> by name.</P>
<DIV class=refsect3><A name=g-flags-get-value-by-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>flags_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the name to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-flags-get-value-by-name.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> with name <EM class=parameter><CODE>name</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if there is no flag with that name. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-flags-get-value-by-nick></A>
<H3>g_flags_get_value_by_nick&nbsp;()</H3><PRE class=programlisting><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=returnvalue>GFlagsValue</SPAN></A>&nbsp;*
g_flags_get_value_by_nick (<EM class=parameter><CODE><A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> *flags_class</CODE></EM>,
                           <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>);</PRE>
<P>Looks up a <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> by nickname.</P>
<DIV class=refsect3><A name=g-flags-get-value-by-nick.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>flags_class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>the nickname to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-flags-get-value-by-nick.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> with nickname <EM class=parameter><CODE>nick</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if there is no flag with that nickname. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-enum-register-static></A>
<H3>g_enum_register_static&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_enum_register_static (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                        <EM class=parameter><CODE>const <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> *const_static_values</CODE></EM>);</PRE>
<P>Registers a new static enumeration type with the name <EM class=parameter><CODE>name</CODE></EM> .</P>
<P>It is normally more convenient to let glib-mkenums, generate a <CODE class=function>my_enum_get_type()</CODE> function from a usual C enumeration definition than to write one yourself using <A title=g_enum_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-register-static"><CODE class=function>g_enum_register_static()</CODE></A>.</P>
<DIV class=refsect3><A name=g-enum-register-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>A nul-terminated string used as the name of the new type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>const_static_values</P></TD>
<TD class=parameter_description>
<P>An array of <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> structs for the possible enumeration values. The array is terminated by a struct with all members being 0. GObject keeps a reference to the data, so it cannot be stack-allocated.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-enum-register-static.returns></A>
<H4>Returns</H4>
<P>The new type identifier.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-flags-register-static></A>
<H3>g_flags_register_static&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_flags_register_static (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                         <EM class=parameter><CODE>const <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> *const_static_values</CODE></EM>);</PRE>
<P>Registers a new static flags type with the name <EM class=parameter><CODE>name</CODE></EM> .</P>
<P>It is normally more convenient to let glib-mkenums generate a <CODE class=function>my_flags_get_type()</CODE> function from a usual C enumeration definition than to write one yourself using <A title=g_flags_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-flags-register-static"><CODE class=function>g_flags_register_static()</CODE></A>.</P>
<DIV class=refsect3><A name=g-flags-register-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>A nul-terminated string used as the name of the new type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>const_static_values</P></TD>
<TD class=parameter_description>
<P>An array of <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> structs for the possible flags values. The array is terminated by a struct with all members being 0. GObject keeps a reference to the data, so it cannot be stack-allocated.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-flags-register-static.returns></A>
<H4>Returns</H4>
<P>The new type identifier.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-enum-complete-type-info></A>
<H3>g_enum_complete_type_info&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_enum_complete_type_info (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_enum_type</CODE></EM>,
                           <EM class=parameter><CODE><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *info</CODE></EM>,
                           <EM class=parameter><CODE>const <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> *const_values</CODE></EM>);</PRE>
<P>This function is meant to be called from the <CODE class=literal>complete_type_info</CODE> function of a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> implementation, as in the following example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_enum_complete_type_info</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GTypePlugin     <SPAN class="gtkdoc opt">*</SPAN>plugin<SPAN class="gtkdoc opt">,</SPAN>
                            GType            g_type<SPAN class="gtkdoc opt">,</SPAN>
                            GTypeInfo       <SPAN class="gtkdoc opt">*</SPAN>info<SPAN class="gtkdoc opt">,</SPAN>
                            GTypeValueTable <SPAN class="gtkdoc opt">*</SPAN>value_table<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc kwb">static const</SPAN> GEnumValue values<SPAN class="gtkdoc opt">[] = {</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN> MY_ENUM_FOO<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"MY_ENUM_FOO"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"foo"</SPAN> <SPAN class="gtkdoc opt">},</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN> MY_ENUM_BAR<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"MY_ENUM_BAR"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"bar"</SPAN> <SPAN class="gtkdoc opt">},</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN> NULL <SPAN class="gtkdoc opt">}</SPAN>
  <SPAN class="gtkdoc opt">};</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-complete-type-info">g_enum_complete_type_info</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>type<SPAN class="gtkdoc opt">,</SPAN> info<SPAN class="gtkdoc opt">,</SPAN> values<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-enum-complete-type-info.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_enum_type</P></TD>
<TD class=parameter_description>
<P>the type identifier of the type being completed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> struct to be filled in. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Out parameter, where caller must allocate storage."><SPAN class=acronym>out callee-allocates</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>const_values</P></TD>
<TD class=parameter_description>
<P>An array of <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> structs for the possible enumeration values. The array is terminated by a struct with all members being 0.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-flags-complete-type-info></A>
<H3>g_flags_complete_type_info&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_flags_complete_type_info (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_flags_type</CODE></EM>,
                            <EM class=parameter><CODE><A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> *info</CODE></EM>,
                            <EM class=parameter><CODE>const <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> *const_values</CODE></EM>);</PRE>
<P>This function is meant to be called from the <CODE class=function>complete_type_info()</CODE> function of a <A title=GTypePlugin class=link href="https://developer.gnome.org/gobject/stable/GTypePlugin.html"><SPAN class=type>GTypePlugin</SPAN></A> implementation, see the example for <A title=g_enum_complete_type_info&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#g-enum-complete-type-info"><CODE class=function>g_enum_complete_type_info()</CODE></A> above.</P>
<DIV class=refsect3><A name=g-flags-complete-type-info.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_flags_type</P></TD>
<TD class=parameter_description>
<P>the type identifier of the type being completed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>info</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> struct to be filled in. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Out parameter, where caller must allocate storage."><SPAN class=acronym>out callee-allocates</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>const_values</P></TD>
<TD class=parameter_description>
<P>An array of <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> structs for the possible enumeration values. The array is terminated by a struct with all members being 0.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GEnumClass></A>
<H3>struct GEnumClass</H3><PRE class=programlisting>struct GEnumClass {
  GTypeClass  g_type_class;

  gint	      minimum;
  gint	      maximum;
  guint	      n_values;
  GEnumValue *values;
};
</PRE>
<P>The class of an enumeration type holds information about its possible values.</P>
<DIV class=refsect3><A name=GEnumClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GEnumClass.g-type-class></A>g_type_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parent class</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GEnumClass.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the smallest possible value.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GEnumClass.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the largest possible value.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GEnumClass.n-values></A>n_values</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the number of possible values.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GEnumClass.values></A>values</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>an array of <A title="struct GEnumValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumValue"><SPAN class=type>GEnumValue</SPAN></A> structs describing the individual values.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GFlagsClass></A>
<H3>struct GFlagsClass</H3><PRE class=programlisting>struct GFlagsClass {
  GTypeClass   g_type_class;
  
  guint	       mask;
  guint	       n_values;
  GFlagsValue *values;
};
</PRE>
<P>The class of a flags type holds information about its possible values.</P>
<DIV class=refsect3><A name=GFlagsClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GFlagsClass.g-type-class></A>g_type_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parent class</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GFlagsClass.mask></A>mask</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a mask covering all possible values.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GFlagsClass.n-values></A>n_values</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the number of possible values.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GFlagsClass.values></A>values</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>an array of <A title="struct GFlagsValue" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsValue"><SPAN class=type>GFlagsValue</SPAN></A> structs describing the individual values.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GEnumValue></A>
<H3>struct GEnumValue</H3><PRE class=programlisting>struct GEnumValue {
  gint	 value;
  const gchar *value_name;
  const gchar *value_nick;
};
</PRE>
<P>A structure which contains a single enum value, its name, and its nickname.</P>
<DIV class=refsect3><A name=GEnumValue.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GEnumValue.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the enum value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GEnumValue.value-name></A>value_name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the name of the value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GEnumValue.value-nick></A>value_nick</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the nickname of the value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GFlagsValue></A>
<H3>struct GFlagsValue</H3><PRE class=programlisting>struct GFlagsValue {
  guint	 value;
  const gchar *value_name;
  const gchar *value_nick;
};
</PRE>
<P>A structure which contains a single flags value, its name, and its nickname.</P>
<DIV class=refsect3><A name=GFlagsValue.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GFlagsValue.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the flags value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GFlagsValue.value-name></A>value_name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the name of the value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GFlagsValue.value-nick></A>value_nick</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the nickname of the value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Enumeration-and-Flag-Types.see-also></A>
<H2>See Also</H2>
<P><A title="struct GParamSpecEnum" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecEnum"><SPAN class=type>GParamSpecEnum</SPAN></A>, <A title="struct GParamSpecFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFlags"><SPAN class=type>GParamSpecFlags</SPAN></A>, <A title=g_param_spec_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-enum"><CODE class=function>g_param_spec_enum()</CODE></A>, <A title=g_param_spec_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-flags"><CODE class=function>g_param_spec_flags()</CODE></A></P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28676">Topic #28676: Boxed Types.. Boxed Types &#38323;?A mechanism to wrap opaque C structures registered by the type system.. .. Functions.. gpointer (*GBoxedCopyFunc) () .. void (*GBoxedFreeFunc) () ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Boxed Types</SPAN></H2>
<P>Boxed Types &#8212; A mechanism to wrap opaque C structures registered by the type system</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GBoxedCopyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedCopyFunc">*GBoxedCopyFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GBoxedFreeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedFreeFunc">*GBoxedFreeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_boxed_copy&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#g-boxed-copy">g_boxed_copy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_boxed_free&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#g-boxed-free">g_boxed_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_boxed_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#g-boxed-type-register-static">g_boxed_type_register_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_pointer_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#g-pointer-type-register-static">g_pointer_type_register_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_HASH_TABLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-HASH-TABLE:CAPS">G_TYPE_HASH_TABLE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_DATE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-DATE:CAPS">G_TYPE_DATE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_GSTRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-GSTRING:CAPS">G_TYPE_GSTRING</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_STRV class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-STRV:CAPS">G_TYPE_STRV</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_REGEX class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-REGEX:CAPS">G_TYPE_REGEX</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_MATCH_INFO class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-MATCH-INFO:CAPS">G_TYPE_MATCH_INFO</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-ARRAY:CAPS">G_TYPE_ARRAY</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_BYTE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-BYTE-ARRAY:CAPS">G_TYPE_BYTE_ARRAY</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PTR_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-PTR-ARRAY:CAPS">G_TYPE_PTR_ARRAY</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_BYTES class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-BYTES:CAPS">G_TYPE_BYTES</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_VARIANT_TYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-VARIANT-TYPE:CAPS">G_TYPE_VARIANT_TYPE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_ERROR class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-ERROR:CAPS">G_TYPE_ERROR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_DATE_TIME class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-DATE-TIME:CAPS">G_TYPE_DATE_TIME</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_TIME_ZONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-TIME-ZONE:CAPS">G_TYPE_TIME_ZONE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IO_CHANNEL class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-IO-CHANNEL:CAPS">G_TYPE_IO_CHANNEL</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IO_CONDITION class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-IO-CONDITION:CAPS">G_TYPE_IO_CONDITION</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_VARIANT_BUILDER class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-VARIANT-BUILDER:CAPS">G_TYPE_VARIANT_BUILDER</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_VARIANT_DICT class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-VARIANT-DICT:CAPS">G_TYPE_VARIANT_DICT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_KEY_FILE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-KEY-FILE:CAPS">G_TYPE_KEY_FILE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_MAIN_CONTEXT class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-MAIN-CONTEXT:CAPS">G_TYPE_MAIN_CONTEXT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_MAIN_LOOP class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-MAIN-LOOP:CAPS">G_TYPE_MAIN_LOOP</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_MAPPED_FILE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-MAPPED-FILE:CAPS">G_TYPE_MAPPED_FILE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_MARKUP_PARSE_CONTEXT class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-MARKUP-PARSE-CONTEXT:CAPS">G_TYPE_MARKUP_PARSE_CONTEXT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_SOURCE class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-SOURCE:CAPS">G_TYPE_SOURCE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_POLLFD class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-POLLFD:CAPS">G_TYPE_POLLFD</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_THREAD class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-THREAD:CAPS">G_TYPE_THREAD</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_OPTION_GROUP class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-OPTION-GROUP:CAPS">G_TYPE_OPTION_GROUP</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.description></A>
<H2>Description</H2>
<P>GBoxed is a generic wrapper mechanism for arbitrary C structures. The only thing the type system needs to know about the structures is how to copy and free them, beyond that they are treated as opaque chunks of memory.</P>
<P>Boxed types are useful for simple value-holder structures like rectangles or points. They can also be used for wrapping structures defined in non-GObject based libraries.</P></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GBoxedCopyFunc></A>
<H3>GBoxedCopyFunc&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GBoxedCopyFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> boxed</CODE></EM>);</PRE>
<P>This function is provided by the user and should produce a copy of the passed in boxed structure.</P>
<DIV class=refsect3><A name=GBoxedCopyFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>boxed</P></TD>
<TD class=parameter_description>
<P>The boxed structure to be copied. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=GBoxedCopyFunc.returns></A>
<H4>Returns</H4>
<P>The newly created copy of the boxed structure. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GBoxedFreeFunc></A>
<H3>GBoxedFreeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GBoxedFreeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> boxed</CODE></EM>);</PRE>
<P>This function is provided by the user and should free the boxed structure passed.</P>
<DIV class=refsect3><A name=GBoxedFreeFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>boxed</P></TD>
<TD class=parameter_description>
<P>The boxed structure to be freed. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-boxed-copy></A>
<H3>g_boxed_copy&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_boxed_copy (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> boxed_type</CODE></EM>,
              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> src_boxed</CODE></EM>);</PRE>
<P>Provide a copy of a boxed structure <EM class=parameter><CODE>src_boxed</CODE></EM> which is of type <EM class=parameter><CODE>boxed_type</CODE></EM> .</P>
<DIV class=refsect3><A name=g-boxed-copy.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>boxed_type</P></TD>
<TD class=parameter_description>
<P>The type of <EM class=parameter><CODE>src_boxed</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>src_boxed</P></TD>
<TD class=parameter_description>
<P>The boxed structure to be copied. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-boxed-copy.returns></A>
<H4>Returns</H4>
<P>The newly created copy of the boxed structure. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>][<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-boxed-free></A>
<H3>g_boxed_free&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_boxed_free (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> boxed_type</CODE></EM>,
              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> boxed</CODE></EM>);</PRE>
<P>Free the boxed structure <EM class=parameter><CODE>boxed</CODE></EM> which is of type <EM class=parameter><CODE>boxed_type</CODE></EM> .</P>
<DIV class=refsect3><A name=g-boxed-free.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>boxed_type</P></TD>
<TD class=parameter_description>
<P>The type of <EM class=parameter><CODE>boxed</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>boxed</P></TD>
<TD class=parameter_description>
<P>The boxed structure to be freed. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL must not be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>not nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-boxed-type-register-static></A>
<H3>g_boxed_type_register_static&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_boxed_type_register_static (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                              <EM class=parameter><CODE><A title=GBoxedCopyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedCopyFunc"><SPAN class=type>GBoxedCopyFunc</SPAN></A> boxed_copy</CODE></EM>,
                              <EM class=parameter><CODE><A title=GBoxedFreeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#GBoxedFreeFunc"><SPAN class=type>GBoxedFreeFunc</SPAN></A> boxed_free</CODE></EM>);</PRE>
<P>This function creates a new <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type id for a new boxed type with name <EM class=parameter><CODE>name</CODE></EM> . Boxed type handling functions have to be provided to copy and free opaque boxed structures of this type.</P>
<DIV class=refsect3><A name=g-boxed-type-register-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>Name of the new boxed type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>boxed_copy</P></TD>
<TD class=parameter_description>
<P>Boxed structure copy function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>boxed_free</P></TD>
<TD class=parameter_description>
<P>Boxed structure free function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-boxed-type-register-static.returns></A>
<H4>Returns</H4>
<P>New <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type id for <EM class=parameter><CODE>name</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-pointer-type-register-static></A>
<H3>g_pointer_type_register_static&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_pointer_type_register_static (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Creates a new <A title=G_TYPE_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-POINTER:CAPS"><CODE class=literal>G_TYPE_POINTER</CODE></A> derived type id for a new pointer type with name <EM class=parameter><CODE>name</CODE></EM> .</P>
<DIV class=refsect3><A name=g-pointer-type-register-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the name of the new pointer type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-pointer-type-register-static.returns></A>
<H4>Returns</H4>
<P>a new <A title=G_TYPE_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-POINTER:CAPS"><CODE class=literal>G_TYPE_POINTER</CODE></A> derived type id for <EM class=parameter><CODE>name</CODE></EM> .</P></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=G-TYPE-HASH-TABLE:CAPS></A>
<H3>G_TYPE_HASH_TABLE</H3><PRE class=programlisting>#define G_TYPE_HASH_TABLE (g_hash_table_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> reference.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-DATE:CAPS></A>
<H3>G_TYPE_DATE</H3><PRE class=programlisting>#define G_TYPE_DATE (g_date_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for <A href="https://developer.gnome.org/gobject/glib-Date-and-Time-Functions.html#GDate"><SPAN class=type>GDate</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-GSTRING:CAPS></A>
<H3>G_TYPE_GSTRING</H3><PRE class=programlisting>#define G_TYPE_GSTRING (g_gstring_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for <A href="https://developer.gnome.org/gobject/glib-Strings.html#GString"><SPAN class=type>GString</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-STRV:CAPS></A>
<H3>G_TYPE_STRV</H3><PRE class=programlisting>#define G_TYPE_STRV (g_strv_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated array of strings.</P>
<P>The code fragments in the following example show the use of a property of type <A title=G_TYPE_STRV class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#G-TYPE-STRV:CAPS"><SPAN class=type>G_TYPE_STRV</SPAN></A> with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A>, <A title=g_object_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set"><CODE class=function>g_object_set()</CODE></A> and <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A>.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property">g_object_class_install_property</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object_class<SPAN class="gtkdoc opt">,</SPAN>
                                 PROP_AUTHORS<SPAN class="gtkdoc opt">,</SPAN>
                                 <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-boxed">g_param_spec_boxed</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"authors"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                                     <SPAN class=function>_</SPAN><SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Authors"</SPAN><SPAN class="gtkdoc opt">),</SPAN>
                                                     <SPAN class=function>_</SPAN><SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"List of authors"</SPAN><SPAN class="gtkdoc opt">),</SPAN>
                                                     G_TYPE_STRV<SPAN class="gtkdoc opt">,</SPAN>
                                                     G_PARAM_READWRITE<SPAN class="gtkdoc opt">));</SPAN>

gchar <SPAN class="gtkdoc opt">*</SPAN>authors<SPAN class="gtkdoc opt">[] = {</SPAN> <SPAN class=string>"Owen"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Tim"</SPAN><SPAN class="gtkdoc opt">,</SPAN> NULL <SPAN class="gtkdoc opt">};</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set">g_object_set</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>obj<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"authors"</SPAN><SPAN class="gtkdoc opt">,</SPAN> authors<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>

gchar <SPAN class="gtkdoc opt">*</SPAN>writers<SPAN class="gtkdoc opt">[];</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get">g_object_get</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>obj<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"authors"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>writers<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">/&amp;</SPAN>ast<SPAN class="gtkdoc opt">;</SPAN> <SPAN class=keyword>do</SPAN> something with writers <SPAN class="gtkdoc opt">&amp;</SPAN>ast<SPAN class="gtkdoc opt">;/</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strfreev">g_strfreev</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>writers<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-REGEX:CAPS></A>
<H3>G_TYPE_REGEX</H3><PRE class=programlisting>#define G_TYPE_REGEX (g_regex_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Perl-compatible-regular-expressions.html#GRegex"><SPAN class=type>GRegex</SPAN></A> reference.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-14.html#api-index-2.14">2.14</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-MATCH-INFO:CAPS></A>
<H3>G_TYPE_MATCH_INFO</H3><PRE class=programlisting>#define G_TYPE_MATCH_INFO (g_match_info_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Perl-compatible-regular-expressions.html#GMatchInfo"><SPAN class=type>GMatchInfo</SPAN></A> reference.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-ARRAY:CAPS></A>
<H3>G_TYPE_ARRAY</H3><PRE class=programlisting>#define G_TYPE_ARRAY (g_array_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> reference.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-22.html#api-index-2.22">2.22</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-BYTE-ARRAY:CAPS></A>
<H3>G_TYPE_BYTE_ARRAY</H3><PRE class=programlisting>#define G_TYPE_BYTE_ARRAY (g_byte_array_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Byte-Arrays.html#GByteArray"><SPAN class=type>GByteArray</SPAN></A> reference.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-22.html#api-index-2.22">2.22</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PTR-ARRAY:CAPS></A>
<H3>G_TYPE_PTR_ARRAY</H3><PRE class=programlisting>#define G_TYPE_PTR_ARRAY (g_ptr_array_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> reference.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-22.html#api-index-2.22">2.22</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-BYTES:CAPS></A>
<H3>G_TYPE_BYTES</H3><PRE class=programlisting>#define G_TYPE_BYTES (g_bytes_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for <A href="https://developer.gnome.org/gobject/glib-Byte-Arrays.html#GBytes"><SPAN class=type>GBytes</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-VARIANT-TYPE:CAPS></A>
<H3>G_TYPE_VARIANT_TYPE</H3><PRE class=programlisting>#define G_TYPE_VARIANT_TYPE (g_variant_type_get_gtype ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-ERROR:CAPS></A>
<H3>G_TYPE_ERROR</H3><PRE class=programlisting>#define G_TYPE_ERROR (g_error_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-DATE-TIME:CAPS></A>
<H3>G_TYPE_DATE_TIME</H3><PRE class=programlisting>#define G_TYPE_DATE_TIME (g_date_time_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-GDateTime.html#GDateTime"><SPAN class=type>GDateTime</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-TIME-ZONE:CAPS></A>
<H3>G_TYPE_TIME_ZONE</H3><PRE class=programlisting>#define G_TYPE_TIME_ZONE (g_time_zone_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-GTimeZone.html#GTimeZone"><SPAN class=type>GTimeZone</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IO-CHANNEL:CAPS></A>
<H3>G_TYPE_IO_CHANNEL</H3><PRE class=programlisting>#define G_TYPE_IO_CHANNEL (g_io_channel_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for <A href="https://developer.gnome.org/gobject/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IO-CONDITION:CAPS></A>
<H3>G_TYPE_IO_CONDITION</H3><PRE class=programlisting>#define G_TYPE_IO_CONDITION (g_io_condition_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for <A href="https://developer.gnome.org/gobject/glib-IO-Channels.html#GIOCondition"><SPAN class=type>GIOCondition</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-VARIANT-BUILDER:CAPS></A>
<H3>G_TYPE_VARIANT_BUILDER</H3><PRE class=programlisting>#define G_TYPE_VARIANT_BUILDER (g_variant_builder_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-VARIANT-DICT:CAPS></A>
<H3>G_TYPE_VARIANT_DICT</H3><PRE class=programlisting>#define G_TYPE_VARIANT_DICT (g_variant_dict_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-40.html#api-index-2.40">2.40</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-KEY-FILE:CAPS></A>
<H3>G_TYPE_KEY_FILE</H3><PRE class=programlisting>#define G_TYPE_KEY_FILE (g_key_file_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Key-value-file-parser.html#GKeyFile"><SPAN class=type>GKeyFile</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-MAIN-CONTEXT:CAPS></A>
<H3>G_TYPE_MAIN_CONTEXT</H3><PRE class=programlisting>#define G_TYPE_MAIN_CONTEXT (g_main_context_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-MAIN-LOOP:CAPS></A>
<H3>G_TYPE_MAIN_LOOP</H3><PRE class=programlisting>#define G_TYPE_MAIN_LOOP (g_main_loop_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-MAPPED-FILE:CAPS></A>
<H3>G_TYPE_MAPPED_FILE</H3><PRE class=programlisting>#define G_TYPE_MAPPED_FILE (g_mapped_file_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-File-Utilities.html#GMappedFile"><SPAN class=type>GMappedFile</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-40.html#api-index-2.40">2.40</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-MARKUP-PARSE-CONTEXT:CAPS></A>
<H3>G_TYPE_MARKUP_PARSE_CONTEXT</H3><PRE class=programlisting>#define G_TYPE_MARKUP_PARSE_CONTEXT (g_markup_parse_context_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-36.html#api-index-2.36">2.36</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-SOURCE:CAPS></A>
<H3>G_TYPE_SOURCE</H3><PRE class=programlisting>#define G_TYPE_SOURCE (g_source_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-POLLFD:CAPS></A>
<H3>G_TYPE_POLLFD</H3><PRE class=programlisting>#define G_TYPE_POLLFD (g_pollfd_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-36.html#api-index-2.36">2.36</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-THREAD:CAPS></A>
<H3>G_TYPE_THREAD</H3><PRE class=programlisting>#define G_TYPE_THREAD (g_thread_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Threads.html#GThread"><SPAN class=type>GThread</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-36.html#api-index-2.36">2.36</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-OPTION-GROUP:CAPS></A>
<H3>G_TYPE_OPTION_GROUP</H3><PRE class=programlisting>#define G_TYPE_OPTION_GROUP (g_option_group_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for a boxed type holding a <A href="https://developer.gnome.org/gobject/glib-Commandline-option-parser.html#GOptionGroup"><SPAN class=type>GOptionGroup</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Boxed-Types.see-also></A>
<H2>See Also</H2>
<P><A title="struct GParamSpecBoxed" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoxed"><SPAN class=type>GParamSpecBoxed</SPAN></A>, <A title=g_param_spec_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-boxed"><CODE class=function>g_param_spec_boxed()</CODE></A></P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28677">Topic #28677: Generic values.. Generic values &#38323;?A polymorphic type that can hold values of any other type.. .. Functions.. #defineG_VALUE_HOLDS() .. #defineG_VALUE_TYPE() .. #defineG_VALUE ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Generic values</SPAN></H2>
<P>Generic values &#8212; A polymorphic type that can hold values of any other type</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-VALUE-HOLDS:CAPS">G_VALUE_HOLDS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-VALUE-TYPE:CAPS">G_VALUE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_TYPE_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-VALUE-TYPE-NAME:CAPS">G_VALUE_TYPE_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_VALUE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-IS-VALUE:CAPS">G_TYPE_IS_VALUE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_VALUE_ABSTRACT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-IS-VALUE-ABSTRACT:CAPS">G_TYPE_IS_VALUE_ABSTRACT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_VALUE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-IS-VALUE:CAPS">G_IS_VALUE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init">g_value_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_copy&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-copy">g_value_copy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_reset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-reset">g_value_reset</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_unset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-unset">g_value_unset</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_init_from_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init-from-instance">g_value_init_from_instance</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-set-instance">g_value_set_instance</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_value_fits_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-fits-pointer">g_value_fits_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_value_peek_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-peek-pointer">g_value_peek_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_value_type_compatible&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-type-compatible">g_value_type_compatible</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_value_type_transformable&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-type-transformable">g_value_type_transformable</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_value_transform&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-transform">g_value_transform</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GValueTransform&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValueTransform">*GValueTransform</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_register_transform_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-register-transform-func">g_value_register_transform_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_strdup_value_contents&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-strdup-value-contents">g_strdup_value_contents</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_INIT class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-VALUE-INIT:CAPS">G_VALUE_INIT</A></TD></TR>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue">GValue</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_VALUE class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-VALUE:CAPS">G_TYPE_VALUE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_VALUE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-VALUE-ARRAY:CAPS">G_TYPE_VALUE_ARRAY</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.description></A>
<H2>Description</H2>
<P>The <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure is basically a variable container that consists of a type identifier and a specific value of that type. The type identifier within a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure always determines the type of the associated value. To create a undefined <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure, simply create a zero-filled <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure. To initialize the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, use the <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A> function. A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> cannot be used until it is initialized. The basic type operations (such as freeing and copying) are determined by the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> associated with the type ID stored in the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>. Other <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> operations (such as converting values between types) are provided by this interface.</P>
<P>The code in the example program below demonstrates <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>'s features.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc ppc">#include &lt;glib-object.h&gt;</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>int2string</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">const</SPAN> GValue <SPAN class="gtkdoc opt">*</SPAN>src_value<SPAN class="gtkdoc opt">,</SPAN>
            GValue       <SPAN class="gtkdoc opt">*</SPAN>dest_value<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-int">g_value_get_int</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>src_value<SPAN class="gtkdoc opt">) ==</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-static-string">g_value_set_static_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>dest_value<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"An important number"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>else</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-static-string">g_value_set_static_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>dest_value<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"What's that?"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">int</SPAN>
<SPAN class=function>main</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">int</SPAN>   argc<SPAN class="gtkdoc opt">,</SPAN>
      <SPAN class="gtkdoc kwb">char</SPAN> <SPAN class="gtkdoc opt">*</SPAN>argv<SPAN class="gtkdoc opt">[])</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc slc">// GValues must be initialized</SPAN>
  GValue a <SPAN class="gtkdoc opt">=</SPAN> G_VALUE_INIT<SPAN class="gtkdoc opt">;</SPAN>
  GValue b <SPAN class="gtkdoc opt">=</SPAN> G_VALUE_INIT<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class="gtkdoc kwb">const</SPAN> gchar <SPAN class="gtkdoc opt">*</SPAN>message<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class="gtkdoc slc">// The GValue starts empty</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(!</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-STRING:CAPS">G_VALUE_HOLDS_STRING</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class="gtkdoc slc">// Put a string in it</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init">g_value_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">,</SPAN> G_TYPE_STRING<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-STRING:CAPS">G_VALUE_HOLDS_STRING</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">));</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-static-string">g_value_set_static_string</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Hello, world!"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-printf">g_printf</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"%s</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-string">g_value_get_string</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class="gtkdoc slc">// Reset it to its pristine state</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-unset">g_value_unset</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class="gtkdoc slc">// It can then be reused for another type</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init">g_value_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">,</SPAN> G_TYPE_INT<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-int">g_value_set_int</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class="gtkdoc slc">// Attempt to transform it into a GValue of type STRING</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init">g_value_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>b<SPAN class="gtkdoc opt">,</SPAN> G_TYPE_STRING<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class="gtkdoc slc">// An INT is transformable to a STRING</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-type-transformable">g_value_type_transformable</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>G_TYPE_INT<SPAN class="gtkdoc opt">,</SPAN> G_TYPE_STRING<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-transform">g_value_transform</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">, &amp;</SPAN>b<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-printf">g_printf</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"%s</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-string">g_value_get_string</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>b<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class="gtkdoc slc">// Attempt to transform it again using a custom transform function</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-register-transform-func">g_value_register_transform_func</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>G_TYPE_INT<SPAN class="gtkdoc opt">,</SPAN> G_TYPE_STRING<SPAN class="gtkdoc opt">,</SPAN> int2string<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-transform">g_value_transform</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>a<SPAN class="gtkdoc opt">, &amp;</SPAN>b<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-printf">g_printf</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"%s</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-string">g_value_get_string</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>b<SPAN class="gtkdoc opt">));</SPAN>
  <SPAN class=keyword>return</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-VALUE-HOLDS:CAPS></A>
<H3>G_VALUE_HOLDS()</H3><PRE class=programlisting>#define G_VALUE_HOLDS(value,type)&nbsp;(G_TYPE_CHECK_VALUE_TYPE ((value), (type)))
</PRE>
<P>Checks if <EM class=parameter><CODE>value</CODE></EM> holds (or contains) a value of <EM class=parameter><CODE>type</CODE></EM> . This macro will also check for <EM class=parameter><CODE>value</CODE></EM> != <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> and issue a warning if the check fails.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>value</CODE></EM> holds the <EM class=parameter><CODE>type</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-TYPE:CAPS></A>
<H3>G_VALUE_TYPE()</H3><PRE class=programlisting>#define&nbsp;G_VALUE_TYPE(value)		(((GValue*) (value))-&gt;g_type)
</PRE>
<P>Get the type identifier of <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=G-VALUE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-TYPE.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-TYPE-NAME:CAPS></A>
<H3>G_VALUE_TYPE_NAME()</H3><PRE class=programlisting>#define&nbsp;G_VALUE_TYPE_NAME(value)&nbsp;(g_type_name (G_VALUE_TYPE (value)))
</PRE>
<P>Gets the type name of <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=G-VALUE-TYPE-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-TYPE-NAME.returns></A>
<H4>Returns</H4>
<P>the type name.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-VALUE:CAPS></A>
<H3>G_TYPE_IS_VALUE()</H3><PRE class=programlisting>#define&nbsp;G_TYPE_IS_VALUE(type)		(g_type_check_is_value_type (type))
</PRE>
<P>Checks whether the passed in type ID can be used for <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A>. That is, this macro checks whether this type provides an implementation of the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> functions required for a type to create a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of.</P>
<DIV class=refsect3><A name=G-TYPE-IS-VALUE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-VALUE.returns></A>
<H4>Returns</H4>
<P>Whether <EM class=parameter><CODE>type</CODE></EM> is suitable as a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> type.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-VALUE-ABSTRACT:CAPS></A>
<H3>G_TYPE_IS_VALUE_ABSTRACT()</H3><PRE class=programlisting>#define G_TYPE_IS_VALUE_ABSTRACT(type)          (g_type_test_flags ((type), G_TYPE_FLAG_VALUE_ABSTRACT))
</PRE>
<P>Checks if <EM class=parameter><CODE>type</CODE></EM> is an abstract value type. An abstract value type introduces a value table, but can't be used for <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A> and is normally used as an abstract base type for derived value types.</P>
<DIV class=refsect3><A name=G-TYPE-IS-VALUE-ABSTRACT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>A <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-VALUE-ABSTRACT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-VALUE:CAPS></A>
<H3>G_IS_VALUE()</H3><PRE class=programlisting>#define&nbsp;G_IS_VALUE(value)		(G_TYPE_CHECK_VALUE (value))
</PRE>
<P>Checks if <EM class=parameter><CODE>value</CODE></EM> is a valid and initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-IS-VALUE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-VALUE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-init></A>
<H3>g_value_init&nbsp;()</H3><PRE class=programlisting><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;*
g_value_init (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
              <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> g_type</CODE></EM>);</PRE>
<P>Initializes <EM class=parameter><CODE>value</CODE></EM> with the default value of <EM class=parameter><CODE>type</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-init.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>A zero-filled (uninitialized) <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>g_type</P></TD>
<TD class=parameter_description>
<P>Type the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> should hold values of.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-init.returns></A>
<H4>Returns</H4>
<P>the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure that has been passed in. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-copy></A>
<H3>g_value_copy&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_copy (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *src_value</CODE></EM>,
              <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *dest_value</CODE></EM>);</PRE>
<P>Copies the value of <EM class=parameter><CODE>src_value</CODE></EM> into <EM class=parameter><CODE>dest_value</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-copy.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>src_value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure of the same type as <EM class=parameter><CODE>src_value</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-reset></A>
<H3>g_value_reset&nbsp;()</H3><PRE class=programlisting><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;*
g_value_reset (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Clears the current value in <EM class=parameter><CODE>value</CODE></EM> and resets it to the default value (as if the value had just been initialized).</P>
<DIV class=refsect3><A name=g-value-reset.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-reset.returns></A>
<H4>Returns</H4>
<P>the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure that has been passed in</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-unset></A>
<H3>g_value_unset&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_unset (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Clears the current value in <EM class=parameter><CODE>value</CODE></EM> (if any) and "unsets" the type, this releases all resources associated with this GValue. An unset value is the same as an uninitialized (zero-filled) <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P>
<DIV class=refsect3><A name=g-value-unset.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-init-from-instance></A>
<H3>g_value_init_from_instance&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_init_from_instance (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>);</PRE>
<P>Initializes and sets <EM class=parameter><CODE>value</CODE></EM> from an instantiatable type via the value_table's <CODE class=function>collect_value()</CODE> function.</P>
<P>Note: The <EM class=parameter><CODE>value</CODE></EM> will be initialised with the exact type of <EM class=parameter><CODE>instance</CODE></EM> . If you wish to set the <EM class=parameter><CODE>value</CODE></EM> 's type to a different GType (such as a parent class GType), you need to manually call <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A> and <A title=g_value_set_instance&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-set-instance"><CODE class=function>g_value_set_instance()</CODE></A>.</P>
<DIV class=refsect3><A name=g-value-init-from-instance.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>An uninitialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-42.html#api-index-2.42">2.42</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-instance></A>
<H3>g_value_set_instance&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_instance (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>);</PRE>
<P>Sets <EM class=parameter><CODE>value</CODE></EM> from an instantiatable type via the value_table's <CODE class=function>collect_value()</CODE> function.</P>
<DIV class=refsect3><A name=g-value-set-instance.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-fits-pointer></A>
<H3>g_value_fits_pointer&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_value_fits_pointer (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Determines if <EM class=parameter><CODE>value</CODE></EM> will fit inside the size of a pointer value. This is an internal function introduced mainly for C marshallers.</P>
<DIV class=refsect3><A name=g-value-fits-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-fits-pointer.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>value</CODE></EM> will fit inside a pointer value.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-peek-pointer></A>
<H3>g_value_peek_pointer&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_value_peek_pointer (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the value contents as pointer. This function asserts that <A title=g_value_fits_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-fits-pointer"><CODE class=function>g_value_fits_pointer()</CODE></A> returned <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> for the passed in value. This is an internal function introduced mainly for C marshallers.</P>
<DIV class=refsect3><A name=g-value-peek-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>An initialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-peek-pointer.returns></A>
<H4>Returns</H4>
<P>the value contents as pointer. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-type-compatible></A>
<H3>g_value_type_compatible&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_value_type_compatible (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> src_type</CODE></EM>,
                         <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> dest_type</CODE></EM>);</PRE>
<P>Returns whether a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <EM class=parameter><CODE>src_type</CODE></EM> can be copied into a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <EM class=parameter><CODE>dest_type</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-type-compatible.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>src_type</P></TD>
<TD class=parameter_description>
<P>source type to be copied.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_type</P></TD>
<TD class=parameter_description>
<P>destination type for copying.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-type-compatible.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <A title=g_value_copy&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-copy"><CODE class=function>g_value_copy()</CODE></A> is possible with <EM class=parameter><CODE>src_type</CODE></EM> and <EM class=parameter><CODE>dest_type</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-type-transformable></A>
<H3>g_value_type_transformable&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_value_type_transformable (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> src_type</CODE></EM>,
                            <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> dest_type</CODE></EM>);</PRE>
<P>Check whether <A title=g_value_transform&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-transform"><CODE class=function>g_value_transform()</CODE></A> is able to transform values of type <EM class=parameter><CODE>src_type</CODE></EM> into values of type <EM class=parameter><CODE>dest_type</CODE></EM> . Note that for the types to be transformable, they must be compatible or a transformation function must be registered.</P>
<DIV class=refsect3><A name=g-value-type-transformable.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>src_type</P></TD>
<TD class=parameter_description>
<P>Source type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_type</P></TD>
<TD class=parameter_description>
<P>Target type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-type-transformable.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the transformation is possible, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-transform></A>
<H3>g_value_transform&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_value_transform (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *src_value</CODE></EM>,
                   <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *dest_value</CODE></EM>);</PRE>
<P>Tries to cast the contents of <EM class=parameter><CODE>src_value</CODE></EM> into a type appropriate to store in <EM class=parameter><CODE>dest_value</CODE></EM> , e.g. to transform a <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A> value into a <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A> value. Performing transformations between value types might incur precision lossage. Especially transformations into strings might reveal seemingly arbitrary results and shouldn't be relied upon for production code (such as rcfile value or object property serialization).</P>
<DIV class=refsect3><A name=g-value-transform.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>src_value</P></TD>
<TD class=parameter_description>
<P>Source value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_value</P></TD>
<TD class=parameter_description>
<P>Target value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-transform.returns></A>
<H4>Returns</H4>
<P>Whether a transformation rule was found and could be applied. Upon failing transformations, <EM class=parameter><CODE>dest_value</CODE></EM> is left untouched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GValueTransform></A>
<H3>GValueTransform&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GValueTransform<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *src_value</CODE></EM>,
                    <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *dest_value</CODE></EM>);</PRE>
<P>The type of value transformation functions which can be registered with <A title=g_value_register_transform_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-register-transform-func"><CODE class=function>g_value_register_transform_func()</CODE></A>.</P>
<DIV class=refsect3><A name=GValueTransform.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>src_value</P></TD>
<TD class=parameter_description>
<P>Source value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_value</P></TD>
<TD class=parameter_description>
<P>Target value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-register-transform-func></A>
<H3>g_value_register_transform_func&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_register_transform_func (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> src_type</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> dest_type</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValueTransform&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValueTransform"><SPAN class=type>GValueTransform</SPAN></A> transform_func</CODE></EM>);</PRE>
<P>Registers a value transformation function for use in <A title=g_value_transform&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-transform"><CODE class=function>g_value_transform()</CODE></A>. A previously registered transformation function for <EM class=parameter><CODE>src_type</CODE></EM> and <EM class=parameter><CODE>dest_type</CODE></EM> will be replaced.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-register-transform-func.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>src_type</P></TD>
<TD class=parameter_description>
<P>Source type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_type</P></TD>
<TD class=parameter_description>
<P>Target type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>transform_func</P></TD>
<TD class=parameter_description>
<P>a function which transforms values of type <EM class=parameter><CODE>src_type</CODE></EM> into value of type <EM class=parameter><CODE>dest_type</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-strdup-value-contents></A>
<H3>g_strdup_value_contents&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_strdup_value_contents (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Return a newly allocated string, which describes the contents of a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>. The main purpose of this function is to describe <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> contents for debugging output, the way in which the contents are described may change between different GLib versions.</P>
<DIV class=refsect3><A name=g-strdup-value-contents.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> which contents are to be described.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-strdup-value-contents.returns></A>
<H4>Returns</H4>
<P>Newly allocated string.</P></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=G-VALUE-INIT:CAPS></A>
<H3>G_VALUE_INIT</H3><PRE class=programlisting>#define G_VALUE_INIT  { 0, { { 0 } } }
</PRE>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> must be initialized before it can be used. This macro can be used as initializer instead of an explicit <CODE class=literal>{ 0 }</CODE> when declaring a variable, but it cannot be assigned to a variable.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>GValue value <SPAN class="gtkdoc opt">=</SPAN> G_VALUE_INIT<SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GValue></A>
<H3>GValue</H3><PRE class=programlisting>typedef struct {
} GValue;
</PRE>
<P>An opaque structure used to hold different types of values. The data within the structure has protected scope: it is accessible only to functions within a <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> structure, or implementations of the g_value_*() API. That is, code portions which implement new fundamental types. <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> users cannot make any assumptions about how data is stored within the 2 element <EM class=parameter><CODE>data</CODE></EM> union, and the <EM class=parameter><CODE>g_type</CODE></EM> member should only be accessed through the <A title=G_VALUE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-VALUE-TYPE:CAPS"><CODE class=function>G_VALUE_TYPE()</CODE></A> macro.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-VALUE:CAPS></A>
<H3>G_TYPE_VALUE</H3><PRE class=programlisting>#define G_TYPE_VALUE (g_value_get_type ())
</PRE>
<P>The type ID of the "GValue" type which is a boxed type, used to pass around pointers to GValues.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-VALUE-ARRAY:CAPS></A>
<H3>G_TYPE_VALUE_ARRAY</H3><PRE class=programlisting>#define G_TYPE_VALUE_ARRAY (g_value_array_get_type ())
</PRE>
<DIV class=warning>
<P><CODE class=literal>G_TYPE_VALUE_ARRAY</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> instead of <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A></P></DIV>
<P>The type ID of the "GValueArray" type which is a boxed type, used to pass around pointers to GValueArrays.</P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Generic-values.see-also></A>
<H2>See Also</H2>
<P>The fundamental types which all support <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> operations and thus can be used as a type initializer for <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A> are defined by a separate interface. See the <A title="Parameters and Values" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html">standard values API</A> for details</P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28678">Topic #28678: Parameters and Values.. Parameters and Values &#38323;?Standard Parameter and Value Types.. .. Functions.. #defineG_IS_PARAM_SPEC_BOOLEAN() .. #defineG_PARAM_SPEC_BOOLEAN() .. ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Parameters and Values</SPAN></H2>
<P>Parameters and Values &#8212; Standard Parameter and Value Types</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_BOOLEAN() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-BOOLEAN:CAPS">G_IS_PARAM_SPEC_BOOLEAN</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_BOOLEAN() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-BOOLEAN:CAPS">G_PARAM_SPEC_BOOLEAN</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_BOOLEAN() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-BOOLEAN:CAPS">G_VALUE_HOLDS_BOOLEAN</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_boolean&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-boolean">g_param_spec_boolean</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_boolean&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-boolean">g_value_set_boolean</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_boolean&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-boolean">g_value_get_boolean</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_CHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-CHAR:CAPS">G_IS_PARAM_SPEC_CHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_CHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-CHAR:CAPS">G_PARAM_SPEC_CHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_CHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-CHAR:CAPS">G_VALUE_HOLDS_CHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_char&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-char">g_param_spec_char</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_char&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-char">g_value_set_char</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_char&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-char">g_value_get_char</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=returnvalue>gint8</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_schar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-schar">g_value_get_schar</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_schar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-schar">g_value_set_schar</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_UCHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-UCHAR:CAPS">G_IS_PARAM_SPEC_UCHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_UCHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-UCHAR:CAPS">G_PARAM_SPEC_UCHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_UCHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-UCHAR:CAPS">G_VALUE_HOLDS_UCHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_uchar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-uchar">g_param_spec_uchar</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_uchar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-uchar">g_value_set_uchar</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guchar"><SPAN class=returnvalue>guchar</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_uchar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-uchar">g_value_get_uchar</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_INT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-INT:CAPS">G_IS_PARAM_SPEC_INT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_INT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-INT:CAPS">G_PARAM_SPEC_INT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_INT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-INT:CAPS">G_VALUE_HOLDS_INT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_int&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-int">g_param_spec_int</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_int&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-int">g_value_set_int</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_int&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-int">g_value_get_int</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_UINT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-UINT:CAPS">G_IS_PARAM_SPEC_UINT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_UINT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-UINT:CAPS">G_PARAM_SPEC_UINT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_UINT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-UINT:CAPS">G_VALUE_HOLDS_UINT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_uint&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-uint">g_param_spec_uint</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_uint&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-uint">g_value_set_uint</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_uint&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-uint">g_value_get_uint</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_LONG() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-LONG:CAPS">G_IS_PARAM_SPEC_LONG</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_LONG() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-LONG:CAPS">G_PARAM_SPEC_LONG</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_LONG() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-LONG:CAPS">G_VALUE_HOLDS_LONG</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_long&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-long">g_param_spec_long</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_long&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-long">g_value_set_long</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=returnvalue>glong</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_long&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-long">g_value_get_long</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_ULONG() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-ULONG:CAPS">G_IS_PARAM_SPEC_ULONG</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_ULONG() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-ULONG:CAPS">G_PARAM_SPEC_ULONG</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_ULONG() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-ULONG:CAPS">G_VALUE_HOLDS_ULONG</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_ulong&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-ulong">g_param_spec_ulong</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_ulong&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-ulong">g_value_set_ulong</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_ulong&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-ulong">g_value_get_ulong</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_INT64() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-INT64:CAPS">G_IS_PARAM_SPEC_INT64</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_INT64() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-INT64:CAPS">G_PARAM_SPEC_INT64</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_INT64() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-INT64:CAPS">G_VALUE_HOLDS_INT64</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_int64&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-int64">g_param_spec_int64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_int64&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-int64">g_value_set_int64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_int64&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-int64">g_value_get_int64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_UINT64() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-UINT64:CAPS">G_IS_PARAM_SPEC_UINT64</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_UINT64() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-UINT64:CAPS">G_PARAM_SPEC_UINT64</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_UINT64() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-UINT64:CAPS">G_VALUE_HOLDS_UINT64</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_uint64&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-uint64">g_param_spec_uint64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_uint64&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-uint64">g_value_set_uint64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=returnvalue>guint64</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_uint64&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-uint64">g_value_get_uint64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_FLOAT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-FLOAT:CAPS">G_IS_PARAM_SPEC_FLOAT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_FLOAT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-FLOAT:CAPS">G_PARAM_SPEC_FLOAT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_FLOAT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-FLOAT:CAPS">G_VALUE_HOLDS_FLOAT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_float&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-float">g_param_spec_float</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_float&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-float">g_value_set_float</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=returnvalue>gfloat</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_float&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-float">g_value_get_float</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_DOUBLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-DOUBLE:CAPS">G_IS_PARAM_SPEC_DOUBLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_DOUBLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-DOUBLE:CAPS">G_PARAM_SPEC_DOUBLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_DOUBLE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-DOUBLE:CAPS">G_VALUE_HOLDS_DOUBLE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_double&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-double">g_param_spec_double</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_double&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-double">g_value_set_double</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=returnvalue>gdouble</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_double&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-double">g_value_get_double</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_ENUM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-ENUM:CAPS">G_IS_PARAM_SPEC_ENUM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_ENUM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-ENUM:CAPS">G_PARAM_SPEC_ENUM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_ENUM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-ENUM:CAPS">G_VALUE_HOLDS_ENUM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-enum">g_param_spec_enum</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-enum">g_value_set_enum</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-enum">g_value_get_enum</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_FLAGS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-FLAGS:CAPS">G_IS_PARAM_SPEC_FLAGS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_FLAGS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-FLAGS:CAPS">G_PARAM_SPEC_FLAGS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_FLAGS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-FLAGS:CAPS">G_VALUE_HOLDS_FLAGS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-flags">g_param_spec_flags</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-flags">g_value_set_flags</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-flags">g_value_get_flags</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_STRING() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-STRING:CAPS">G_IS_PARAM_SPEC_STRING</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_STRING() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-STRING:CAPS">G_PARAM_SPEC_STRING</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_STRING() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-STRING:CAPS">G_VALUE_HOLDS_STRING</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-string">g_param_spec_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-string">g_value_set_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_static_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-static-string">g_value_set_static_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_take_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-string">g_value_take_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_string_take_ownership&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-string-take-ownership">g_value_set_string_take_ownership</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_get_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-string">g_value_get_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_dup_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-dup-string">g_value_dup_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_PARAM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-PARAM:CAPS">G_IS_PARAM_SPEC_PARAM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_PARAM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-PARAM:CAPS">G_PARAM_SPEC_PARAM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_PARAM() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-PARAM:CAPS">G_VALUE_HOLDS_PARAM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_param&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-param">g_param_spec_param</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_param&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-param">g_value_set_param</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_take_param&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-param">g_value_take_param</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_param_take_ownership&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-param-take-ownership">g_value_set_param_take_ownership</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_get_param&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-param">g_value_get_param</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_dup_param&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-dup-param">g_value_dup_param</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_BOXED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-BOXED:CAPS">G_IS_PARAM_SPEC_BOXED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_BOXED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-BOXED:CAPS">G_PARAM_SPEC_BOXED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_BOXED() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-BOXED:CAPS">G_VALUE_HOLDS_BOXED</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-boxed">g_param_spec_boxed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-boxed">g_value_set_boxed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_static_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-static-boxed">g_value_set_static_boxed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_take_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-boxed">g_value_take_boxed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_boxed_take_ownership&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-boxed-take-ownership">g_value_set_boxed_take_ownership</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-boxed">g_value_get_boxed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_value_dup_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-dup-boxed">g_value_dup_boxed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_POINTER() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-POINTER:CAPS">G_IS_PARAM_SPEC_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_POINTER() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-POINTER:CAPS">G_PARAM_SPEC_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_POINTER() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-POINTER:CAPS">G_VALUE_HOLDS_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-pointer">g_param_spec_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-pointer">g_value_set_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-pointer">g_value_get_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-OBJECT:CAPS">G_IS_PARAM_SPEC_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-OBJECT:CAPS">G_PARAM_SPEC_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-OBJECT:CAPS">G_VALUE_HOLDS_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-object">g_param_spec_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-object">g_value_set_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_take_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-object">g_value_take_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_object_take_ownership&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-object-take-ownership">g_value_set_object_take_ownership</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-object">g_value_get_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_value_dup_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-dup-object">g_value_dup_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_UNICHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-UNICHAR:CAPS">G_IS_PARAM_SPEC_UNICHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_UNICHAR() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-UNICHAR:CAPS">G_PARAM_SPEC_UNICHAR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_unichar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-unichar">g_param_spec_unichar</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_VALUE_ARRAY() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-VALUE-ARRAY:CAPS">G_IS_PARAM_SPEC_VALUE_ARRAY</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_VALUE_ARRAY() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-VALUE-ARRAY:CAPS">G_PARAM_SPEC_VALUE_ARRAY</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_value_array&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-value-array">g_param_spec_value_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_OVERRIDE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-OVERRIDE:CAPS">G_IS_PARAM_SPEC_OVERRIDE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_OVERRIDE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-OVERRIDE:CAPS">G_PARAM_SPEC_OVERRIDE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_override&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-override">g_param_spec_override</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_GTYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-GTYPE:CAPS">G_IS_PARAM_SPEC_GTYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_GTYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-GTYPE:CAPS">G_PARAM_SPEC_GTYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_GTYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-GTYPE:CAPS">G_VALUE_HOLDS_GTYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_gtype&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-gtype">g_param_spec_gtype</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_value_get_gtype&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-gtype">g_value_get_gtype</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_gtype&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-gtype">g_value_set_gtype</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_VARIANT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-IS-PARAM-SPEC-VARIANT:CAPS">G_IS_PARAM_SPEC_VARIANT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_VARIANT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-PARAM-SPEC-VARIANT:CAPS">G_PARAM_SPEC_VARIANT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_HOLDS_VARIANT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-VALUE-HOLDS-VARIANT:CAPS">G_VALUE_HOLDS_VARIANT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_variant&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-variant">g_param_spec_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_get_variant&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-variant">g_value_get_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_dup_variant&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-dup-variant">g_value_dup_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_set_variant&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-variant">g_value_set_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_take_variant&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-variant">g_value_take_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-BOOLEAN:CAPS">G_TYPE_PARAM_BOOLEAN</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecBoolean" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoolean">GParamSpecBoolean</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-CHAR:CAPS">G_TYPE_PARAM_CHAR</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecChar">GParamSpecChar</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UCHAR:CAPS">G_TYPE_PARAM_UCHAR</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecUChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUChar">GParamSpecUChar</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-INT:CAPS">G_TYPE_PARAM_INT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt">GParamSpecInt</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UINT:CAPS">G_TYPE_PARAM_UINT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecUInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt">GParamSpecUInt</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-LONG:CAPS">G_TYPE_PARAM_LONG</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecLong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecLong">GParamSpecLong</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-ULONG:CAPS">G_TYPE_PARAM_ULONG</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecULong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecULong">GParamSpecULong</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-INT64:CAPS">G_TYPE_PARAM_INT64</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt64">GParamSpecInt64</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UINT64:CAPS">G_TYPE_PARAM_UINT64</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecUInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt64">GParamSpecUInt64</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-FLOAT:CAPS">G_TYPE_PARAM_FLOAT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecFloat" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFloat">GParamSpecFloat</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-DOUBLE:CAPS">G_TYPE_PARAM_DOUBLE</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecDouble" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecDouble">GParamSpecDouble</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-ENUM:CAPS">G_TYPE_PARAM_ENUM</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecEnum" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecEnum">GParamSpecEnum</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-FLAGS:CAPS">G_TYPE_PARAM_FLAGS</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFlags">GParamSpecFlags</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-STRING:CAPS">G_TYPE_PARAM_STRING</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecString" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecString">GParamSpecString</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=gchararray class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#gchararray">gchararray</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-PARAM:CAPS">G_TYPE_PARAM_PARAM</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecParam" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecParam">GParamSpecParam</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-BOXED:CAPS">G_TYPE_PARAM_BOXED</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecBoxed" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoxed">GParamSpecBoxed</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-POINTER:CAPS">G_TYPE_PARAM_POINTER</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecPointer" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecPointer">GParamSpecPointer</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-OBJECT:CAPS">G_TYPE_PARAM_OBJECT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecObject">GParamSpecObject</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_UNICHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UNICHAR:CAPS">G_TYPE_PARAM_UNICHAR</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecUnichar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUnichar">GParamSpecUnichar</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_VALUE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-VALUE-ARRAY:CAPS">G_TYPE_PARAM_VALUE_ARRAY</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecValueArray">GParamSpecValueArray</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_OVERRIDE class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-OVERRIDE:CAPS">G_TYPE_PARAM_OVERRIDE</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride">GParamSpecOverride</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-GTYPE:CAPS">G_TYPE_PARAM_GTYPE</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecGType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecGType">GParamSpecGType</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_PARAM_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-VARIANT:CAPS">G_TYPE_PARAM_VARIANT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecVariant" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecVariant">GParamSpecVariant</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.description></A>
<H2>Description</H2>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> provides an abstract container structure which can be copied, transformed and compared while holding a value of any (derived) type, which is registered as a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> with a <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> in its <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A> structure. Parameter specifications for most value types can be created as <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived instances, to implement e.g. <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> properties which operate on <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> containers.</P>
<P>Parameter names need to start with a letter (a-z or A-Z). Subsequent characters can be letters, numbers or a '-'. All other characters are replaced by a '-' during construction.</P></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-IS-PARAM-SPEC-BOOLEAN:CAPS></A>
<H3>G_IS_PARAM_SPEC_BOOLEAN()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_BOOLEAN(pspec)     (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_BOOLEAN))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_PARAM_BOOLEAN</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-BOOLEAN.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-BOOLEAN.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-BOOLEAN:CAPS></A>
<H3>G_PARAM_SPEC_BOOLEAN()</H3><PRE class=programlisting>#define G_PARAM_SPEC_BOOLEAN(pspec)        (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_BOOLEAN, GParamSpecBoolean))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecBoolean" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoolean"><SPAN class=type>GParamSpecBoolean</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-BOOLEAN.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-BOOLEAN:CAPS></A>
<H3>G_VALUE_HOLDS_BOOLEAN()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_BOOLEAN(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_BOOLEAN))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_BOOLEAN</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-BOOLEAN.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-BOOLEAN.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-boolean></A>
<H3>g_param_spec_boolean&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_boolean (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> default_value</CODE></EM>,
                      <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecBoolean" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoolean"><SPAN class=type>GParamSpecBoolean</SPAN></A> instance specifying a <A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_BOOLEAN</CODE></A> property. In many cases, it may be more appropriate to use an enum with <A title=g_param_spec_enum&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-enum"><CODE class=function>g_param_spec_enum()</CODE></A>, both to improve code clarity by using explicitly named values, and to allow for more values to be added in future without breaking API.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-boolean.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-boolean.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-boolean></A>
<H3>g_value_set_boolean&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_boolean (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> v_boolean</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_BOOLEAN</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_boolean</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-boolean.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_BOOLEAN</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_boolean</P></TD>
<TD class=parameter_description>
<P>boolean value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-boolean></A>
<H3>g_value_get_boolean&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_value_get_boolean (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_BOOLEAN</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-boolean.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_BOOLEAN class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_TYPE_BOOLEAN</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-boolean.returns></A>
<H4>Returns</H4>
<P>boolean contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-CHAR:CAPS></A>
<H3>G_IS_PARAM_SPEC_CHAR()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_CHAR(pspec)        (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_CHAR))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-CHAR:CAPS"><CODE class=literal>G_TYPE_PARAM_CHAR</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-CHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-CHAR.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-CHAR:CAPS></A>
<H3>G_PARAM_SPEC_CHAR()</H3><PRE class=programlisting>#define G_PARAM_SPEC_CHAR(pspec)           (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_CHAR, GParamSpecChar))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecChar"><SPAN class=type>GParamSpecChar</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-CHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-CHAR:CAPS></A>
<H3>G_VALUE_HOLDS_CHAR()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_CHAR(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_CHAR))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-CHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-CHAR.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-char></A>
<H3>g_param_spec_char&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_char (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A> minimum</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A> maximum</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A> default_value</CODE></EM>,
                   <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecChar"><SPAN class=type>GParamSpecChar</SPAN></A> instance specifying a <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A> property.</P>
<DIV class=refsect3><A name=g-param-spec-char.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-char.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-char></A>
<H3>g_value_set_char&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_char (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> v_char</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_set_char</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>This function's input type is broken, see <A title=g_value_set_schar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-schar"><CODE class=function>g_value_set_schar()</CODE></A></P></DIV>
<P>Set the contents of a <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_char</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-char.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_char</P></TD>
<TD class=parameter_description>
<P>character value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-char></A>
<H3>g_value_get_char&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>
g_value_get_char (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_get_char</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>This function's return type is broken, see <A title=g_value_get_schar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-schar"><CODE class=function>g_value_get_schar()</CODE></A></P></DIV>
<P>Do not use this function; it is broken on platforms where the <CODE class=literal>char</CODE> type is unsigned, such as ARM and PowerPC. See <A title=g_value_get_schar&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-schar"><CODE class=function>g_value_get_schar()</CODE></A>.</P>
<P>Get the contents of a <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-char.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-char.returns></A>
<H4>Returns</H4>
<P>character contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-schar></A>
<H3>g_value_get_schar&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=returnvalue>gint8</SPAN></A>
g_value_get_schar (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-schar.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-schar.returns></A>
<H4>Returns</H4>
<P>signed 8 bit integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-schar></A>
<H3>g_value_set_schar&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_schar (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A> v_char</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_char</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-schar.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_CHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-CHAR:CAPS"><CODE class=literal>G_TYPE_CHAR</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_char</P></TD>
<TD class=parameter_description>
<P>signed 8 bit integer to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-UCHAR:CAPS></A>
<H3>G_IS_PARAM_SPEC_UCHAR()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_UCHAR(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UCHAR))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UCHAR:CAPS"><CODE class=literal>G_TYPE_PARAM_UCHAR</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UCHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UCHAR.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-UCHAR:CAPS></A>
<H3>G_PARAM_SPEC_UCHAR()</H3><PRE class=programlisting>#define G_PARAM_SPEC_UCHAR(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UCHAR, GParamSpecUChar))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecUChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUChar"><SPAN class=type>GParamSpecUChar</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-UCHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-UCHAR:CAPS></A>
<H3>G_VALUE_HOLDS_UCHAR()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_UCHAR(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UCHAR))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS"><CODE class=literal>G_TYPE_UCHAR</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-UCHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-UCHAR.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-uchar></A>
<H3>g_param_spec_uchar&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_uchar (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A> minimum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A> maximum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A> default_value</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecUChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUChar"><SPAN class=type>GParamSpecUChar</SPAN></A> instance specifying a <A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS"><CODE class=literal>G_TYPE_UCHAR</CODE></A> property.</P>
<DIV class=refsect3><A name=g-param-spec-uchar.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-uchar.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-uchar></A>
<H3>g_value_set_uchar&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_uchar (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guchar"><SPAN class=type>guchar</SPAN></A> v_uchar</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS"><CODE class=literal>G_TYPE_UCHAR</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_uchar</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-uchar.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS"><CODE class=literal>G_TYPE_UCHAR</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_uchar</P></TD>
<TD class=parameter_description>
<P>unsigned character value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-uchar></A>
<H3>g_value_get_uchar&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guchar"><SPAN class=returnvalue>guchar</SPAN></A>
g_value_get_uchar (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS"><CODE class=literal>G_TYPE_UCHAR</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-uchar.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_UCHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UCHAR:CAPS"><CODE class=literal>G_TYPE_UCHAR</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-uchar.returns></A>
<H4>Returns</H4>
<P>unsigned character contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-INT:CAPS></A>
<H3>G_IS_PARAM_SPEC_INT()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_INT(pspec)         (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_INT))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-INT:CAPS"><CODE class=literal>G_TYPE_PARAM_INT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-INT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-INT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-INT:CAPS></A>
<H3>G_PARAM_SPEC_INT()</H3><PRE class=programlisting>#define G_PARAM_SPEC_INT(pspec)            (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_INT, GParamSpecInt))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt"><SPAN class=type>GParamSpecInt</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-INT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-INT:CAPS></A>
<H3>G_VALUE_HOLDS_INT()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_INT(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_INT))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-INT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-INT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-int></A>
<H3>g_param_spec_int&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_int (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> minimum</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> maximum</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> default_value</CODE></EM>,
                  <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt"><SPAN class=type>GParamSpecInt</SPAN></A> instance specifying a <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-int.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-int.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-int></A>
<H3>g_value_set_int&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_int (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> v_int</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_int</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-int.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_int</P></TD>
<TD class=parameter_description>
<P>integer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-int></A>
<H3>g_value_get_int&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_value_get_int (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-int.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_INT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT:CAPS"><CODE class=literal>G_TYPE_INT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-int.returns></A>
<H4>Returns</H4>
<P>integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-UINT:CAPS></A>
<H3>G_IS_PARAM_SPEC_UINT()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_UINT(pspec)        (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UINT))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UINT:CAPS"><CODE class=literal>G_TYPE_PARAM_UINT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UINT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UINT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-UINT:CAPS></A>
<H3>G_PARAM_SPEC_UINT()</H3><PRE class=programlisting>#define G_PARAM_SPEC_UINT(pspec)           (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UINT, GParamSpecUInt))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecUInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt"><SPAN class=type>GParamSpecUInt</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-UINT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-UINT:CAPS></A>
<H3>G_VALUE_HOLDS_UINT()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_UINT(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UINT))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-UINT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-UINT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-uint></A>
<H3>g_param_spec_uint&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_uint (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> minimum</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> maximum</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> default_value</CODE></EM>,
                   <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecUInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt"><SPAN class=type>GParamSpecUInt</SPAN></A> instance specifying a <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-uint.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-uint.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-uint></A>
<H3>g_value_set_uint&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_uint (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> v_uint</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_uint</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-uint.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_uint</P></TD>
<TD class=parameter_description>
<P>unsigned integer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-uint></A>
<H3>g_value_get_uint&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_value_get_uint (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-uint.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-uint.returns></A>
<H4>Returns</H4>
<P>unsigned integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-LONG:CAPS></A>
<H3>G_IS_PARAM_SPEC_LONG()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_LONG(pspec)        (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_LONG))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-LONG:CAPS"><CODE class=literal>G_TYPE_PARAM_LONG</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-LONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-LONG.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-LONG:CAPS></A>
<H3>G_PARAM_SPEC_LONG()</H3><PRE class=programlisting>#define G_PARAM_SPEC_LONG(pspec)           (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_LONG, GParamSpecLong))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecLong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecLong"><SPAN class=type>GParamSpecLong</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-LONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-LONG:CAPS></A>
<H3>G_VALUE_HOLDS_LONG()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_LONG(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_LONG))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS"><CODE class=literal>G_TYPE_LONG</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-LONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-LONG.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-long></A>
<H3>g_param_spec_long&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_long (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A> minimum</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A> maximum</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A> default_value</CODE></EM>,
                   <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecLong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecLong"><SPAN class=type>GParamSpecLong</SPAN></A> instance specifying a <A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS"><CODE class=literal>G_TYPE_LONG</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-long.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-long.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-long></A>
<H3>g_value_set_long&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_long (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A> v_long</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS"><CODE class=literal>G_TYPE_LONG</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_long</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-long.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS"><CODE class=literal>G_TYPE_LONG</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_long</P></TD>
<TD class=parameter_description>
<P>long integer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-long></A>
<H3>g_value_get_long&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=returnvalue>glong</SPAN></A>
g_value_get_long (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS"><CODE class=literal>G_TYPE_LONG</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-long.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_LONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-LONG:CAPS"><CODE class=literal>G_TYPE_LONG</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-long.returns></A>
<H4>Returns</H4>
<P>long integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-ULONG:CAPS></A>
<H3>G_IS_PARAM_SPEC_ULONG()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_ULONG(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_ULONG))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-ULONG:CAPS"><CODE class=literal>G_TYPE_PARAM_ULONG</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-ULONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-ULONG.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-ULONG:CAPS></A>
<H3>G_PARAM_SPEC_ULONG()</H3><PRE class=programlisting>#define G_PARAM_SPEC_ULONG(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_ULONG, GParamSpecULong))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecULong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecULong"><SPAN class=type>GParamSpecULong</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-ULONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-ULONG:CAPS></A>
<H3>G_VALUE_HOLDS_ULONG()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_ULONG(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_ULONG))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS"><CODE class=literal>G_TYPE_ULONG</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-ULONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-ULONG.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-ulong></A>
<H3>g_param_spec_ulong&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_ulong (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> minimum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> maximum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> default_value</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecULong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecULong"><SPAN class=type>GParamSpecULong</SPAN></A> instance specifying a <A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS"><CODE class=literal>G_TYPE_ULONG</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-ulong.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-ulong.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-ulong></A>
<H3>g_value_set_ulong&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_ulong (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> v_ulong</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS"><CODE class=literal>G_TYPE_ULONG</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_ulong</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-ulong.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS"><CODE class=literal>G_TYPE_ULONG</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_ulong</P></TD>
<TD class=parameter_description>
<P>unsigned long integer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-ulong></A>
<H3>g_value_get_ulong&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_value_get_ulong (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS"><CODE class=literal>G_TYPE_ULONG</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-ulong.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_ULONG class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ULONG:CAPS"><CODE class=literal>G_TYPE_ULONG</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-ulong.returns></A>
<H4>Returns</H4>
<P>unsigned long integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-INT64:CAPS></A>
<H3>G_IS_PARAM_SPEC_INT64()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_INT64(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_INT64))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-INT64:CAPS"><CODE class=literal>G_TYPE_PARAM_INT64</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-INT64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-INT64.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-INT64:CAPS></A>
<H3>G_PARAM_SPEC_INT64()</H3><PRE class=programlisting>#define G_PARAM_SPEC_INT64(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_INT64, GParamSpecInt64))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt64"><SPAN class=type>GParamSpecInt64</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-INT64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-INT64:CAPS></A>
<H3>G_VALUE_HOLDS_INT64()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_INT64(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_INT64))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS"><CODE class=literal>G_TYPE_INT64</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-INT64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-INT64.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-int64></A>
<H3>g_param_spec_int64&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_int64 (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> minimum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> maximum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> default_value</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt64"><SPAN class=type>GParamSpecInt64</SPAN></A> instance specifying a <A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS"><CODE class=literal>G_TYPE_INT64</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-int64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-int64.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-int64></A>
<H3>g_value_set_int64&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_int64 (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> v_int64</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS"><CODE class=literal>G_TYPE_INT64</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_int64</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-int64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS"><CODE class=literal>G_TYPE_INT64</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_int64</P></TD>
<TD class=parameter_description>
<P>64bit integer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-int64></A>
<H3>g_value_get_int64&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A>
g_value_get_int64 (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS"><CODE class=literal>G_TYPE_INT64</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-int64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_INT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-INT64:CAPS"><CODE class=literal>G_TYPE_INT64</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-int64.returns></A>
<H4>Returns</H4>
<P>64bit integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-UINT64:CAPS></A>
<H3>G_IS_PARAM_SPEC_UINT64()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_UINT64(pspec)      (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UINT64))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UINT64:CAPS"><CODE class=literal>G_TYPE_PARAM_UINT64</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UINT64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UINT64.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-UINT64:CAPS></A>
<H3>G_PARAM_SPEC_UINT64()</H3><PRE class=programlisting>#define G_PARAM_SPEC_UINT64(pspec)         (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UINT64, GParamSpecUInt64))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecUInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt64"><SPAN class=type>GParamSpecUInt64</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-UINT64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-UINT64:CAPS></A>
<H3>G_VALUE_HOLDS_UINT64()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_UINT64(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_UINT64))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS"><CODE class=literal>G_TYPE_UINT64</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-UINT64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-UINT64.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-uint64></A>
<H3>g_param_spec_uint64&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_uint64 (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> minimum</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> maximum</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> default_value</CODE></EM>,
                     <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecUInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt64"><SPAN class=type>GParamSpecUInt64</SPAN></A> instance specifying a <A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS"><CODE class=literal>G_TYPE_UINT64</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-uint64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-uint64.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-uint64></A>
<H3>g_value_set_uint64&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_uint64 (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> v_uint64</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS"><CODE class=literal>G_TYPE_UINT64</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_uint64</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-uint64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS"><CODE class=literal>G_TYPE_UINT64</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_uint64</P></TD>
<TD class=parameter_description>
<P>unsigned 64bit integer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-uint64></A>
<H3>g_value_get_uint64&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=returnvalue>guint64</SPAN></A>
g_value_get_uint64 (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS"><CODE class=literal>G_TYPE_UINT64</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-uint64.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_UINT64 class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT64:CAPS"><CODE class=literal>G_TYPE_UINT64</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-uint64.returns></A>
<H4>Returns</H4>
<P>unsigned 64bit integer contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-FLOAT:CAPS></A>
<H3>G_IS_PARAM_SPEC_FLOAT()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_FLOAT(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_FLOAT))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-FLOAT:CAPS"><CODE class=literal>G_TYPE_PARAM_FLOAT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-FLOAT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-FLOAT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-FLOAT:CAPS></A>
<H3>G_PARAM_SPEC_FLOAT()</H3><PRE class=programlisting>#define G_PARAM_SPEC_FLOAT(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_FLOAT, GParamSpecFloat))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecFloat" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFloat"><SPAN class=type>GParamSpecFloat</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-FLOAT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-FLOAT:CAPS></A>
<H3>G_VALUE_HOLDS_FLOAT()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_FLOAT(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_FLOAT))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-FLOAT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-FLOAT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-float></A>
<H3>g_param_spec_float&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_float (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A> minimum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A> maximum</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A> default_value</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecFloat" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFloat"><SPAN class=type>GParamSpecFloat</SPAN></A> instance specifying a <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-float.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-float.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-float></A>
<H3>g_value_set_float&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_float (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A> v_float</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_float</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-float.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_float</P></TD>
<TD class=parameter_description>
<P>float value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-float></A>
<H3>g_value_get_float&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=returnvalue>gfloat</SPAN></A>
g_value_get_float (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-float.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_FLOAT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLOAT:CAPS"><CODE class=literal>G_TYPE_FLOAT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-float.returns></A>
<H4>Returns</H4>
<P>float contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-DOUBLE:CAPS></A>
<H3>G_IS_PARAM_SPEC_DOUBLE()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_DOUBLE(pspec)      (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_DOUBLE))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-DOUBLE:CAPS"><CODE class=literal>G_TYPE_PARAM_DOUBLE</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-DOUBLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-DOUBLE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-DOUBLE:CAPS></A>
<H3>G_PARAM_SPEC_DOUBLE()</H3><PRE class=programlisting>#define G_PARAM_SPEC_DOUBLE(pspec)         (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_DOUBLE, GParamSpecDouble))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecDouble" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecDouble"><SPAN class=type>GParamSpecDouble</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-DOUBLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-DOUBLE:CAPS></A>
<H3>G_VALUE_HOLDS_DOUBLE()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_DOUBLE(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_DOUBLE))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS"><CODE class=literal>G_TYPE_DOUBLE</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-DOUBLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-DOUBLE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-double></A>
<H3>g_param_spec_double&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_double (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> minimum</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> maximum</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> default_value</CODE></EM>,
                     <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecDouble" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecDouble"><SPAN class=type>GParamSpecDouble</SPAN></A> instance specifying a <A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS"><CODE class=literal>G_TYPE_DOUBLE</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-double.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>minimum</P></TD>
<TD class=parameter_description>
<P>minimum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>maximum</P></TD>
<TD class=parameter_description>
<P>maximum value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-double.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-double></A>
<H3>g_value_set_double&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_double (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> v_double</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS"><CODE class=literal>G_TYPE_DOUBLE</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_double</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-double.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS"><CODE class=literal>G_TYPE_DOUBLE</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_double</P></TD>
<TD class=parameter_description>
<P>double value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-double></A>
<H3>g_value_get_double&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=returnvalue>gdouble</SPAN></A>
g_value_get_double (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS"><CODE class=literal>G_TYPE_DOUBLE</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-double.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_DOUBLE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-DOUBLE:CAPS"><CODE class=literal>G_TYPE_DOUBLE</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-double.returns></A>
<H4>Returns</H4>
<P>double contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-ENUM:CAPS></A>
<H3>G_IS_PARAM_SPEC_ENUM()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_ENUM(pspec)        (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_ENUM))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-ENUM:CAPS"><CODE class=literal>G_TYPE_PARAM_ENUM</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-ENUM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-ENUM.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-ENUM:CAPS></A>
<H3>G_PARAM_SPEC_ENUM()</H3><PRE class=programlisting>#define G_PARAM_SPEC_ENUM(pspec)           (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_ENUM, GParamSpecEnum))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecEnum" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecEnum"><SPAN class=type>GParamSpecEnum</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-ENUM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-ENUM:CAPS></A>
<H3>G_VALUE_HOLDS_ENUM()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_ENUM(value)      (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_ENUM))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values derived from type <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-ENUM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-ENUM.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-enum></A>
<H3>g_param_spec_enum&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_enum (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                   <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> enum_type</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> default_value</CODE></EM>,
                   <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecEnum" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecEnum"><SPAN class=type>GParamSpecEnum</SPAN></A> instance specifying a <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-enum.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>enum_type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> derived from <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-enum.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-enum></A>
<H3>g_value_set_enum&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_enum (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> v_enum</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_enum</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-enum.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_enum</P></TD>
<TD class=parameter_description>
<P>enum value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-enum></A>
<H3>g_value_get_enum&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_value_get_enum (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-enum.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_ENUM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-ENUM:CAPS"><CODE class=literal>G_TYPE_ENUM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-enum.returns></A>
<H4>Returns</H4>
<P>enum contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-FLAGS:CAPS></A>
<H3>G_IS_PARAM_SPEC_FLAGS()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_FLAGS(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_FLAGS))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-FLAGS:CAPS"><CODE class=literal>G_TYPE_PARAM_FLAGS</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-FLAGS.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-FLAGS:CAPS></A>
<H3>G_PARAM_SPEC_FLAGS()</H3><PRE class=programlisting>#define G_PARAM_SPEC_FLAGS(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_FLAGS, GParamSpecFlags))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFlags"><SPAN class=type>GParamSpecFlags</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-FLAGS:CAPS></A>
<H3>G_VALUE_HOLDS_FLAGS()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_FLAGS(value)     (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_FLAGS))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values derived from type <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-FLAGS.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-flags></A>
<H3>g_param_spec_flags&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_flags (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> flags_type</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> default_value</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFlags"><SPAN class=type>GParamSpecFlags</SPAN></A> instance specifying a <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-flags.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags_type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> derived from <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-flags.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-flags></A>
<H3>g_value_set_flags&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_flags (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> v_flags</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_flags</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-flags.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_flags</P></TD>
<TD class=parameter_description>
<P>flags value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-flags></A>
<H3>g_value_get_flags&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_value_get_flags (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-flags.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FLAGS:CAPS"><CODE class=literal>G_TYPE_FLAGS</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-flags.returns></A>
<H4>Returns</H4>
<P>flags contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-STRING:CAPS></A>
<H3>G_IS_PARAM_SPEC_STRING()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_STRING(pspec)      (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_STRING))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-STRING:CAPS"><CODE class=literal>G_TYPE_PARAM_STRING</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-STRING.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-STRING.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-STRING:CAPS></A>
<H3>G_PARAM_SPEC_STRING()</H3><PRE class=programlisting>#define G_PARAM_SPEC_STRING(pspec)         (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_STRING, GParamSpecString))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecString" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecString"><SPAN class=type>GParamSpecString</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-STRING.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-STRING:CAPS></A>
<H3>G_VALUE_HOLDS_STRING()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_STRING(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_STRING))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-STRING.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-STRING.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-string></A>
<H3>g_param_spec_string&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_string (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *default_value</CODE></EM>,
                     <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecString" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecString"><SPAN class=type>GParamSpecString</SPAN></A> instance.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-string.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-string.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-string></A>
<H3>g_value_set_string&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_string (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *v_string</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_string</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-string.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_string</P></TD>
<TD class=parameter_description>
<P>caller-owned string to be duplicated for the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-static-string></A>
<H3>g_value_set_static_string&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_static_string (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *v_string</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_string</CODE></EM> . The string is assumed to be static, and is thus not duplicated when setting the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-set-static-string.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_string</P></TD>
<TD class=parameter_description>
<P>static string to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-take-string></A>
<H3>g_value_take_string&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_take_string (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *v_string</CODE></EM>);</PRE>
<P>Sets the contents of a <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_string</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-take-string.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_string</P></TD>
<TD class=parameter_description>
<P>string to take ownership of. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-string-take-ownership></A>
<H3>g_value_set_string_take_ownership&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_string_take_ownership (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *v_string</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_set_string_take_ownership</CODE> has been deprecated since version 2.4 and should not be used in newly-written code.</P>
<P>Use <A title=g_value_take_string&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-string"><CODE class=function>g_value_take_string()</CODE></A> instead.</P></DIV>
<P>This is an internal function introduced mainly for C marshallers.</P>
<DIV class=refsect3><A name=g-value-set-string-take-ownership.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_string</P></TD>
<TD class=parameter_description>
<P>duplicated unowned string to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-string></A>
<H3>g_value_get_string&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_value_get_string (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-string.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-string.returns></A>
<H4>Returns</H4>
<P>string content of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-dup-string></A>
<H3>g_value_dup_string&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_value_dup_string (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get a copy the contents of a <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-dup-string.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><CODE class=literal>G_TYPE_STRING</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-dup-string.returns></A>
<H4>Returns</H4>
<P>a newly allocated copy of the string content of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-PARAM:CAPS></A>
<H3>G_IS_PARAM_SPEC_PARAM()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_PARAM(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_PARAM))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM_PARAM</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-PARAM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-PARAM.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-PARAM:CAPS></A>
<H3>G_PARAM_SPEC_PARAM()</H3><PRE class=programlisting>#define G_PARAM_SPEC_PARAM(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_PARAM, GParamSpecParam))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecParam" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecParam"><SPAN class=type>GParamSpecParam</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-PARAM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-PARAM:CAPS></A>
<H3>G_VALUE_HOLDS_PARAM()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_PARAM(value)&nbsp;(G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_PARAM))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values derived from type <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-PARAM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-PARAM.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-param></A>
<H3>g_param_spec_param&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_param (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> param_type</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecParam" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecParam"><SPAN class=type>GParamSpecParam</SPAN></A> instance specifying a <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-param.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> derived from <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-param.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-param></A>
<H3>g_value_set_param&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_param (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *param</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>param</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-param.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-take-param></A>
<H3>g_value_take_param&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_take_param (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *param</CODE></EM>);</PRE>
<P>Sets the contents of a <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>param</CODE></EM> and takes over the ownership of the callers reference to <EM class=parameter><CODE>param</CODE></EM> ; the caller doesn't have to unref it any more.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-take-param.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-param-take-ownership></A>
<H3>g_value_set_param_take_ownership&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_param_take_ownership (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                                  <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *param</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_set_param_take_ownership</CODE> has been deprecated since version 2.4 and should not be used in newly-written code.</P>
<P>Use <A title=g_value_take_param&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-param"><CODE class=function>g_value_take_param()</CODE></A> instead.</P></DIV>
<P>This is an internal function introduced mainly for C marshallers.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-set-param-take-ownership.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-param></A>
<H3>g_value_get_param&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_value_get_param (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-param.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-param.returns></A>
<H4>Returns</H4>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> content of <EM class=parameter><CODE>value</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-dup-param></A>
<H3>g_value_dup_param&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_value_dup_param (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, increasing its reference count.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-dup-param.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-dup-param.returns></A>
<H4>Returns</H4>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> content of <EM class=parameter><CODE>value</CODE></EM> , should be unreferenced when no longer needed.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-BOXED:CAPS></A>
<H3>G_IS_PARAM_SPEC_BOXED()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_BOXED(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_BOXED))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-BOXED:CAPS"><CODE class=literal>G_TYPE_PARAM_BOXED</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-BOXED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-BOXED.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-BOXED:CAPS></A>
<H3>G_PARAM_SPEC_BOXED()</H3><PRE class=programlisting>#define G_PARAM_SPEC_BOXED(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_BOXED, GParamSpecBoxed))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecBoxed" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoxed"><SPAN class=type>GParamSpecBoxed</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-BOXED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-BOXED:CAPS></A>
<H3>G_VALUE_HOLDS_BOXED()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_BOXED(value) (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_BOXED))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values derived from type <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-BOXED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-BOXED.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-boxed></A>
<H3>g_param_spec_boxed&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_boxed (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> boxed_type</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecBoxed" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoxed"><SPAN class=type>GParamSpecBoxed</SPAN></A> instance specifying a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-boxed.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>boxed_type</P></TD>
<TD class=parameter_description>
<P><A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type of this property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-boxed.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-boxed></A>
<H3>g_value_set_boxed&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_boxed (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v_boxed</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_boxed</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-boxed.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_boxed</P></TD>
<TD class=parameter_description>
<P>boxed value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-static-boxed></A>
<H3>g_value_set_static_boxed&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_static_boxed (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v_boxed</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_boxed</CODE></EM> . The boxed value is assumed to be static, and is thus not duplicated when setting the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-set-static-boxed.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_boxed</P></TD>
<TD class=parameter_description>
<P>static boxed value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-take-boxed></A>
<H3>g_value_take_boxed&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_take_boxed (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v_boxed</CODE></EM>);</PRE>
<P>Sets the contents of a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_boxed</CODE></EM> and takes over the ownership of the callers reference to <EM class=parameter><CODE>v_boxed</CODE></EM> ; the caller doesn't have to unref it any more.</P>
<DIV class=refsect3><A name=g-value-take-boxed.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_boxed</P></TD>
<TD class=parameter_description>
<P>duplicated unowned boxed value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-boxed-take-ownership></A>
<H3>g_value_set_boxed_take_ownership&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_boxed_take_ownership (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v_boxed</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_set_boxed_take_ownership</CODE> has been deprecated since version 2.4 and should not be used in newly-written code.</P>
<P>Use <A title=g_value_take_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-boxed"><CODE class=function>g_value_take_boxed()</CODE></A> instead.</P></DIV>
<P>This is an internal function introduced mainly for C marshallers.</P>
<DIV class=refsect3><A name=g-value-set-boxed-take-ownership.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_boxed</P></TD>
<TD class=parameter_description>
<P>duplicated unowned boxed value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-boxed></A>
<H3>g_value_get_boxed&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_value_get_boxed (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-boxed.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-boxed.returns></A>
<H4>Returns</H4>
<P>boxed contents of <EM class=parameter><CODE>value</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-dup-boxed></A>
<H3>g_value_dup_boxed&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_value_dup_boxed (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>. Upon getting, the boxed value is duplicated and needs to be later freed with <A title=g_boxed_free&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Boxed-Types.html#g-boxed-free"><CODE class=function>g_boxed_free()</CODE></A>, e.g. like: g_boxed_free (G_VALUE_TYPE (<EM class=parameter><CODE>value</CODE></EM> ), return_value);</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-dup-boxed.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-dup-boxed.returns></A>
<H4>Returns</H4>
<P>boxed contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-POINTER:CAPS></A>
<H3>G_IS_PARAM_SPEC_POINTER()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_POINTER(pspec)     (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_POINTER))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-POINTER:CAPS"><CODE class=literal>G_TYPE_PARAM_POINTER</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-POINTER.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-POINTER.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-POINTER:CAPS></A>
<H3>G_PARAM_SPEC_POINTER()</H3><PRE class=programlisting>#define G_PARAM_SPEC_POINTER(pspec)        (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_POINTER, GParamSpecPointer))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecPointer" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecPointer"><SPAN class=type>GParamSpecPointer</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-POINTER.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-POINTER:CAPS></A>
<H3>G_VALUE_HOLDS_POINTER()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_POINTER(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_POINTER))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-POINTER:CAPS"><CODE class=literal>G_TYPE_POINTER</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-POINTER.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-POINTER.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pointer></A>
<H3>g_param_spec_pointer&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_pointer (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                      <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecPointer" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecPointer"><SPAN class=type>GParamSpecPointer</SPAN></A> instance specifying a pointer property. Where possible, it is better to use <A title=g_param_spec_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-object"><CODE class=function>g_param_spec_object()</CODE></A> or <A title=g_param_spec_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-boxed"><CODE class=function>g_param_spec_boxed()</CODE></A> to expose memory management information.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-pointer.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-pointer></A>
<H3>g_value_set_pointer&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_pointer (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> v_pointer</CODE></EM>);</PRE>
<P>Set the contents of a pointer <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_pointer</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-POINTER:CAPS"><CODE class=literal>G_TYPE_POINTER</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_pointer</P></TD>
<TD class=parameter_description>
<P>pointer value to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-pointer></A>
<H3>g_value_get_pointer&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_value_get_pointer (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a pointer <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_POINTER class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-POINTER:CAPS"><CODE class=literal>G_TYPE_POINTER</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-pointer.returns></A>
<H4>Returns</H4>
<P>pointer contents of <EM class=parameter><CODE>value</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-OBJECT:CAPS></A>
<H3>G_IS_PARAM_SPEC_OBJECT()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_OBJECT(pspec)      (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_OBJECT))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-OBJECT:CAPS"><CODE class=literal>G_TYPE_PARAM_OBJECT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-OBJECT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-OBJECT:CAPS></A>
<H3>G_PARAM_SPEC_OBJECT()</H3><PRE class=programlisting>#define G_PARAM_SPEC_OBJECT(pspec)         (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_OBJECT, GParamSpecObject))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecObject"><SPAN class=type>GParamSpecObject</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-OBJECT:CAPS></A>
<H3>G_VALUE_HOLDS_OBJECT()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_OBJECT(value) (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_OBJECT))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values derived from type <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-OBJECT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-object></A>
<H3>g_param_spec_object&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_object (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                     <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
                     <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecBoxed" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoxed"><SPAN class=type>GParamSpecBoxed</SPAN></A> instance specifying a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P><A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived type of this property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-object.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-object></A>
<H3>g_value_set_object&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_object (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> v_object</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_object</CODE></EM> .</P>
<P>g_value_set_object() increases the reference count of <EM class=parameter><CODE>v_object</CODE></EM> (the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> holds a reference to <EM class=parameter><CODE>v_object</CODE></EM> ). If you do not wish to increase the reference count of the object (i.e. you wish to pass your current reference to the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> because you no longer need it), use <A title=g_value_take_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-object"><CODE class=function>g_value_take_object()</CODE></A> instead.</P>
<P>It is important that your <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> holds a reference to <EM class=parameter><CODE>v_object</CODE></EM> (either its own, or one it has taken) to ensure that the object won't be destroyed while the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> still exists).</P>
<DIV class=refsect3><A name=g-value-set-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_object</P></TD>
<TD class=parameter_description>
<P>object value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-take-object></A>
<H3>g_value_take_object&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_take_object (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> v_object</CODE></EM>);</PRE>
<P>Sets the contents of a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_object</CODE></EM> and takes over the ownership of the callers reference to <EM class=parameter><CODE>v_object</CODE></EM> ; the caller doesn't have to unref it any more (i.e. the reference count of the object is not increased).</P>
<P>If you want the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to hold its own reference to <EM class=parameter><CODE>v_object</CODE></EM> , use <A title=g_value_set_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-object"><CODE class=function>g_value_set_object()</CODE></A> instead.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-take-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_object</P></TD>
<TD class=parameter_description>
<P>object value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-object-take-ownership></A>
<H3>g_value_set_object_take_ownership&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_object_take_ownership (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> v_object</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_set_object_take_ownership</CODE> has been deprecated since version 2.4 and should not be used in newly-written code.</P>
<P>Use <A title=g_value_take_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-take-object"><CODE class=function>g_value_take_object()</CODE></A> instead.</P></DIV>
<P>This is an internal function introduced mainly for C marshallers.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-value-set-object-take-ownership.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_object</P></TD>
<TD class=parameter_description>
<P>object value to be set. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-object></A>
<H3>g_value_get_object&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_value_get_object (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-object.returns></A>
<H4>Returns</H4>
<P>object contents of <EM class=parameter><CODE>value</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-dup-object></A>
<H3>g_value_dup_object&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_value_dup_object (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> derived <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, increasing its reference count. If the contents of the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> are <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, then <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> will be returned.</P>
<DIV class=refsect3><A name=g-value-dup-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> whose type is derived from <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-dup-object.returns></A>
<H4>Returns</H4>
<P>object content of <EM class=parameter><CODE>value</CODE></EM> , should be unreferenced when no longer needed. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-UNICHAR:CAPS></A>
<H3>G_IS_PARAM_SPEC_UNICHAR()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_UNICHAR(pspec)     (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_UNICHAR))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_UNICHAR class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-UNICHAR:CAPS"><CODE class=literal>G_TYPE_PARAM_UNICHAR</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UNICHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-UNICHAR.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-UNICHAR:CAPS></A>
<H3>G_PARAM_SPEC_UNICHAR()</H3><PRE class=programlisting>#define G_PARAM_SPEC_UNICHAR(pspec)        (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_UNICHAR, GParamSpecUnichar))
</PRE>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecUnichar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUnichar"><SPAN class=type>GParamSpecUnichar</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-UNICHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-unichar></A>
<H3>g_param_spec_unichar&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_unichar (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Unicode-Manipulation.html#gunichar"><SPAN class=type>gunichar</SPAN></A> default_value</CODE></EM>,
                      <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecUnichar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUnichar"><SPAN class=type>GParamSpecUnichar</SPAN></A> instance specifying a <A title=G_TYPE_UINT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-UINT:CAPS"><CODE class=literal>G_TYPE_UINT</CODE></A> property. <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structures for this property can be accessed with <A title=g_value_set_uint&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-uint"><CODE class=function>g_value_set_uint()</CODE></A> and <A title=g_value_get_uint&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-uint"><CODE class=function>g_value_get_uint()</CODE></A>.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-unichar.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>default value for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-unichar.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-VALUE-ARRAY:CAPS></A>
<H3>G_IS_PARAM_SPEC_VALUE_ARRAY()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_VALUE_ARRAY(pspec) (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_VALUE_ARRAY))
</PRE>
<DIV class=warning>
<P><CODE class=literal>G_IS_PARAM_SPEC_VALUE_ARRAY</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> instead of <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A></P></DIV>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_VALUE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-VALUE-ARRAY:CAPS"><CODE class=literal>G_TYPE_PARAM_VALUE_ARRAY</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-VALUE-ARRAY.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-VALUE-ARRAY.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-VALUE-ARRAY:CAPS></A>
<H3>G_PARAM_SPEC_VALUE_ARRAY()</H3><PRE class=programlisting>#define G_PARAM_SPEC_VALUE_ARRAY(pspec)    (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_VALUE_ARRAY, GParamSpecValueArray))
</PRE>
<DIV class=warning>
<P><CODE class=literal>G_PARAM_SPEC_VALUE_ARRAY</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> instead of <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A></P></DIV>
<P>Cast a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance into a <A title="struct GParamSpecValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecValueArray"><SPAN class=type>GParamSpecValueArray</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-VALUE-ARRAY.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-value-array></A>
<H3>g_param_spec_value_array&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_value_array (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                          <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                          <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                          <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *element_spec</CODE></EM>,
                          <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecValueArray"><SPAN class=type>GParamSpecValueArray</SPAN></A> instance specifying a <A title=G_TYPE_VALUE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-VALUE-ARRAY:CAPS"><CODE class=literal>G_TYPE_VALUE_ARRAY</CODE></A> property. <A title=G_TYPE_VALUE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-VALUE-ARRAY:CAPS"><CODE class=literal>G_TYPE_VALUE_ARRAY</CODE></A> is a <A title=G_TYPE_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-BOXED:CAPS"><CODE class=literal>G_TYPE_BOXED</CODE></A> type, as such, <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structures for this property can be accessed with <A title=g_value_set_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-boxed"><CODE class=function>g_value_set_boxed()</CODE></A> and <A title=g_value_get_boxed&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-get-boxed"><CODE class=function>g_value_get_boxed()</CODE></A>.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-value-array.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>element_spec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> describing the elements contained in arrays of this property, may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-value-array.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-OVERRIDE:CAPS></A>
<H3>G_IS_PARAM_SPEC_OVERRIDE()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_OVERRIDE(pspec)    (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_OVERRIDE))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_OVERRIDE class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-OVERRIDE:CAPS"><CODE class=literal>G_TYPE_PARAM_OVERRIDE</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-OVERRIDE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-OVERRIDE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-OVERRIDE:CAPS></A>
<H3>G_PARAM_SPEC_OVERRIDE()</H3><PRE class=programlisting>#define G_PARAM_SPEC_OVERRIDE(pspec)       (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_OVERRIDE, GParamSpecOverride))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> into a <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-OVERRIDE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-override></A>
<H3>g_param_spec_override&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_override (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                       <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *overridden</CODE></EM>);</PRE>
<P>Creates a new property of type <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A>. This is used to direct operations to another paramspec, and will not be directly useful unless you are implementing a new base type similar to GObject.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-override.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the name of the property.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>overridden</P></TD>
<TD class=parameter_description>
<P>The property that is being overridden</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-override.returns></A>
<H4>Returns</H4>
<P>the newly created <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-GTYPE:CAPS></A>
<H3>G_IS_PARAM_SPEC_GTYPE()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_GTYPE(pspec)       (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_GTYPE))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-GTYPE:CAPS"><CODE class=literal>G_TYPE_PARAM_GTYPE</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-GTYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-GTYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success. </P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-GTYPE:CAPS></A>
<H3>G_PARAM_SPEC_GTYPE()</H3><PRE class=programlisting>#define G_PARAM_SPEC_GTYPE(pspec)          (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_GTYPE, GParamSpecGType))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> into a <A title="struct GParamSpecGType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecGType"><SPAN class=type>GParamSpecGType</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-GTYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-GTYPE:CAPS></A>
<H3>G_VALUE_HOLDS_GTYPE()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_GTYPE(value)	 (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_GTYPE))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS"><CODE class=literal>G_TYPE_GTYPE</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-GTYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-GTYPE.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-12.html#api-index-2.12">2.12</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-gtype></A>
<H3>g_param_spec_gtype&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_gtype (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                    <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                    <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> is_a_type</CODE></EM>,
                    <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecGType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecGType"><SPAN class=type>GParamSpecGType</SPAN></A> instance specifying a <A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS"><CODE class=literal>G_TYPE_GTYPE</CODE></A> property.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-gtype.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>is_a_type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> whose subtypes are allowed as values of the property (use <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><CODE class=literal>G_TYPE_NONE</CODE></A> for any type)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-gtype.returns></A>
<H4>Returns</H4>
<P>a newly created parameter specification. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-gtype></A>
<H3>g_value_get_gtype&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_value_get_gtype (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a <A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS"><CODE class=literal>G_TYPE_GTYPE</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-gtype.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS"><CODE class=literal>G_TYPE_GTYPE</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-gtype.returns></A>
<H4>Returns</H4>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> stored in <EM class=parameter><CODE>value</CODE></EM> </P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-12.html#api-index-2.12">2.12</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-gtype></A>
<H3>g_value_set_gtype&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_gtype (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                   <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> v_gtype</CODE></EM>);</PRE>
<P>Set the contents of a <A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS"><CODE class=literal>G_TYPE_GTYPE</CODE></A> <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>v_gtype</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-set-gtype.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_GTYPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-GTYPE:CAPS"><CODE class=literal>G_TYPE_GTYPE</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v_gtype</P></TD>
<TD class=parameter_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> to be set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-12.html#api-index-2.12">2.12</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-VARIANT:CAPS></A>
<H3>G_IS_PARAM_SPEC_VARIANT()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_VARIANT(pspec)      (G_TYPE_CHECK_INSTANCE_TYPE ((pspec), G_TYPE_PARAM_VARIANT))
</PRE>
<P>Checks whether the given <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is of type <A title=G_TYPE_PARAM_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#G-TYPE-PARAM-VARIANT:CAPS"><CODE class=literal>G_TYPE_PARAM_VARIANT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-VARIANT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-VARIANT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-VARIANT:CAPS></A>
<H3>G_PARAM_SPEC_VARIANT()</H3><PRE class=programlisting>#define G_PARAM_SPEC_VARIANT(pspec)         (G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM_VARIANT, GParamSpecVariant))
</PRE>
<P>Casts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> into a <A title="struct GParamSpecVariant" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecVariant"><SPAN class=type>GParamSpecVariant</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-VARIANT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-HOLDS-VARIANT:CAPS></A>
<H3>G_VALUE_HOLDS_VARIANT()</H3><PRE class=programlisting>#define G_VALUE_HOLDS_VARIANT(value)     (G_TYPE_CHECK_VALUE_TYPE ((value), G_TYPE_VARIANT))
</PRE>
<P>Checks whether the given <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> can hold values of type <A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS"><CODE class=literal>G_TYPE_VARIANT</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-HOLDS-VARIANT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> structure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-VALUE-HOLDS-VARIANT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-variant></A>
<H3>g_param_spec_variant&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_variant (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *default_value</CODE></EM>,
                      <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpecVariant" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecVariant"><SPAN class=type>GParamSpecVariant</SPAN></A> instance specifying a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> property.</P>
<P>If <EM class=parameter><CODE>default_value</CODE></EM> is floating, it is consumed.</P>
<P>See <A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal"><CODE class=function>g_param_spec_internal()</CODE></A> for details on property names.</P>
<DIV class=refsect3><A name=g-param-spec-variant.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>canonical name of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>nick name for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>description of the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>default_value</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> of type <EM class=parameter><CODE>type</CODE></EM> to use as the default value, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags for the property specified</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-variant.returns></A>
<H4>Returns</H4>
<P>the newly created <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-get-variant></A>
<H3>g_value_get_variant&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_value_get_variant (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a variant <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<DIV class=refsect3><A name=g-value-get-variant.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS"><CODE class=literal>G_TYPE_VARIANT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-get-variant.returns></A>
<H4>Returns</H4>
<P>variant contents of <EM class=parameter><CODE>value</CODE></EM> </P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-dup-variant></A>
<H3>g_value_dup_variant&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_value_dup_variant (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Get the contents of a variant <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, increasing its refcount.</P>
<DIV class=refsect3><A name=g-value-dup-variant.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS"><CODE class=literal>G_TYPE_VARIANT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-dup-variant.returns></A>
<H4>Returns</H4>
<P>variant contents of <EM class=parameter><CODE>value</CODE></EM> , should be unrefed using <A href="https://developer.gnome.org/gobject/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A> when no longer needed</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-set-variant></A>
<H3>g_value_set_variant&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_set_variant (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *variant</CODE></EM>);</PRE>
<P>Set the contents of a variant <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>variant</CODE></EM> . If the variant is floating, it is consumed.</P>
<DIV class=refsect3><A name=g-value-set-variant.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS"><CODE class=literal>G_TYPE_VARIANT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>variant</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-value-take-variant></A>
<H3>g_value_take_variant&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_take_variant (<EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *variant</CODE></EM>);</PRE>
<P>Set the contents of a variant <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to <EM class=parameter><CODE>variant</CODE></EM> , and takes over the ownership of the caller's reference to <EM class=parameter><CODE>variant</CODE></EM> ; the caller doesn't have to unref it any more (i.e. the reference count of the variant is not increased).</P>
<P>If <EM class=parameter><CODE>variant</CODE></EM> was floating then its floating reference is converted to a hard reference.</P>
<P>If you want the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to hold its own reference to <EM class=parameter><CODE>variant</CODE></EM> , use <A title=g_value_set_variant&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-value-set-variant"><CODE class=function>g_value_set_variant()</CODE></A> instead.</P>
<P>This is an internal function introduced mainly for C marshallers.</P>
<DIV class=refsect3><A name=g-value-take-variant.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a valid <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of type <A title=G_TYPE_VARIANT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-VARIANT:CAPS"><CODE class=literal>G_TYPE_VARIANT</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>variant</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=G-TYPE-PARAM-BOOLEAN:CAPS></A>
<H3>G_TYPE_PARAM_BOOLEAN</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_BOOLEAN		   (g_param_spec_types[2])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecBoolean" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoolean"><SPAN class=type>GParamSpecBoolean</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecBoolean></A>
<H3>struct GParamSpecBoolean</H3><PRE class=programlisting>struct GParamSpecBoolean {
  GParamSpec    parent_instance;
  
  gboolean      default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for boolean properties.</P>
<DIV class=refsect3><A name=GParamSpecBoolean.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecBoolean.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-CHAR:CAPS></A>
<H3>G_TYPE_PARAM_CHAR</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_CHAR		   (g_param_spec_types[0])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecChar"><SPAN class=type>GParamSpecChar</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecChar></A>
<H3>struct GParamSpecChar</H3><PRE class=programlisting>struct GParamSpecChar {
  GParamSpec    parent_instance;
  
  gint8         minimum;
  gint8         maximum;
  gint8         default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for character properties.</P>
<DIV class=refsect3><A name=GParamSpecChar.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecChar.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecChar.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint8"><SPAN class=type>gint8</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecChar.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-UCHAR:CAPS></A>
<H3>G_TYPE_PARAM_UCHAR</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_UCHAR		   (g_param_spec_types[1])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecUChar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUChar"><SPAN class=type>GParamSpecUChar</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecUChar></A>
<H3>struct GParamSpecUChar</H3><PRE class=programlisting>struct GParamSpecUChar {
  GParamSpec    parent_instance;
  
  guint8        minimum;
  guint8        maximum;
  guint8        default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for unsigned character properties.</P>
<DIV class=refsect3><A name=GParamSpecUChar.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUChar.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUChar.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUChar.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-INT:CAPS></A>
<H3>G_TYPE_PARAM_INT</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_INT		   (g_param_spec_types[3])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt"><SPAN class=type>GParamSpecInt</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecInt></A>
<H3>struct GParamSpecInt</H3><PRE class=programlisting>struct GParamSpecInt {
  GParamSpec    parent_instance;
  
  gint          minimum;
  gint          maximum;
  gint          default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for integer properties.</P>
<DIV class=refsect3><A name=GParamSpecInt.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecInt.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecInt.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecInt.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-UINT:CAPS></A>
<H3>G_TYPE_PARAM_UINT</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_UINT		   (g_param_spec_types[4])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecUInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt"><SPAN class=type>GParamSpecUInt</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecUInt></A>
<H3>struct GParamSpecUInt</H3><PRE class=programlisting>struct GParamSpecUInt {
  GParamSpec    parent_instance;
  
  guint         minimum;
  guint         maximum;
  guint         default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for unsigned integer properties.</P>
<DIV class=refsect3><A name=GParamSpecUInt.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUInt.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUInt.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUInt.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-LONG:CAPS></A>
<H3>G_TYPE_PARAM_LONG</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_LONG		   (g_param_spec_types[5])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecLong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecLong"><SPAN class=type>GParamSpecLong</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecLong></A>
<H3>struct GParamSpecLong</H3><PRE class=programlisting>struct GParamSpecLong {
  GParamSpec    parent_instance;
  
  glong         minimum;
  glong         maximum;
  glong         default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for long integer properties.</P>
<DIV class=refsect3><A name=GParamSpecLong.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecLong.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecLong.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecLong.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-ULONG:CAPS></A>
<H3>G_TYPE_PARAM_ULONG</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_ULONG		   (g_param_spec_types[6])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecULong" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecULong"><SPAN class=type>GParamSpecULong</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecULong></A>
<H3>struct GParamSpecULong</H3><PRE class=programlisting>struct GParamSpecULong {
  GParamSpec    parent_instance;
  
  gulong        minimum;
  gulong        maximum;
  gulong        default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for unsigned long integer properties.</P>
<DIV class=refsect3><A name=GParamSpecULong.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecULong.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecULong.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecULong.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-INT64:CAPS></A>
<H3>G_TYPE_PARAM_INT64</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_INT64		   (g_param_spec_types[7])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt64"><SPAN class=type>GParamSpecInt64</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecInt64></A>
<H3>struct GParamSpecInt64</H3><PRE class=programlisting>struct GParamSpecInt64 {
  GParamSpec    parent_instance;
  
  gint64        minimum;
  gint64        maximum;
  gint64        default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for 64bit integer properties.</P>
<DIV class=refsect3><A name=GParamSpecInt64.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecInt64.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecInt64.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecInt64.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-UINT64:CAPS></A>
<H3>G_TYPE_PARAM_UINT64</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_UINT64		   (g_param_spec_types[8])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecUInt64" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUInt64"><SPAN class=type>GParamSpecUInt64</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecUInt64></A>
<H3>struct GParamSpecUInt64</H3><PRE class=programlisting>struct GParamSpecUInt64 {
  GParamSpec    parent_instance;
  
  guint64       minimum;
  guint64       maximum;
  guint64       default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for unsigned 64bit integer properties.</P>
<DIV class=refsect3><A name=GParamSpecUInt64.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUInt64.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUInt64.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUInt64.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-FLOAT:CAPS></A>
<H3>G_TYPE_PARAM_FLOAT</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_FLOAT		   (g_param_spec_types[12])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecFloat" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFloat"><SPAN class=type>GParamSpecFloat</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecFloat></A>
<H3>struct GParamSpecFloat</H3><PRE class=programlisting>struct GParamSpecFloat {
  GParamSpec    parent_instance;
  
  gfloat        minimum;
  gfloat        maximum;
  gfloat        default_value;
  gfloat        epsilon;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for float properties.</P>
<DIV class=refsect3><A name=GParamSpecFloat.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecFloat.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecFloat.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecFloat.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gfloat"><SPAN class=type>gfloat</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecFloat.epsilon></A>epsilon</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>values closer than <EM class=parameter><CODE>epsilon</CODE></EM> will be considered identical by <A title=g_param_values_cmp&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-values-cmp"><CODE class=function>g_param_values_cmp()</CODE></A>; the default value is 1e-30.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-DOUBLE:CAPS></A>
<H3>G_TYPE_PARAM_DOUBLE</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_DOUBLE		   (g_param_spec_types[13])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecDouble" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecDouble"><SPAN class=type>GParamSpecDouble</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecDouble></A>
<H3>struct GParamSpecDouble</H3><PRE class=programlisting>struct GParamSpecDouble {
  GParamSpec    parent_instance;
  
  gdouble       minimum;
  gdouble       maximum;
  gdouble       default_value;
  gdouble       epsilon;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for double properties.</P>
<DIV class=refsect3><A name=GParamSpecDouble.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecDouble.minimum></A>minimum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>minimum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecDouble.maximum></A>maximum</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>maximum value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecDouble.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecDouble.epsilon></A>epsilon</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>values closer than <EM class=parameter><CODE>epsilon</CODE></EM> will be considered identical by <A title=g_param_values_cmp&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-values-cmp"><CODE class=function>g_param_values_cmp()</CODE></A>; the default value is 1e-90.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-ENUM:CAPS></A>
<H3>G_TYPE_PARAM_ENUM</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_ENUM		   (g_param_spec_types[10])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecEnum" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecEnum"><SPAN class=type>GParamSpecEnum</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecEnum></A>
<H3>struct GParamSpecEnum</H3><PRE class=programlisting>struct GParamSpecEnum {
  GParamSpec    parent_instance;
  
  GEnumClass   *enum_class;
  gint          default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for enum properties.</P>
<DIV class=refsect3><A name=GParamSpecEnum.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecEnum.enum-class></A>enum_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title="struct GEnumClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GEnumClass"><SPAN class=type>GEnumClass</SPAN></A> for the enum</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecEnum.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-FLAGS:CAPS></A>
<H3>G_TYPE_PARAM_FLAGS</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_FLAGS		   (g_param_spec_types[11])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecFlags"><SPAN class=type>GParamSpecFlags</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecFlags></A>
<H3>struct GParamSpecFlags</H3><PRE class=programlisting>struct GParamSpecFlags {
  GParamSpec    parent_instance;
  
  GFlagsClass  *flags_class;
  guint         default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for flags properties.</P>
<DIV class=refsect3><A name=GParamSpecFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecFlags.flags-class></A>flags_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title="struct GFlagsClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Enumeration-and-Flag-Types.html#GFlagsClass"><SPAN class=type>GFlagsClass</SPAN></A> for the flags</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecFlags.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-STRING:CAPS></A>
<H3>G_TYPE_PARAM_STRING</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_STRING		   (g_param_spec_types[14])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecString" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecString"><SPAN class=type>GParamSpecString</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecString></A>
<H3>struct GParamSpecString</H3><PRE class=programlisting>struct GParamSpecString {
  GParamSpec    parent_instance;
  
  gchar        *default_value;
  gchar        *cset_first;
  gchar        *cset_nth;
  gchar         substitutor;
  guint         null_fold_if_empty : 1;
  guint         ensure_non_null : 1;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for string properties.</P>
<DIV class=refsect3><A name=GParamSpecString.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecString.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecString.cset-first></A>cset_first</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a string containing the allowed values for the first byte</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecString.cset-nth></A>cset_nth</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a string containing the allowed values for the subsequent bytes</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecString.substitutor></A>substitutor</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the replacement byte for bytes which don't match <EM class=parameter><CODE>cset_first</CODE></EM> or <EM class=parameter><CODE>cset_nth</CODE></EM> .</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecString.null-fold-if-empty></A>null_fold_if_empty</CODE></EM>&nbsp;:&nbsp;1;</P></TD>
<TD class=struct_member_description>
<P>replace empty string by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecString.ensure-non-null></A>ensure_non_null</CODE></EM>&nbsp;:&nbsp;1;</P></TD>
<TD class=struct_member_description>
<P>replace <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> strings by an empty string</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=gchararray></A>
<H3>gchararray</H3><PRE class=programlisting>typedef gchar* gchararray;
</PRE>
<P>A C representable type name for <A title=G_TYPE_STRING class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-STRING:CAPS"><SPAN class=type>G_TYPE_STRING</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-PARAM:CAPS></A>
<H3>G_TYPE_PARAM_PARAM</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_PARAM		   (g_param_spec_types[15])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecParam" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecParam"><SPAN class=type>GParamSpecParam</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecParam></A>
<H3>struct GParamSpecParam</H3><PRE class=programlisting>struct GParamSpecParam {
  GParamSpec    parent_instance;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> properties.</P>
<DIV class=refsect3><A name=GParamSpecParam.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-BOXED:CAPS></A>
<H3>G_TYPE_PARAM_BOXED</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_BOXED		   (g_param_spec_types[16])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecBoxed" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecBoxed"><SPAN class=type>GParamSpecBoxed</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecBoxed></A>
<H3>struct GParamSpecBoxed</H3><PRE class=programlisting>struct GParamSpecBoxed {
  GParamSpec    parent_instance;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for boxed properties.</P>
<DIV class=refsect3><A name=GParamSpecBoxed.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-POINTER:CAPS></A>
<H3>G_TYPE_PARAM_POINTER</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_POINTER		   (g_param_spec_types[17])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecPointer" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecPointer"><SPAN class=type>GParamSpecPointer</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecPointer></A>
<H3>struct GParamSpecPointer</H3><PRE class=programlisting>struct GParamSpecPointer {
  GParamSpec    parent_instance;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for pointer properties.</P>
<DIV class=refsect3><A name=GParamSpecPointer.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-OBJECT:CAPS></A>
<H3>G_TYPE_PARAM_OBJECT</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_OBJECT		   (g_param_spec_types[19])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecObject"><SPAN class=type>GParamSpecObject</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecObject></A>
<H3>struct GParamSpecObject</H3><PRE class=programlisting>struct GParamSpecObject {
  GParamSpec    parent_instance;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for object properties.</P>
<DIV class=refsect3><A name=GParamSpecObject.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-UNICHAR:CAPS></A>
<H3>G_TYPE_PARAM_UNICHAR</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_UNICHAR		   (g_param_spec_types[9])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecUnichar" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecUnichar"><SPAN class=type>GParamSpecUnichar</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecUnichar></A>
<H3>struct GParamSpecUnichar</H3><PRE class=programlisting>struct GParamSpecUnichar {
  GParamSpec    parent_instance;
  
  gunichar      default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for unichar (unsigned integer) properties.</P>
<DIV class=refsect3><A name=GParamSpecUnichar.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Unicode-Manipulation.html#gunichar"><SPAN class=type>gunichar</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecUnichar.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>default value for the property specified</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-VALUE-ARRAY:CAPS></A>
<H3>G_TYPE_PARAM_VALUE_ARRAY</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_VALUE_ARRAY	   (g_param_spec_types[18])
</PRE>
<DIV class=warning>
<P><CODE class=literal>G_TYPE_PARAM_VALUE_ARRAY</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> instead of <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A></P></DIV>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecValueArray"><SPAN class=type>GParamSpecValueArray</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecValueArray></A>
<H3>struct GParamSpecValueArray</H3><PRE class=programlisting>struct GParamSpecValueArray {
  GParamSpec    parent_instance;
  GParamSpec   *element_spec;
  guint		fixed_n_elements;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> properties.</P>
<DIV class=refsect3><A name=GParamSpecValueArray.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecValueArray.element-spec></A>element_spec</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> describing the elements contained in arrays of this property, may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecValueArray.fixed-n-elements></A>fixed_n_elements</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>if greater than 0, arrays of this property will always have this many elements</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-OVERRIDE:CAPS></A>
<H3>G_TYPE_PARAM_OVERRIDE</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_OVERRIDE		   (g_param_spec_types[20])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecOverride></A>
<H3>struct GParamSpecOverride</H3><PRE class=programlisting>struct GParamSpecOverride {
};
</PRE>
<P>This is a type of <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> type that simply redirects operations to another paramspec. All operations other than getting or setting the value are redirected, including accessing the nick and blurb, validating a value, and so forth. See <A title=g_param_spec_get_redirect_target&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-redirect-target"><CODE class=function>g_param_spec_get_redirect_target()</CODE></A> for retrieving the overidden property. <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A> is used in implementing <A title=g_object_class_override_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-override-property"><CODE class=function>g_object_class_override_property()</CODE></A>, and will not be directly useful unless you are implementing a new base type similar to GObject.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-GTYPE:CAPS></A>
<H3>G_TYPE_PARAM_GTYPE</H3><PRE class=programlisting>#define&nbsp;G_TYPE_PARAM_GTYPE		   (g_param_spec_types[21])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecGType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecGType"><SPAN class=type>GParamSpecGType</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecGType></A>
<H3>struct GParamSpecGType</H3><PRE class=programlisting>struct GParamSpecGType {
  GParamSpec    parent_instance;
  GType         is_a_type;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> properties.</P>
<DIV class=refsect3><A name=GParamSpecGType.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecGType.is-a-type></A>is_a_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> whose subtypes can occur as values</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-PARAM-VARIANT:CAPS></A>
<H3>G_TYPE_PARAM_VARIANT</H3><PRE class=programlisting>#define G_TYPE_PARAM_VARIANT                (g_param_spec_types[22])
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of <A title="struct GParamSpecVariant" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecVariant"><SPAN class=type>GParamSpecVariant</SPAN></A>.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecVariant></A>
<H3>struct GParamSpecVariant</H3><PRE class=programlisting>struct GParamSpecVariant {
  GParamSpec    parent_instance;
  GVariantType *type;
  GVariant     *default_value;
};
</PRE>
<P>A <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> derived structure that contains the meta data for <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> properties.</P>
<DIV class=refsect3><A name=GParamSpecVariant.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecVariant.type></A>type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpecVariant.default-value></A>default_value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Standard-Parameter-and-Value-Types.see-also></A>
<H2>See Also</H2>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>, <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A>.</P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28679">Topic #28679: GParamSpec.. GParamSpec &#38323;?Metadata for parameter specifications.. .. Functions.. #defineG_TYPE_IS_PARAM() .. #defineG_PARAM_SPEC() .. #defineG_IS_PARAM_SPEC() .. #defineG ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>GParamSpec</SPAN></H2>
<P>GParamSpec &#8212; Metadata for parameter specifications</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_PARAM() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-TYPE-IS-PARAM:CAPS">G_TYPE_IS_PARAM</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-SPEC:CAPS">G_PARAM_SPEC</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-IS-PARAM-SPEC:CAPS">G_IS_PARAM_SPEC</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-SPEC-CLASS:CAPS">G_PARAM_SPEC_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_PARAM_SPEC_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-IS-PARAM-SPEC-CLASS:CAPS">G_IS_PARAM_SPEC_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_GET_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-SPEC-GET-CLASS:CAPS">G_PARAM_SPEC_GET_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-SPEC-TYPE:CAPS">G_PARAM_SPEC_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_TYPE_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-SPEC-TYPE-NAME:CAPS">G_PARAM_SPEC_TYPE_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_SPEC_VALUE_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-SPEC-VALUE-TYPE:CAPS">G_PARAM_SPEC_VALUE_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-ref">g_param_spec_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_spec_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-unref">g_param_spec_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_spec_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-sink">g_param_spec_sink</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-ref-sink">g_param_spec_ref_sink</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_get_default_value&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-default-value">g_param_spec_get_default_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_value_set_default&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-set-default">g_param_value_set_default</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_param_value_defaults&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-defaults">g_param_value_defaults</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_param_value_validate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-validate">g_param_value_validate</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_param_value_convert&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-convert">g_param_value_convert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A title=g_param_values_cmp&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-values-cmp">g_param_values_cmp</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_get_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-name">g_param_spec_get_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=returnvalue>GQuark</SPAN></A> </TD>
<TD class=function_name><A title=g_param_spec_get_name_quark&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-name-quark">g_param_spec_get_name_quark</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_get_nick&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-nick">g_param_spec_get_nick</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_get_blurb&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-blurb">g_param_spec_get_blurb</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_param_spec_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-qdata">g_param_spec_get_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_spec_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-set-qdata">g_param_spec_set_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_spec_set_qdata_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-set-qdata-full">g_param_spec_set_qdata_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_param_spec_steal_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-steal-qdata">g_param_spec_steal_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_get_redirect_target&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-redirect-target">g_param_spec_get_redirect_target</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_param_spec_internal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-internal">g_param_spec_internal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A> </TD>
<TD class=function_name><A title=g_param_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-type-register-static">g_param_type_register_static</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=returnvalue>GParamSpecPool</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_pool_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-pool-new">g_param_spec_pool_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_spec_pool_insert&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-pool-insert">g_param_spec_pool_insert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_param_spec_pool_remove&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-pool-remove">g_param_spec_pool_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_pool_lookup&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-pool-lookup">g_param_spec_pool_lookup</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A title=g_param_spec_pool_list&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-pool-list">g_param_spec_pool_list</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_param_spec_pool_list_owned&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-pool-list-owned">g_param_spec_pool_list_owned</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec">GParamSpec</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass">GParamSpecClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags">GParamFlags</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_STATIC_STRINGS class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-STATIC-STRINGS:CAPS">G_PARAM_STATIC_STRINGS</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_MASK class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-MASK:CAPS">G_PARAM_MASK</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_PARAM_USER_SHIFT class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-USER-SHIFT:CAPS">G_PARAM_USER_SHIFT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParamSpecTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecTypeInfo">GParamSpecTypeInfo</A></TD></TR>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool">GParamSpecPool</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.description></A>
<H2>Description</H2>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is an object structure that encapsulates the metadata required to specify parameters, such as e.g. <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> properties.</P>
<DIV class=refsect3><A name=canonical-parameter-names></A>
<H4>Parameter names</H4>
<P>Parameter names need to start with a letter (a-z or A-Z). Subsequent characters can be letters, numbers or a '-'. All other characters are replaced by a '-' during construction. The result of this replacement is called the canonical name of the parameter.</P></DIV></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-TYPE-IS-PARAM:CAPS></A>
<H3>G_TYPE_IS_PARAM()</H3><PRE class=programlisting>#define G_TYPE_IS_PARAM(type)		(G_TYPE_FUNDAMENTAL (type) == G_TYPE_PARAM)
</PRE>
<P>Checks whether <EM class=parameter><CODE>type</CODE></EM> "is a" <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A>.</P>
<DIV class=refsect3><A name=G-TYPE-IS-PARAM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> ID</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC:CAPS></A>
<H3>G_PARAM_SPEC()</H3><PRE class=programlisting>#define G_PARAM_SPEC(pspec)		(G_TYPE_CHECK_INSTANCE_CAST ((pspec), G_TYPE_PARAM, GParamSpec))
</PRE>
<P>Casts a derived <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> object (e.g. of type <A title="struct GParamSpecInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt"><SPAN class=type>GParamSpecInt</SPAN></A>) into a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> object.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC:CAPS></A>
<H3>G_IS_PARAM_SPEC()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC(pspec)		(G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE ((pspec), G_TYPE_PARAM))
</PRE>
<P>Checks whether <EM class=parameter><CODE>pspec</CODE></EM> "is a" valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> structure of type <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> or derived.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-CLASS:CAPS></A>
<H3>G_PARAM_SPEC_CLASS()</H3><PRE class=programlisting>#define G_PARAM_SPEC_CLASS(pclass)      (G_TYPE_CHECK_CLASS_CAST ((pclass), G_TYPE_PARAM, GParamSpecClass))
</PRE>
<P>Casts a derived <A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass"><SPAN class=type>GParamSpecClass</SPAN></A> structure into a <A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass"><SPAN class=type>GParamSpecClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pclass</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass"><SPAN class=type>GParamSpecClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-PARAM-SPEC-CLASS:CAPS></A>
<H3>G_IS_PARAM_SPEC_CLASS()</H3><PRE class=programlisting>#define G_IS_PARAM_SPEC_CLASS(pclass)   (G_TYPE_CHECK_CLASS_TYPE ((pclass), G_TYPE_PARAM))
</PRE>
<P>Checks whether <EM class=parameter><CODE>pclass</CODE></EM> "is a" valid <A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass"><SPAN class=type>GParamSpecClass</SPAN></A> structure of type <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><CODE class=literal>G_TYPE_PARAM</CODE></A> or derived.</P>
<DIV class=refsect3><A name=G-IS-PARAM-SPEC-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass"><SPAN class=type>GParamSpecClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-GET-CLASS:CAPS></A>
<H3>G_PARAM_SPEC_GET_CLASS()</H3><PRE class=programlisting>#define G_PARAM_SPEC_GET_CLASS(pspec)&nbsp;(G_TYPE_INSTANCE_GET_CLASS ((pspec), G_TYPE_PARAM, GParamSpecClass))
</PRE>
<P>Retrieves the <A title="struct GParamSpecClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecClass"><SPAN class=type>GParamSpecClass</SPAN></A> of a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-GET-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-TYPE:CAPS></A>
<H3>G_PARAM_SPEC_TYPE()</H3><PRE class=programlisting>#define G_PARAM_SPEC_TYPE(pspec)&nbsp;(G_TYPE_FROM_INSTANCE (pspec))
</PRE>
<P>Retrieves the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of this <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-TYPE-NAME:CAPS></A>
<H3>G_PARAM_SPEC_TYPE_NAME()</H3><PRE class=programlisting>#define G_PARAM_SPEC_TYPE_NAME(pspec)&nbsp;(g_type_name (G_PARAM_SPEC_TYPE (pspec)))
</PRE>
<P>Retrieves the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> name of this <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-TYPE-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-SPEC-VALUE-TYPE:CAPS></A>
<H3>G_PARAM_SPEC_VALUE_TYPE()</H3><PRE class=programlisting>#define&nbsp;G_PARAM_SPEC_VALUE_TYPE(pspec)&nbsp;(G_PARAM_SPEC (pspec)-&gt;value_type)
</PRE>
<P>Retrieves the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> to initialize a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> for this parameter.</P>
<DIV class=refsect3><A name=G-PARAM-SPEC-VALUE-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-ref></A>
<H3>g_param_spec_ref&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_ref (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Increments the reference count of <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-ref.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> that was passed into this function</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-unref></A>
<H3>g_param_spec_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_spec_unref (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Decrements the reference count of a <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-sink></A>
<H3>g_param_spec_sink&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_spec_sink (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>The initial reference count of a newly created <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> is 1, even though no one has explicitly called <A title=g_param_spec_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-ref"><CODE class=function>g_param_spec_ref()</CODE></A> on it yet. So the initial reference count is flagged as "floating", until someone calls <CODE class=literal>g_param_spec_ref (pspec); g_param_spec_sink (pspec);</CODE> in sequence on it, taking over the initial reference count (thus ending up with a <EM class=parameter><CODE>pspec</CODE></EM> that has a reference count of 1 still, but is not flagged "floating" anymore).</P>
<DIV class=refsect3><A name=g-param-spec-sink.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-ref-sink></A>
<H3>g_param_spec_ref_sink&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_ref_sink (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Convenience function to ref and sink a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-ref-sink.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-ref-sink.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> that was passed into this function</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-default-value></A>
<H3>g_param_spec_get_default_value&nbsp;()</H3><PRE class=programlisting>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;*
g_param_spec_get_default_value (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Gets the default value of <EM class=parameter><CODE>pspec</CODE></EM> as a pointer to a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<P>The <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> will remain value for the life of <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<DIV class=refsect3><A name=g-param-spec-get-default-value.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-default-value.returns></A>
<H4>Returns</H4>
<P>a pointer to a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> which must not be modified</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-value-set-default></A>
<H3>g_param_value_set_default&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_value_set_default (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                           <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Sets <EM class=parameter><CODE>value</CODE></EM> to its default value as specified in <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<DIV class=refsect3><A name=g-param-value-set-default.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of correct type for <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-value-defaults></A>
<H3>g_param_value_defaults&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_param_value_defaults (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                        <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Checks whether <EM class=parameter><CODE>value</CODE></EM> contains the default value as specified in <EM class=parameter><CODE>pspec</CODE></EM> .</P>
<DIV class=refsect3><A name=g-param-value-defaults.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of correct type for <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-value-defaults.returns></A>
<H4>Returns</H4>
<P>whether <EM class=parameter><CODE>value</CODE></EM> contains the canonical default for this <EM class=parameter><CODE>pspec</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-value-validate></A>
<H3>g_param_value_validate&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_param_value_validate (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                        <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Ensures that the contents of <EM class=parameter><CODE>value</CODE></EM> comply with the specifications set out by <EM class=parameter><CODE>pspec</CODE></EM> . For example, a <A title="struct GParamSpecInt" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecInt"><SPAN class=type>GParamSpecInt</SPAN></A> might require that integers stored in <EM class=parameter><CODE>value</CODE></EM> may not be smaller than -42 and not be greater than +42. If <EM class=parameter><CODE>value</CODE></EM> contains an integer outside of this range, it is modified accordingly, so the resulting value will fit into the range -42 .. +42.</P>
<DIV class=refsect3><A name=g-param-value-validate.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of correct type for <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-value-validate.returns></A>
<H4>Returns</H4>
<P>whether modifying <EM class=parameter><CODE>value</CODE></EM> was necessary to ensure validity</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-value-convert></A>
<H3>g_param_value_convert&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_param_value_convert (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                       <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *src_value</CODE></EM>,
                       <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *dest_value</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> strict_validation</CODE></EM>);</PRE>
<P>Transforms <EM class=parameter><CODE>src_value</CODE></EM> into <EM class=parameter><CODE>dest_value</CODE></EM> if possible, and then validates <EM class=parameter><CODE>dest_value</CODE></EM> , in order for it to conform to <EM class=parameter><CODE>pspec</CODE></EM> . If <EM class=parameter><CODE>strict_validation</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> this function will only succeed if the transformed <EM class=parameter><CODE>dest_value</CODE></EM> complied to <EM class=parameter><CODE>pspec</CODE></EM> without modifications.</P>
<P>See also <A title=g_value_type_transformable&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-type-transformable"><CODE class=function>g_value_type_transformable()</CODE></A>, <A title=g_value_transform&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-transform"><CODE class=function>g_value_transform()</CODE></A> and <A title=g_param_value_validate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-validate"><CODE class=function>g_param_value_validate()</CODE></A>.</P>
<DIV class=refsect3><A name=g-param-value-convert.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>src_value</P></TD>
<TD class=parameter_description>
<P>souce <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dest_value</P></TD>
<TD class=parameter_description>
<P>destination <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of correct type for <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>strict_validation</P></TD>
<TD class=parameter_description>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> requires <EM class=parameter><CODE>dest_value</CODE></EM> to conform to <EM class=parameter><CODE>pspec</CODE></EM> without modifications</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-value-convert.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if transformation and validation were successful, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise and <EM class=parameter><CODE>dest_value</CODE></EM> is left untouched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-values-cmp></A>
<H3>g_param_values_cmp&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_param_values_cmp (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                    <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value1</CODE></EM>,
                    <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value2</CODE></EM>);</PRE>
<P>Compares <EM class=parameter><CODE>value1</CODE></EM> with <EM class=parameter><CODE>value2</CODE></EM> according to <EM class=parameter><CODE>pspec</CODE></EM> , and return -1, 0 or +1, if <EM class=parameter><CODE>value1</CODE></EM> is found to be less than, equal to or greater than <EM class=parameter><CODE>value2</CODE></EM> , respectively.</P>
<DIV class=refsect3><A name=g-param-values-cmp.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value1</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of correct type for <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value2</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> of correct type for <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-values-cmp.returns></A>
<H4>Returns</H4>
<P>-1, 0 or +1, for a less than, equal to or greater than result</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-name></A>
<H3>g_param_spec_get_name&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_param_spec_get_name (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Get the name of a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<P>The name is always an "interned" string (as per <A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-intern-string"><CODE class=function>g_intern_string()</CODE></A>). This allows for pointer-value comparisons.</P>
<DIV class=refsect3><A name=g-param-spec-get-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-name.returns></A>
<H4>Returns</H4>
<P>the name of <EM class=parameter><CODE>pspec</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-name-quark></A>
<H3>g_param_spec_get_name_quark&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=returnvalue>GQuark</SPAN></A>
g_param_spec_get_name_quark (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Gets the GQuark for the name.</P>
<DIV class=refsect3><A name=g-param-spec-get-name-quark.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-name-quark.returns></A>
<H4>Returns</H4>
<P>the GQuark for <EM class=parameter><CODE>pspec-&gt;name</CODE></EM> .</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-46.html#api-index-2.46">2.46</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-nick></A>
<H3>g_param_spec_get_nick&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_param_spec_get_nick (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Get the nickname of a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<DIV class=refsect3><A name=g-param-spec-get-nick.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-nick.returns></A>
<H4>Returns</H4>
<P>the nickname of <EM class=parameter><CODE>pspec</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-blurb></A>
<H3>g_param_spec_get_blurb&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_param_spec_get_blurb (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Get the short description of a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<DIV class=refsect3><A name=g-param-spec-get-blurb.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-blurb.returns></A>
<H4>Returns</H4>
<P>the short description of <EM class=parameter><CODE>pspec</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-qdata></A>
<H3>g_param_spec_get_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_param_spec_get_qdata (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>Gets back user data pointers stored via <A title=g_param_spec_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-set-qdata"><CODE class=function>g_param_spec_set_qdata()</CODE></A>.</P>
<DIV class=refsect3><A name=g-param-spec-get-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-qdata.returns></A>
<H4>Returns</H4>
<P>the user data pointer set, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-set-qdata></A>
<H3>g_param_spec_set_qdata&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_spec_set_qdata (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Sets an opaque, named pointer on a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>. The name is specified through a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> (retrieved e.g. via <A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-quark-from-static-string"><CODE class=function>g_quark_from_static_string()</CODE></A>), and the pointer can be gotten back from the <EM class=parameter><CODE>pspec</CODE></EM> with <A title=g_param_spec_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-qdata"><CODE class=function>g_param_spec_get_qdata()</CODE></A>. Setting a previously set user data pointer, overrides (frees) the old pointer set, using <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> as pointer essentially removes the data stored.</P>
<DIV class=refsect3><A name=g-param-spec-set-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to set store a user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>an opaque user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-set-qdata-full></A>
<H3>g_param_spec_set_qdata_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_spec_set_qdata_full (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>);</PRE>
<P>This function works like <A title=g_param_spec_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-set-qdata"><CODE class=function>g_param_spec_set_qdata()</CODE></A>, but in addition, a <CODE class=literal>void (*destroy) (gpointer)</CODE> function may be specified which is called with <EM class=parameter><CODE>data</CODE></EM> as argument when the <EM class=parameter><CODE>pspec</CODE></EM> is finalized, or the data is being overwritten by a call to <A title=g_param_spec_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-set-qdata"><CODE class=function>g_param_spec_set_qdata()</CODE></A> with the same <EM class=parameter><CODE>quark</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-set-qdata-full.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to set store a user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>an opaque user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>function to invoke with <EM class=parameter><CODE>data</CODE></EM> as argument, when <EM class=parameter><CODE>data</CODE></EM> needs to be freed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-steal-qdata></A>
<H3>g_param_spec_steal_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_param_spec_steal_qdata (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>Gets back user data pointers stored via <A title=g_param_spec_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-set-qdata"><CODE class=function>g_param_spec_set_qdata()</CODE></A> and removes the <EM class=parameter><CODE>data</CODE></EM> from <EM class=parameter><CODE>pspec</CODE></EM> without invoking its <CODE class=function>destroy()</CODE> function (if any was set). Usually, calling this function is only required to update user data pointers with a destroy notifier.</P>
<DIV class=refsect3><A name=g-param-spec-steal-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to get a stored user data pointer from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-steal-qdata.returns></A>
<H4>Returns</H4>
<P>the user data pointer set, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-get-redirect-target></A>
<H3>g_param_spec_get_redirect_target&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_get_redirect_target (<EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>If the paramspec redirects operations to another paramspec, returns that paramspec. Redirect is used typically for providing a new implementation of a property in a derived type while preserving all the properties from the parent type. Redirection is established by creating a property of type <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A>. See <A title=g_object_class_override_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-override-property"><CODE class=function>g_object_class_override_property()</CODE></A> for an example of the use of this capability.</P>
<DIV class=refsect3><A name=g-param-spec-get-redirect-target.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-get-redirect-target.returns></A>
<H4>Returns</H4>
<P>paramspec to which requests on this paramspec should be redirected, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if none. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-internal></A>
<H3>g_param_spec_internal&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_param_spec_internal (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> param_type</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *nick</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *blurb</CODE></EM>,
                       <EM class=parameter><CODE><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance.</P>
<P>A property name consists of segments consisting of ASCII letters and digits, separated by either the '-' or '_' character. The first character of a property name must be a letter. Names which violate these rules lead to undefined behaviour.</P>
<P>When creating and looking up a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>, either separator can be used, but they cannot be mixed. Using '-' is considerably more efficient and in fact required when using property names as detail strings for signals.</P>
<P>Beyond the name, <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> have two more descriptive strings associated with them, the <EM class=parameter><CODE>nick</CODE></EM> , which should be suitable for use as a label for the property in a property editor, and the <EM class=parameter><CODE>blurb</CODE></EM> , which should be a somewhat longer description, suitable for e.g. a tooltip. The <EM class=parameter><CODE>nick</CODE></EM> and <EM class=parameter><CODE>blurb</CODE></EM> should ideally be localized.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-param-spec-internal.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>param_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for the property; must be derived from <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><SPAN class=type>G_TYPE_PARAM</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the canonical name of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nick</P></TD>
<TD class=parameter_description>
<P>the nickname of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>blurb</P></TD>
<TD class=parameter_description>
<P>a short description of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-internal.returns></A>
<H4>Returns</H4>
<P>a newly allocated <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.ParamSpec]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-type-register-static></A>
<H3>g_param_type_register_static&nbsp;()</H3><PRE class=programlisting><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=returnvalue>GType</SPAN></A>
g_param_type_register_static (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                              <EM class=parameter><CODE>const <A title="struct GParamSpecTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecTypeInfo"><SPAN class=type>GParamSpecTypeInfo</SPAN></A> *pspec_info</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>name</CODE></EM> as the name of a new static type derived from <A title=G_TYPE_PARAM class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-PARAM:CAPS"><SPAN class=type>G_TYPE_PARAM</SPAN></A>. The type system uses the information contained in the <A title="struct GParamSpecTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecTypeInfo"><SPAN class=type>GParamSpecTypeInfo</SPAN></A> structure pointed to by <EM class=parameter><CODE>info</CODE></EM> to manage the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> type and its instances.</P>
<DIV class=refsect3><A name=g-param-type-register-static.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>0-terminated string used as the name of the new <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec_info</P></TD>
<TD class=parameter_description>
<P>The <A title="struct GParamSpecTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecTypeInfo"><SPAN class=type>GParamSpecTypeInfo</SPAN></A> for this <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-type-register-static.returns></A>
<H4>Returns</H4>
<P>The new type identifier.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pool-new></A>
<H3>g_param_spec_pool_new&nbsp;()</H3><PRE class=programlisting><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=returnvalue>GParamSpecPool</SPAN></A>&nbsp;*
g_param_spec_pool_new (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> type_prefixing</CODE></EM>);</PRE>
<P>Creates a new <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A>.</P>
<P>If <EM class=parameter><CODE>type_prefixing</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, lookups in the newly created pool will allow to specify the owner as a colon-separated prefix of the property name, like "GtkContainer:border-width". This feature is deprecated, so you should always set <EM class=parameter><CODE>type_prefixing</CODE></EM> to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>.</P>
<DIV class=refsect3><A name=g-param-spec-pool-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type_prefixing</P></TD>
<TD class=parameter_description>
<P>Whether the pool will support type-prefixed property names.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-pool-new.returns></A>
<H4>Returns</H4>
<P>a newly allocated <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pool-insert></A>
<H3>g_param_spec_pool_insert&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_spec_pool_insert (<EM class=parameter><CODE><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A> *pool</CODE></EM>,
                          <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>,
                          <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> owner_type</CODE></EM>);</PRE>
<P>Inserts a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> in the pool.</P>
<DIV class=refsect3><A name=g-param-spec-pool-insert.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to insert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>owner_type</P></TD>
<TD class=parameter_description>
<P>a <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifying the owner of <EM class=parameter><CODE>pspec</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pool-remove></A>
<H3>g_param_spec_pool_remove&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_param_spec_pool_remove (<EM class=parameter><CODE><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A> *pool</CODE></EM>,
                          <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Removes a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> from the pool.</P>
<DIV class=refsect3><A name=g-param-spec-pool-remove.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pool-lookup></A>
<H3>g_param_spec_pool_lookup&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_param_spec_pool_lookup (<EM class=parameter><CODE><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A> *pool</CODE></EM>,
                          <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *param_name</CODE></EM>,
                          <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> owner_type</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> walk_ancestors</CODE></EM>);</PRE>
<P>Looks up a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> in the pool.</P>
<DIV class=refsect3><A name=g-param-spec-pool-lookup.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_name</P></TD>
<TD class=parameter_description>
<P>the name to look for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>owner_type</P></TD>
<TD class=parameter_description>
<P>the owner to look for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>walk_ancestors</P></TD>
<TD class=parameter_description>
<P>If <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, also try to find a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> with <EM class=parameter><CODE>param_name</CODE></EM> owned by an ancestor of <EM class=parameter><CODE>owner_type</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-pool-lookup.returns></A>
<H4>Returns</H4>
<P>The found <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no matching <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> was found. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pool-list></A>
<H3>g_param_spec_pool_list&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;**
g_param_spec_pool_list (<EM class=parameter><CODE><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A> *pool</CODE></EM>,
                        <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> owner_type</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_pspecs_p</CODE></EM>);</PRE>
<P>Gets an array of all <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> owned by <EM class=parameter><CODE>owner_type</CODE></EM> in the pool.</P>
<DIV class=refsect3><A name=g-param-spec-pool-list.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>owner_type</P></TD>
<TD class=parameter_description>
<P>the owner to look for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_pspecs_p</P></TD>
<TD class=parameter_description>
<P>return location for the length of the returned array. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-pool-list.returns></A>
<H4>Returns</H4>
<P>a newly allocated array containing pointers to all <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> owned by <EM class=parameter><CODE>owner_type</CODE></EM> in the pool. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_pspecs_p][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-param-spec-pool-list-owned></A>
<H3>g_param_spec_pool_list_owned&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_param_spec_pool_list_owned (<EM class=parameter><CODE><A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A> *pool</CODE></EM>,
                              <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> owner_type</CODE></EM>);</PRE>
<P>Gets an <A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> of all <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> owned by <EM class=parameter><CODE>owner_type</CODE></EM> in the pool.</P>
<DIV class=refsect3><A name=g-param-spec-pool-list-owned.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>owner_type</P></TD>
<TD class=parameter_description>
<P>the owner to look for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-param-spec-pool-list-owned.returns></A>
<H4>Returns</H4>
<P>a <A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> of all <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> owned by <EM class=parameter><CODE>owner_type</CODE></EM> in the pool<A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> GObject.ParamSpec]</SPAN></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GParamSpec></A>
<H3>struct GParamSpec</H3><PRE class=programlisting>struct GParamSpec {
  GTypeInstance  g_type_instance;

  const gchar   *name;          /* interned string */
  GParamFlags    flags;
  GType		 value_type;
  GType		 owner_type;&nbsp;/* class or interface using this property */
};
</PRE>
<P>All other fields of the GParamSpec struct are private and should not be used directly.</P>
<DIV class=refsect3><A name=GParamSpec.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpec.g-type-instance></A>g_type_instance</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>private <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> portion</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParamSpec.name></A>name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>name of this parameter: always an interned string</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpec.flags></A>flags</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flags for this parameter</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpec.value-type></A>value_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> type for this parameter</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpec.owner-type></A>owner_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> type that uses (introduces) this parameter</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecClass></A>
<H3>struct GParamSpecClass</H3><PRE class=programlisting>struct GParamSpecClass {
  GTypeClass      g_type_class;

  GType		  value_type;

  void	        (*finalize)		(GParamSpec   *pspec);

  /* GParam methods */
  void          (*value_set_default)    (GParamSpec   *pspec,
					 GValue       *value);
  gboolean      (*value_validate)       (GParamSpec   *pspec,
					 GValue       *value);
  gint          (*values_cmp)           (GParamSpec   *pspec,
					 const GValue *value1,
					 const GValue *value2);
};
</PRE>
<P>The class structure for the GParamSpec type. Normally, GParamSpec classes are filled by <A title=g_param_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-type-register-static"><CODE class=function>g_param_type_register_static()</CODE></A>.</P>
<DIV class=refsect3><A name=GParamSpecClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecClass.g-type-class></A>g_type_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parent class</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecClass.value-type></A>value_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> type for this parameter</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecClass.finalize></A>finalize</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>The instance finalization function (optional), should chain up to the finalize method of the parent class.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecClass.value-set-default></A>value_set_default</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Resets a <EM class=parameter><CODE>value</CODE></EM> to the default value for this type (recommended, the default is <A title=g_value_reset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-reset"><CODE class=function>g_value_reset()</CODE></A>), see <A title=g_param_value_set_default&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-set-default"><CODE class=function>g_param_value_set_default()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecClass.value-validate></A>value_validate</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Ensures that the contents of <EM class=parameter><CODE>value</CODE></EM> comply with the specifications set out by this type (optional), see <A title=g_param_value_validate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-validate"><CODE class=function>g_param_value_validate()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecClass.values-cmp></A>values_cmp</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Compares <EM class=parameter><CODE>value1</CODE></EM> with <EM class=parameter><CODE>value2</CODE></EM> according to this type (recommended, the default is <CODE class=function>memcmp()</CODE>), see <A title=g_param_values_cmp&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-values-cmp"><CODE class=function>g_param_values_cmp()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GParamFlags></A>
<H3>enum GParamFlags</H3>
<P>Through the <A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> flag values, certain aspects of parameters can be configured. See also <A title=G_PARAM_STATIC_STRINGS class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-STATIC-STRINGS:CAPS"><SPAN class=type>G_PARAM_STATIC_STRINGS</SPAN></A>.</P>
<DIV class=refsect3><A name=GParamFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-READABLE:CAPS></A>G_PARAM_READABLE</P></TD>
<TD class=enum_member_description>
<P>the parameter is readable</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-WRITABLE:CAPS></A>G_PARAM_WRITABLE</P></TD>
<TD class=enum_member_description>
<P>the parameter is writable</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-READWRITE:CAPS></A>G_PARAM_READWRITE</P></TD>
<TD class=enum_member_description>
<P>alias for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-READABLE:CAPS"><CODE class=literal>G_PARAM_READABLE</CODE></A> | <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-WRITABLE:CAPS"><CODE class=literal>G_PARAM_WRITABLE</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-CONSTRUCT:CAPS></A>G_PARAM_CONSTRUCT</P></TD>
<TD class=enum_member_description>
<P>the parameter will be set upon object construction</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-CONSTRUCT-ONLY:CAPS></A>G_PARAM_CONSTRUCT_ONLY</P></TD>
<TD class=enum_member_description>
<P>the parameter can only be set upon object construction</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-LAX-VALIDATION:CAPS></A>G_PARAM_LAX_VALIDATION</P></TD>
<TD class=enum_member_description>
<P>upon parameter conversion (see <A title=g_param_value_convert&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-convert"><CODE class=function>g_param_value_convert()</CODE></A>) strict validation is not required</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-STATIC-NAME:CAPS></A>G_PARAM_STATIC_NAME</P></TD>
<TD class=enum_member_description>
<P>the string used as name when constructing the parameter is guaranteed to remain valid and unmodified for the lifetime of the parameter. Since 2.8</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-PRIVATE:CAPS></A>G_PARAM_PRIVATE</P></TD>
<TD class=enum_member_description>
<P>internal</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-STATIC-NICK:CAPS></A>G_PARAM_STATIC_NICK</P></TD>
<TD class=enum_member_description>
<P>the string used as nick when constructing the parameter is guaranteed to remain valid and unmmodified for the lifetime of the parameter. Since 2.8</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-STATIC-BLURB:CAPS></A>G_PARAM_STATIC_BLURB</P></TD>
<TD class=enum_member_description>
<P>the string used as blurb when constructing the parameter is guaranteed to remain valid and unmodified for the lifetime of the parameter. Since 2.8</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-EXPLICIT-NOTIFY:CAPS></A>G_PARAM_EXPLICIT_NOTIFY</P></TD>
<TD class=enum_member_description>
<P>calls to <A title=g_object_set_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-property"><CODE class=function>g_object_set_property()</CODE></A> for this property will not automatically result in a "notify" signal being emitted: the implementation must call <A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify"><CODE class=function>g_object_notify()</CODE></A> themselves in case the property actually changes. Since: 2.42.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-PARAM-DEPRECATED:CAPS></A>G_PARAM_DEPRECATED</P></TD>
<TD class=enum_member_description>
<P>the parameter is deprecated and will be removed in a future version. A warning will be generated if it is used while running with G_ENABLE_DIAGNOSTIC=1. Since 2.26</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-STATIC-STRINGS:CAPS></A>
<H3>G_PARAM_STATIC_STRINGS</H3><PRE class=programlisting>#define&nbsp;G_PARAM_STATIC_STRINGS (G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB)
</PRE>
<P><A title="enum GParamFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamFlags"><SPAN class=type>GParamFlags</SPAN></A> value alias for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-STATIC-NAME:CAPS"><CODE class=literal>G_PARAM_STATIC_NAME</CODE></A> | <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-STATIC-NICK:CAPS"><CODE class=literal>G_PARAM_STATIC_NICK</CODE></A> | <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-STATIC-BLURB:CAPS"><CODE class=literal>G_PARAM_STATIC_BLURB</CODE></A>.</P>
<P>Since 2.13.0</P></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-MASK:CAPS></A>
<H3>G_PARAM_MASK</H3><PRE class=programlisting>#define&nbsp;G_PARAM_MASK		(0x000000ff)
</PRE>
<P>Mask containing the bits of <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec.flags"><SPAN class=type>GParamSpec.flags</SPAN></A> which are reserved for GLib.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-PARAM-USER-SHIFT:CAPS></A>
<H3>G_PARAM_USER_SHIFT</H3><PRE class=programlisting>#define&nbsp;G_PARAM_USER_SHIFT&nbsp;(8)
</PRE>
<P>Minimum shift count to be used for user defined flags, to be stored in <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec.flags"><SPAN class=type>GParamSpec.flags</SPAN></A>. The maximum allowed is 10.</P></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecTypeInfo></A>
<H3>struct GParamSpecTypeInfo</H3><PRE class=programlisting>struct GParamSpecTypeInfo {
  /* type system portion */
  guint16         instance_size;                               /* obligatory */
  guint16         n_preallocs;                                 /* optional */
  void		(*instance_init)&nbsp;(GParamSpec   *pspec); /* optional */

  /* class portion */
  GType           value_type;				       /* obligatory */
  void          (*finalize)             (GParamSpec   *pspec); /* optional */
  void          (*value_set_default)    (GParamSpec   *pspec,  /* recommended */
					 GValue       *value);
  gboolean      (*value_validate)       (GParamSpec   *pspec,  /* optional */
					 GValue       *value);
  gint          (*values_cmp)           (GParamSpec   *pspec,  /* recommended */
					 const GValue *value1,
					 const GValue *value2);
};
</PRE>
<P>This structure is used to provide the type system with the information required to initialize and destruct (finalize) a parameter's class and instances thereof. The initialized structure is passed to the <A title=g_param_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-type-register-static"><CODE class=function>g_param_type_register_static()</CODE></A> The type system will perform a deep copy of this structure, so its memory does not need to be persistent across invocation of <A title=g_param_type_register_static&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-type-register-static"><CODE class=function>g_param_type_register_static()</CODE></A>.</P>
<DIV class=refsect3><A name=GParamSpecTypeInfo.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecTypeInfo.instance-size></A>instance_size</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Size of the instance (object) structure.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecTypeInfo.n-preallocs></A>n_preallocs</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>Prior to GLib 2.10, it specified the number of pre-allocated (cached) instances to reserve memory for (0 indicates no caching). Since GLib 2.10, it is ignored, since instances are allocated with the slice allocator now.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecTypeInfo.instance-init></A>instance_init</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Location of the instance initialization function (optional).</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParamSpecTypeInfo.value-type></A>value_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of values conforming to this <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecTypeInfo.finalize></A>finalize</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>The instance finalization function (optional).</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecTypeInfo.value-set-default></A>value_set_default</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Resets a <EM class=parameter><CODE>value</CODE></EM> to the default value for <EM class=parameter><CODE>pspec</CODE></EM> (recommended, the default is <A title=g_value_reset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-reset"><CODE class=function>g_value_reset()</CODE></A>), see <A title=g_param_value_set_default&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-set-default"><CODE class=function>g_param_value_set_default()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecTypeInfo.value-validate></A>value_validate</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Ensures that the contents of <EM class=parameter><CODE>value</CODE></EM> comply with the specifications set out by <EM class=parameter><CODE>pspec</CODE></EM> (optional), see <A title=g_param_value_validate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-value-validate"><CODE class=function>g_param_value_validate()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GParamSpecTypeInfo.values-cmp></A>values_cmp</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Compares <EM class=parameter><CODE>value1</CODE></EM> with <EM class=parameter><CODE>value2</CODE></EM> according to <EM class=parameter><CODE>pspec</CODE></EM> (recommended, the default is <CODE class=function>memcmp()</CODE>), see <A title=g_param_values_cmp&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-values-cmp"><CODE class=function>g_param_values_cmp()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GParamSpecPool></A>
<H3>GParamSpecPool</H3><PRE class=programlisting>typedef struct _GParamSpecPool GParamSpecPool;</PRE>
<P>A <A title=GParamSpecPool class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpecPool"><SPAN class=type>GParamSpecPool</SPAN></A> maintains a collection of <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> which can be quickly accessed by owner and name. The implementation of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> property system uses such a pool to store the <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> of the properties all object types.</P></DIV></DIV>
<DIV class=refsect1><A name=gobject-GParamSpec.see-also></A>
<H2>See Also</H2>
<P>g_object_class_install_property(), <A title=g_object_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set"><CODE class=function>g_object_set()</CODE></A>, <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A>, <A title=g_object_set_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-property"><CODE class=function>g_object_set_property()</CODE></A>, <A title=g_object_get_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-property"><CODE class=function>g_object_get_property()</CODE></A>, <A title=g_value_register_transform_func&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-register-transform-func"><CODE class=function>g_value_register_transform_func()</CODE></A></P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28680">Topic #28680: Varargs Value Collection.. Varargs Value Collection &#38323;?Converting varargs to generic values.. .. Functions.. #defineG_VALUE_COLLECT_INIT() .. #defineG_VALUE_COLLECT() .. ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Varargs Value Collection</SPAN></H2>
<P>Varargs Value Collection &#8212; Converting varargs to generic values</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Varargs-Value-Collection.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_COLLECT_INIT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT-INIT:CAPS">G_VALUE_COLLECT_INIT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_COLLECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT:CAPS">G_VALUE_COLLECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_COLLECT_SKIP() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT-SKIP:CAPS">G_VALUE_COLLECT_SKIP</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_LCOPY() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-LCOPY:CAPS">G_VALUE_LCOPY</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Varargs-Value-Collection.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GTypeCValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#GTypeCValue">GTypeCValue</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_VALUE_COLLECT_FORMAT_MAX_LENGTH class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT-FORMAT-MAX-LENGTH:CAPS">G_VALUE_COLLECT_FORMAT_MAX_LENGTH</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Varargs-Value-Collection.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
#include &lt;gobject/gvaluecollector.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Varargs-Value-Collection.description></A>
<H2>Description</H2>
<P>The macros in this section provide the varargs parsing support needed in variadic GObject functions such as <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> or <A title=g_object_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set"><CODE class=function>g_object_set()</CODE></A>. They currently support the collection of integral types, floating point types and pointers.</P></DIV>
<DIV class=refsect1><A name=gobject-Varargs-Value-Collection.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-VALUE-COLLECT-INIT:CAPS></A>
<H3>G_VALUE_COLLECT_INIT()</H3><PRE class=programlisting>#define             G_VALUE_COLLECT_INIT(value, _value_type, var_args, flags, __error)</PRE>
<P>Collects a variable argument value from a va_list. We have to implement the varargs collection as a macro, because on some systems va_list variables cannot be passed by reference.</P>
<DIV class=refsect3><A name=G-VALUE-COLLECT-INIT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> return location. <EM class=parameter><CODE>value</CODE></EM> must contain only 0 bytes.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>_value_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> to use for <EM class=parameter><CODE>value</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>the va_list variable; it may be evaluated multiple times</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags which are passed on to the <CODE class=function>collect_value()</CODE> function of the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> of <EM class=parameter><CODE>value</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>__error</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>** variable that will be modified to hold a <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-new"><CODE class=function>g_new()</CODE></A> allocated error messages if something fails</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-24.html#api-index-2.24">2.24</A></P></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-COLLECT:CAPS></A>
<H3>G_VALUE_COLLECT()</H3><PRE class=programlisting>#define             G_VALUE_COLLECT(value, var_args, flags, __error)</PRE>
<P>Collects a variable argument value from a va_list. We have to implement the varargs collection as a macro, because on some systems va_list variables cannot be passed by reference.</P>
<P>Note: If you are creating the <EM class=parameter><CODE>value</CODE></EM> argument just before calling this macro, you should use the <A title=G_VALUE_COLLECT_INIT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT-INIT:CAPS"><SPAN class=type>G_VALUE_COLLECT_INIT</SPAN></A> variant and pass the unitialized <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>. That variant is faster than <A title=G_VALUE_COLLECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT:CAPS"><SPAN class=type>G_VALUE_COLLECT</SPAN></A>.</P>
<DIV class=refsect3><A name=G-VALUE-COLLECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> return location. <EM class=parameter><CODE>value</CODE></EM> is supposed to be initialized according to the value type to be collected</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>the va_list variable; it may be evaluated multiple times</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags which are passed on to the <CODE class=function>collect_value()</CODE> function of the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> of <EM class=parameter><CODE>value</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>__error</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>** variable that will be modified to hold a <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-new"><CODE class=function>g_new()</CODE></A> allocated error messages if something fails</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-COLLECT-SKIP:CAPS></A>
<H3>G_VALUE_COLLECT_SKIP()</H3><PRE class=programlisting>#define             G_VALUE_COLLECT_SKIP(_value_type, var_args)</PRE>
<P>Skip an argument of type <EM class=parameter><CODE>_value_type</CODE></EM> from <EM class=parameter><CODE>var_args</CODE></EM> .</P>
<DIV class=refsect3><A name=G-VALUE-COLLECT-SKIP.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>_value_type</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of the value to skip</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>the va_list variable; it may be evaluated multiple times</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-LCOPY:CAPS></A>
<H3>G_VALUE_LCOPY()</H3><PRE class=programlisting>#define             G_VALUE_LCOPY(value, var_args, flags, __error)</PRE>
<P>Collects a value's variable argument locations from a va_list. Usage is analogous to <A title=G_VALUE_COLLECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#G-VALUE-COLLECT:CAPS"><CODE class=function>G_VALUE_COLLECT()</CODE></A>.</P>
<DIV class=refsect3><A name=G-VALUE-LCOPY.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> return location. <EM class=parameter><CODE>value</CODE></EM> is supposed to be initialized according to the value type to be collected</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>the va_list variable; it may be evaluated multiple times</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags which are passed on to the <CODE class=function>lcopy_value()</CODE> function of the <A title="struct GTypeValueTable" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeValueTable"><SPAN class=type>GTypeValueTable</SPAN></A> of <EM class=parameter><CODE>value</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>__error</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>** variable that will be modified to hold a <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-new"><CODE class=function>g_new()</CODE></A> allocated error messages if something fails</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Varargs-Value-Collection.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GTypeCValue></A>
<H3>GTypeCValue</H3>
<P>A union holding one collected value.</P>
<DIV class=refsect3><A name=GTypeCValue.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=union_members_name width=300>
<COL class=union_members_description>
<COL class=union_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=union_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeCValue.v-int></A>v_int</CODE></EM>;</P></TD>
<TD class=union_member_description>
<P>the field for holding integer values</P></TD>
<TD class=union_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=union_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#glong"><SPAN class=type>glong</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeCValue.v-long></A>v_long</CODE></EM>;</P></TD>
<TD class=union_member_description>
<P>the field for holding long integer values</P></TD>
<TD class=union_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=union_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeCValue.v-int64></A>v_int64</CODE></EM>;</P></TD>
<TD class=union_member_description>
<P>the field for holding 64 bit integer values</P></TD>
<TD class=union_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=union_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeCValue.v-double></A>v_double</CODE></EM>;</P></TD>
<TD class=union_member_description>
<P>the field for holding floating point values</P></TD>
<TD class=union_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=union_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GTypeCValue.v-pointer></A>v_pointer</CODE></EM>;</P></TD>
<TD class=union_member_description>
<P>the field for holding pointers</P></TD>
<TD class=union_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-VALUE-COLLECT-FORMAT-MAX-LENGTH:CAPS></A>
<H3>G_VALUE_COLLECT_FORMAT_MAX_LENGTH</H3><PRE class=programlisting>#define&nbsp;G_VALUE_COLLECT_FORMAT_MAX_LENGTH&nbsp;(8)
</PRE>
<P>The maximal number of <A href="https://developer.gnome.org/gobject/stable/gobject-Varargs-Value-Collection.html#GTypeCValue"><SPAN class=type>GTypeCValues</SPAN></A> which can be collected for a single <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P></DIV></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28681">Topic #28681: Signals.. Signals &#38323;?A means for customization of object behaviour and a general purpose notification mechanism.. .. Functions.. gboolean (*GSignalAccumulator) () .. gboolean ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Signals</SPAN></H2>
<P>Signals &#8212; A means for customization of object behaviour and a general purpose notification mechanism</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Signals.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator">*GSignalAccumulator</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GSignalEmissionHook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalEmissionHook">*GSignalEmissionHook</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new">g_signal_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_newv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-newv">g_signal_newv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_new_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new-valist">g_signal_new_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_set_va_marshaller&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-set-va-marshaller">g_signal_set_va_marshaller</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_query&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-query">g_signal_query</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_lookup&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-lookup">g_signal_lookup</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_signal_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-name">g_signal_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_signal_list_ids&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-list-ids">g_signal_list_ids</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_emit&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit">g_signal_emit</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_emit_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit-by-name">g_signal_emit_by_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_emitv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emitv">g_signal_emitv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_emit_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit-valist">g_signal_emit_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_connect() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect">g_signal_connect</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_connect_after() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-after">g_signal_connect_after</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_connect_swapped() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-swapped">g_signal_connect_swapped</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_connect_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-object">g_signal_connect_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_connect_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-data">g_signal_connect_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_connect_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-closure">g_signal_connect_closure</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_connect_closure_by_id&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-closure-by-id">g_signal_connect_closure_by_id</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_handler_block&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-block">g_signal_handler_block</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_handler_unblock&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-unblock">g_signal_handler_unblock</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_handler_disconnect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-disconnect">g_signal_handler_disconnect</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_handler_find&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-find">g_signal_handler_find</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_handlers_block_matched&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-block-matched">g_signal_handlers_block_matched</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_handlers_unblock_matched&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-unblock-matched">g_signal_handlers_unblock_matched</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_handlers_disconnect_matched&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-disconnect-matched">g_signal_handlers_disconnect_matched</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_handler_is_connected&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-is-connected">g_signal_handler_is_connected</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_handlers_block_by_func() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-block-by-func">g_signal_handlers_block_by_func</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_handlers_unblock_by_func() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-unblock-by-func">g_signal_handlers_unblock_by_func</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_handlers_disconnect_by_func() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-disconnect-by-func">g_signal_handlers_disconnect_by_func</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_signal_handlers_disconnect_by_data() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-disconnect-by-data">g_signal_handlers_disconnect_by_data</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_has_handler_pending&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-has-handler-pending">g_signal_has_handler_pending</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_stop_emission&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-stop-emission">g_signal_stop_emission</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_stop_emission_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-stop-emission-by-name">g_signal_stop_emission_by_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_override_class_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-closure">g_signal_override_class_closure</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_chain_from_overridden&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden">g_signal_chain_from_overridden</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_new_class_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new-class-handler">g_signal_new_class_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_override_class_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-handler">g_signal_override_class_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_chain_from_overridden_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden-handler">g_signal_chain_from_overridden_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_add_emission_hook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-add-emission-hook">g_signal_add_emission_hook</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_signal_remove_emission_hook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-remove-emission-hook">g_signal_remove_emission_hook</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_parse_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-parse-name">g_signal_parse_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=returnvalue>GSignalInvocationHint</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_signal_get_invocation_hint&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-get-invocation-hint">g_signal_get_invocation_hint</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_signal_type_cclosure_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-type-cclosure-new">g_signal_type_cclosure_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_accumulator_first_wins&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-accumulator-first-wins">g_signal_accumulator_first_wins</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_signal_accumulator_true_handled&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-accumulator-true-handled">g_signal_accumulator_true_handled</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Signals.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint">GSignalInvocationHint</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GSignalCMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCMarshaller">GSignalCMarshaller</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GSignalCVaMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCVaMarshaller">GSignalCVaMarshaller</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags">GSignalFlags</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType">GSignalMatchType</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GSignalQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalQuery">GSignalQuery</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_SIGNAL_TYPE_STATIC_SCOPE class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-TYPE-STATIC-SCOPE:CAPS">G_SIGNAL_TYPE_STATIC_SCOPE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_SIGNAL_MATCH_MASK class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-MASK:CAPS">G_SIGNAL_MATCH_MASK</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_SIGNAL_FLAGS_MASK class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-FLAGS-MASK:CAPS">G_SIGNAL_FLAGS_MASK</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GConnectFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GConnectFlags">GConnectFlags</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Signals.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Signals.description></A>
<H2>Description</H2>
<P>The basic concept of the signal system is that of the emission of a signal. Signals are introduced per-type and are identified through strings. Signals introduced for a parent type are available in derived types as well, so basically they are a per-type facility that is inherited.</P>
<P>A signal emission mainly involves invocation of a certain set of callbacks in precisely defined manner. There are two main categories of such callbacks, per-object ones and user provided ones. (Although signals can deal with any kind of instantiatable type, I'm referring to those types as "object types" in the following, simply because that is the context most users will encounter signals in.) The per-object callbacks are most often referred to as "object method handler" or "default (signal) handler", while user provided callbacks are usually just called "signal handler".</P>
<P>The object method handler is provided at signal creation time (this most frequently happens at the end of an object class' creation), while user provided handlers are frequently connected and disconnected to/from a certain signal on certain object instances.</P>
<P>A signal emission consists of five stages, unless prematurely stopped:</P>
<DIV class=orderedlist>
<OL class=orderedlist type=1>
<LI class=listitem>
<P>Invocation of the object method handler for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-FIRST:CAPS"><CODE class=literal>G_SIGNAL_RUN_FIRST</CODE></A> signals</P></LI>
<LI class=listitem>
<P>Invocation of normal user-provided signal handlers (where the <EM class=parameter><CODE>after</CODE></EM> flag is not set)</P></LI>
<LI class=listitem>
<P>Invocation of the object method handler for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A> signals</P></LI>
<LI class=listitem>
<P>Invocation of user provided signal handlers (where the <EM class=parameter><CODE>after</CODE></EM> flag is set)</P></LI>
<LI class=listitem>
<P>Invocation of the object method handler for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-CLEANUP:CAPS"><CODE class=literal>G_SIGNAL_RUN_CLEANUP</CODE></A> signals</P></LI></OL></DIV>
<P>The user-provided signal handlers are called in the order they were connected in.</P>
<P>All handlers may prematurely stop a signal emission, and any number of handlers may be connected, disconnected, blocked or unblocked during a signal emission.</P>
<P>There are certain criteria for skipping user handlers in stages 2 and 4 of a signal emission.</P>
<P>First, user handlers may be blocked. Blocked handlers are omitted during callback invocation, to return from the blocked state, a handler has to get unblocked exactly the same amount of times it has been blocked before.</P>
<P>Second, upon emission of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-DETAILED:CAPS"><CODE class=literal>G_SIGNAL_DETAILED</CODE></A> signal, an additional <EM class=parameter><CODE>detail</CODE></EM> argument passed in to <A title=g_signal_emit&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit"><CODE class=function>g_signal_emit()</CODE></A> has to match the detail argument of the signal handler currently subject to invocation. Specification of no detail argument for signal handlers (omission of the detail part of the signal specification upon connection) serves as a wildcard and matches any detail argument passed in to emission.</P>
<DIV class=refsect3><A name=signal-memory-management></A>
<H4>Memory management of signal handlers</H4>
<P>If you are connecting handlers to signals and using a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance as your signal handler user data, you should remember to pair calls to <A title=g_signal_connect() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect"><CODE class=function>g_signal_connect()</CODE></A> with calls to <A title=g_signal_handler_disconnect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-disconnect"><CODE class=function>g_signal_handler_disconnect()</CODE></A> or <A title=g_signal_handlers_disconnect_by_func() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-disconnect-by-func"><CODE class=function>g_signal_handlers_disconnect_by_func()</CODE></A>. While signal handlers are automatically disconnected when the object emitting the signal is finalised, they are not automatically disconnected when the signal handler user data is destroyed. If this user data is a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance, using it from a signal handler after it has been finalised is an error.</P>
<P>There are two strategies for managing such user data. The first is to disconnect the signal handler (using <A title=g_signal_handler_disconnect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-disconnect"><CODE class=function>g_signal_handler_disconnect()</CODE></A> or <A title=g_signal_handlers_disconnect_by_func() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-disconnect-by-func"><CODE class=function>g_signal_handlers_disconnect_by_func()</CODE></A>) when the user data (object) is finalised; this has to be implemented manually. For non-threaded programs, <A title=g_signal_connect_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-object"><CODE class=function>g_signal_connect_object()</CODE></A> can be used to implement this automatically. Currently, however, it is unsafe to use in threaded programs.</P>
<P>The second is to hold a strong reference on the user data until after the signal is disconnected for other reasons. This can be implemented automatically using <A title=g_signal_connect_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-data"><CODE class=function>g_signal_connect_data()</CODE></A>.</P>
<P>The first approach is recommended, as the second approach can result in effective memory leaks of the user data if the signal handler is never disconnected for some reason.</P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Signals.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GSignalAccumulator></A>
<H3>GSignalAccumulator&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GSignalAccumulator<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A> *ihint</CODE></EM>,
                       <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_accu</CODE></EM>,
                       <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *handler_return</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>The signal accumulator is a special callback function that can be used to collect return values of the various callbacks that are called during a signal emission. The signal accumulator is specified at signal creation time, if it is left <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, no accumulation of callback return values is performed. The return value of signal emissions is then the value returned by the last callback.</P>
<DIV class=refsect3><A name=GSignalAccumulator.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ihint</P></TD>
<TD class=parameter_description>
<P>Signal invocation hint, see <A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_accu</P></TD>
<TD class=parameter_description>
<P>Accumulator to collect callback return values in, this is the return value of the current signal emission.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_return</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> holding the return value of the signal handler.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>Callback data that was specified when creating the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=GSignalAccumulator.returns></A>
<H4>Returns</H4>
<P>The accumulator function returns whether the signal emission should be aborted. Returning <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> means to abort the current emission and <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> is returned for continuation.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GSignalEmissionHook></A>
<H3>GSignalEmissionHook&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GSignalEmissionHook<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A> *ihint</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                        <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>A simple function pointer to get invoked when the signal is emitted. This allows you to tie a hook to the signal type, so that it will trap all emissions of that signal, from any object.</P>
<P>You may not attach these to signals created with the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-NO-HOOKS:CAPS"><SPAN class=type>G_SIGNAL_NO_HOOKS</SPAN></A> flag.</P>
<DIV class=refsect3><A name=GSignalEmissionHook.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ihint</P></TD>
<TD class=parameter_description>
<P>Signal invocation hint, see <A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>the number of parameters to the function, including the instance on which the signal was emitted.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>the instance on which the signal was emitted, followed by the parameters of the emission. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_param_values]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>user data associated with the hook.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=GSignalEmissionHook.returns></A>
<H4>Returns</H4>
<P>whether it wants to stay connected. If it returns <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, the signal hook is disconnected (and destroyed).</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-new></A>
<H3>g_signal_new&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_new (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_name</CODE></EM>,
              <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
              <EM class=parameter><CODE><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> signal_flags</CODE></EM>,
              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> class_offset</CODE></EM>,
              <EM class=parameter><CODE><A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> accumulator</CODE></EM>,
              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> accu_data</CODE></EM>,
              <EM class=parameter><CODE><A title=GSignalCMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCMarshaller"><SPAN class=type>GSignalCMarshaller</SPAN></A> c_marshaller</CODE></EM>,
              <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> return_type</CODE></EM>,
              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_params</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a new signal. (This is usually done in the class initializer.)</P>
<P>A signal name consists of segments consisting of ASCII letters and digits, separated by either the '-' or '_' character. The first character of a signal name must be a letter. Names which violate these rules lead to undefined behaviour of the GSignal system.</P>
<P>When registering a signal and looking up a signal, either separator can be used, but they cannot be mixed.</P>
<P>If 0 is used for <EM class=parameter><CODE>class_offset</CODE></EM> subclasses cannot override the class handler in their class_init method by doing super_class-&gt;signal_handler = my_signal_handler. Instead they will have to use <A title=g_signal_override_class_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-handler"><CODE class=function>g_signal_override_class_handler()</CODE></A>.</P>
<P>If c_marshaller is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A title=g_cclosure_marshal_generic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-generic"><CODE class=function>g_cclosure_marshal_generic()</CODE></A> will be used as the marshaller for this signal.</P>
<DIV class=refsect3><A name=g-signal-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_name</P></TD>
<TD class=parameter_description>
<P>the name for the signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>the type this signal pertains to. It will also pertain to types which are derived from this type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> specifying detail of when the default handler is to be invoked. You should at least specify <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-FIRST:CAPS"><CODE class=literal>G_SIGNAL_RUN_FIRST</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_offset</P></TD>
<TD class=parameter_description>
<P>The offset of the function pointer in the class structure for this type. Used to invoke a class method generically. Pass 0 to not associate a class method slot with this signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>accumulator</P></TD>
<TD class=parameter_description>
<P>the accumulator for this signal; may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>accu_data</P></TD>
<TD class=parameter_description>
<P>user data for the <EM class=parameter><CODE>accumulator</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_marshaller</P></TD>
<TD class=parameter_description>
<P>the function to translate arrays of parameter values to signal emissions into C language callback invocations or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>return_type</P></TD>
<TD class=parameter_description>
<P>the type of return value, or <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A> for a signal without a return value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the number of parameter types to follow.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>a list of types, one for each parameter.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-new.returns></A>
<H4>Returns</H4>
<P>the signal id</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-newv></A>
<H3>g_signal_newv&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_newv (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_name</CODE></EM>,
               <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
               <EM class=parameter><CODE><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> signal_flags</CODE></EM>,
               <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *class_closure</CODE></EM>,
               <EM class=parameter><CODE><A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> accumulator</CODE></EM>,
               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> accu_data</CODE></EM>,
               <EM class=parameter><CODE><A title=GSignalCMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCMarshaller"><SPAN class=type>GSignalCMarshaller</SPAN></A> c_marshaller</CODE></EM>,
               <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> return_type</CODE></EM>,
               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_params</CODE></EM>,
               <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>Creates a new signal. (This is usually done in the class initializer.)</P>
<P>See <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A> for details on allowed signal names.</P>
<P>If c_marshaller is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A title=g_cclosure_marshal_generic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-generic"><CODE class=function>g_cclosure_marshal_generic()</CODE></A> will be used as the marshaller for this signal.</P>
<DIV class=refsect3><A name=g-signal-newv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_name</P></TD>
<TD class=parameter_description>
<P>the name for the signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>the type this signal pertains to. It will also pertain to types which are derived from this type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> specifying detail of when the default handler is to be invoked. You should at least specify <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-FIRST:CAPS"><CODE class=literal>G_SIGNAL_RUN_FIRST</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_closure</P></TD>
<TD class=parameter_description>
<P>The closure to invoke on signal emission; may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>accumulator</P></TD>
<TD class=parameter_description>
<P>the accumulator for this signal; may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>accu_data</P></TD>
<TD class=parameter_description>
<P>user data for the <EM class=parameter><CODE>accumulator</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_marshaller</P></TD>
<TD class=parameter_description>
<P>the function to translate arrays of parameter values to signal emissions into C language callback invocations or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>return_type</P></TD>
<TD class=parameter_description>
<P>the type of return value, or <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A> for a signal without a return value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of <EM class=parameter><CODE>param_types</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>an array of types, one for each parameter. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-newv.returns></A>
<H4>Returns</H4>
<P>the signal id</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-new-valist></A>
<H3>g_signal_new_valist&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_new_valist (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_name</CODE></EM>,
                     <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
                     <EM class=parameter><CODE><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> signal_flags</CODE></EM>,
                     <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *class_closure</CODE></EM>,
                     <EM class=parameter><CODE><A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> accumulator</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> accu_data</CODE></EM>,
                     <EM class=parameter><CODE><A title=GSignalCMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCMarshaller"><SPAN class=type>GSignalCMarshaller</SPAN></A> c_marshaller</CODE></EM>,
                     <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> return_type</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_params</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>);</PRE>
<P>Creates a new signal. (This is usually done in the class initializer.)</P>
<P>See <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A> for details on allowed signal names.</P>
<P>If c_marshaller is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A title=g_cclosure_marshal_generic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-generic"><CODE class=function>g_cclosure_marshal_generic()</CODE></A> will be used as the marshaller for this signal.</P>
<DIV class=refsect3><A name=g-signal-new-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_name</P></TD>
<TD class=parameter_description>
<P>the name for the signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>the type this signal pertains to. It will also pertain to types which are derived from this type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> specifying detail of when the default handler is to be invoked. You should at least specify <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-FIRST:CAPS"><CODE class=literal>G_SIGNAL_RUN_FIRST</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_closure</P></TD>
<TD class=parameter_description>
<P>The closure to invoke on signal emission; may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>accumulator</P></TD>
<TD class=parameter_description>
<P>the accumulator for this signal; may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>accu_data</P></TD>
<TD class=parameter_description>
<P>user data for the <EM class=parameter><CODE>accumulator</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_marshaller</P></TD>
<TD class=parameter_description>
<P>the function to translate arrays of parameter values to signal emissions into C language callback invocations or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>return_type</P></TD>
<TD class=parameter_description>
<P>the type of return value, or <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A> for a signal without a return value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the number of parameter types in <EM class=parameter><CODE>args</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>, one for each parameter.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-new-valist.returns></A>
<H4>Returns</H4>
<P>the signal id</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-set-va-marshaller></A>
<H3>g_signal_set_va_marshaller&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_set_va_marshaller (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                            <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                            <EM class=parameter><CODE><A title=GSignalCVaMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCVaMarshaller"><SPAN class=type>GSignalCVaMarshaller</SPAN></A> va_marshaller</CODE></EM>);</PRE>
<P>Change the <A title=GSignalCVaMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCVaMarshaller"><SPAN class=type>GSignalCVaMarshaller</SPAN></A> used for a given signal. This is a specialised form of the marshaller that can often be used for the common case of a single connected signal handler and avoids the overhead of <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>. Its use is optional.</P>
<DIV class=refsect3><A name=g-signal-set-va-marshaller.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal id</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P>the instance type on which to set the marshaller.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>va_marshaller</P></TD>
<TD class=parameter_description>
<P>the marshaller to set.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-query></A>
<H3>g_signal_query&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_query (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                <EM class=parameter><CODE><A title="struct GSignalQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalQuery"><SPAN class=type>GSignalQuery</SPAN></A> *query</CODE></EM>);</PRE>
<P>Queries the signal system for in-depth information about a specific signal. This function will fill in a user-provided structure to hold signal-specific information. If an invalid signal id is passed in, the <EM class=parameter><CODE>signal_id</CODE></EM> member of the <A title="struct GSignalQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalQuery"><SPAN class=type>GSignalQuery</SPAN></A> is 0. All members filled into the <A title="struct GSignalQuery" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalQuery"><SPAN class=type>GSignalQuery</SPAN></A> structure should be considered constant and have to be left untouched.</P>
<DIV class=refsect3><A name=g-signal-query.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>The signal id of the signal to query information for.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>query</P></TD>
<TD class=parameter_description>
<P>A user provided structure that is filled in with constant values upon success. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Out parameter, where caller must allocate storage."><SPAN class=acronym>out caller-allocates</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-lookup></A>
<H3>g_signal_lookup&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_lookup (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>,
                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>);</PRE>
<P>Given the name of the signal and the type of object it connects to, gets the signal's identifying integer. Emitting the signal by number is somewhat faster than using the name each time.</P>
<P>Also tries the ancestors of the given type.</P>
<P>See <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A> for details on allowed signal names.</P>
<DIV class=refsect3><A name=g-signal-lookup.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the signal's name.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>the type that the signal operates on.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-lookup.returns></A>
<H4>Returns</H4>
<P>the signal's identifying number, or 0 if no signal was found.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-name></A>
<H3>g_signal_name&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_signal_name (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>);</PRE>
<P>Given the signal's identifier, finds its name.</P>
<P>Two different signals may have the same name, if they have differing types.</P>
<DIV class=refsect3><A name=g-signal-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal's identifying number.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-name.returns></A>
<H4>Returns</H4>
<P>the signal name, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the signal number was invalid.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-list-ids></A>
<H3>g_signal_list_ids&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>&nbsp;*
g_signal_list_ids (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_ids</CODE></EM>);</PRE>
<P>Lists the signals by id that a certain instance or interface type created. Further information about the signals can be acquired through <A title=g_signal_query&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-query"><CODE class=function>g_signal_query()</CODE></A>.</P>
<DIV class=refsect3><A name=g-signal-list-ids.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>Instance or interface type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_ids</P></TD>
<TD class=parameter_description>
<P>Location to store the number of signal ids for <EM class=parameter><CODE>itype</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-list-ids.returns></A>
<H4>Returns</H4>
<P>Newly allocated array of signal IDs. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_ids][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-emit></A>
<H3>g_signal_emit&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_emit (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
               <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Emits a signal.</P>
<P>Note that <A title=g_signal_emit&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit"><CODE class=function>g_signal_emit()</CODE></A> resets the return value to the default if no handlers are connected, in contrast to <A title=g_signal_emitv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emitv"><CODE class=function>g_signal_emitv()</CODE></A>.</P>
<DIV class=refsect3><A name=g-signal-emit.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance the signal is being emitted on. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal id</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>parameters to be passed to the signal, followed by a location for the return value. If the return type of the signal is <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A>, the return value location can be omitted.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-emit-by-name></A>
<H3>g_signal_emit_by_name&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_emit_by_name (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *detailed_signal</CODE></EM>,
                       <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Emits a signal.</P>
<P>Note that <A title=g_signal_emit_by_name&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit-by-name"><CODE class=function>g_signal_emit_by_name()</CODE></A> resets the return value to the default if no handlers are connected, in contrast to <A title=g_signal_emitv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emitv"><CODE class=function>g_signal_emitv()</CODE></A>.</P>
<DIV class=refsect3><A name=g-signal-emit-by-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance the signal is being emitted on. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>parameters to be passed to the signal, followed by a location for the return value. If the return type of the signal is <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A>, the return value location can be omitted.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-emitv></A>
<H3>g_signal_emitv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_emitv (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *instance_and_params</CODE></EM>,
                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>);</PRE>
<P>Emits a signal.</P>
<P>Note that <A title=g_signal_emitv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emitv"><CODE class=function>g_signal_emitv()</CODE></A> doesn't change <EM class=parameter><CODE>return_value</CODE></EM> if no handlers are connected, in contrast to <A title=g_signal_emit&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit"><CODE class=function>g_signal_emit()</CODE></A> and <A title=g_signal_emit_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit-valist"><CODE class=function>g_signal_emit_valist()</CODE></A>.</P>
<DIV class=refsect3><A name=g-signal-emitv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance_and_params</P></TD>
<TD class=parameter_description>
<P>argument list for the signal emission. The first element in the array is a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> for the instance the signal is being emitted on. The rest are any arguments to be passed to the signal. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal id</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>Location to store the return value of the signal emission. This must be provided if the specified signal returns a value, but may be ignored otherwise. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>][<ACRONYM title="NULL may be passed instead of a pointer to a location."><SPAN class=acronym>optional</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-emit-valist></A>
<H3>g_signal_emit_valist&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_emit_valist (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                      <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Emits a signal.</P>
<P>Note that <A title=g_signal_emit_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit-valist"><CODE class=function>g_signal_emit_valist()</CODE></A> resets the return value to the default if no handlers are connected, in contrast to <A title=g_signal_emitv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emitv"><CODE class=function>g_signal_emitv()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-signal-emit-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance the signal is being emitted on. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal id</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>a list of parameters to be passed to the signal, followed by a location for the return value. If the return type of the signal is <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A>, the return value location can be omitted.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect></A>
<H3>g_signal_connect()</H3><PRE class=programlisting>#define             g_signal_connect(instance, detailed_signal, c_handler, data)</PRE>
<P>Connects a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> function to a signal for a particular object.</P>
<P>The handler will be called before the default handler of the signal.</P>
<P>See <A title="Memory management of signal handlers" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#signal-memory-management">memory management of signal handlers</A> for details on how to handle the return value and memory management of <EM class=parameter><CODE>data</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-connect.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_handler</P></TD>
<TD class=parameter_description>
<P>the <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>c_handler</CODE></EM> calls.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect.returns></A>
<H4>Returns</H4>
<P>the handler ID, of type <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> (always greater than 0 for successful connections)</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect-after></A>
<H3>g_signal_connect_after()</H3><PRE class=programlisting>#define             g_signal_connect_after(instance, detailed_signal, c_handler, data)</PRE>
<P>Connects a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> function to a signal for a particular object.</P>
<P>The handler will be called after the default handler of the signal.</P>
<DIV class=refsect3><A name=g-signal-connect-after.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_handler</P></TD>
<TD class=parameter_description>
<P>the <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>c_handler</CODE></EM> calls.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect-after.returns></A>
<H4>Returns</H4>
<P>the handler ID, of type <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> (always greater than 0 for successful connections)</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect-swapped></A>
<H3>g_signal_connect_swapped()</H3><PRE class=programlisting>#define             g_signal_connect_swapped(instance, detailed_signal, c_handler, data)</PRE>
<P>Connects a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> function to a signal for a particular object.</P>
<P>The instance on which the signal is emitted and <EM class=parameter><CODE>data</CODE></EM> will be swapped when calling the handler. This is useful when calling pre-existing functions to operate purely on the <EM class=parameter><CODE>data</CODE></EM> , rather than the <EM class=parameter><CODE>instance</CODE></EM> : swapping the parameters avoids the need to write a wrapper function.</P>
<P>For example, this allows the shorter code:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-swapped">g_signal_connect_swapped</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>button<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"clicked"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                          <SPAN class="gtkdoc opt">(</SPAN>GCallback<SPAN class="gtkdoc opt">)</SPAN> gtk_widget_hide<SPAN class="gtkdoc opt">,</SPAN> other_widget<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Rather than the cumbersome:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>button_clicked_cb</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkButton <SPAN class="gtkdoc opt">*</SPAN>button<SPAN class="gtkdoc opt">,</SPAN> GtkWidget <SPAN class="gtkdoc opt">*</SPAN>other_widget<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class=function><A href="http://developer.gnome.org/gtk4/GtkWidget.html#gtk-widget-hide">gtk_widget_hide</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>other_widget<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc opt">...</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect">g_signal_connect</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>button<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"clicked"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                  <SPAN class="gtkdoc opt">(</SPAN>GCallback<SPAN class="gtkdoc opt">)</SPAN> button_clicked_cb<SPAN class="gtkdoc opt">,</SPAN> other_widget<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-signal-connect-swapped.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_handler</P></TD>
<TD class=parameter_description>
<P>the <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>c_handler</CODE></EM> calls.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect-swapped.returns></A>
<H4>Returns</H4>
<P>the handler ID, of type <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> (always greater than 0 for successful connections)</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect-object></A>
<H3>g_signal_connect_object&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_signal_connect_object (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                         <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *detailed_signal</CODE></EM>,
                         <EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> c_handler</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> gobject</CODE></EM>,
                         <EM class=parameter><CODE><A title="enum GConnectFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GConnectFlags"><SPAN class=type>GConnectFlags</SPAN></A> connect_flags</CODE></EM>);</PRE>
<P>This is similar to <A title=g_signal_connect_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-data"><CODE class=function>g_signal_connect_data()</CODE></A>, but uses a closure which ensures that the <EM class=parameter><CODE>gobject</CODE></EM> stays alive during the call to <EM class=parameter><CODE>c_handler</CODE></EM> by temporarily adding a reference count to <EM class=parameter><CODE>gobject</CODE></EM> .</P>
<P>When the <EM class=parameter><CODE>gobject</CODE></EM> is destroyed the signal handler will be automatically disconnected. Note that this is not currently threadsafe (ie: emitting a signal while <EM class=parameter><CODE>gobject</CODE></EM> is being destroyed in another thread is not safe).</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-signal-connect-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_handler</P></TD>
<TD class=parameter_description>
<P>the <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>gobject</P></TD>
<TD class=parameter_description>
<P>the object to pass as data to <EM class=parameter><CODE>c_handler</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>connect_flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GConnectFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GConnectFlags"><SPAN class=type>GConnectFlags</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect-object.returns></A>
<H4>Returns</H4>
<P>the handler id.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect-data></A>
<H3>g_signal_connect_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_signal_connect_data (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *detailed_signal</CODE></EM>,
                       <EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> c_handler</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                       <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> destroy_data</CODE></EM>,
                       <EM class=parameter><CODE><A title="enum GConnectFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GConnectFlags"><SPAN class=type>GConnectFlags</SPAN></A> connect_flags</CODE></EM>);</PRE>
<P>Connects a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> function to a signal for a particular object. Similar to <A title=g_signal_connect() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect"><CODE class=function>g_signal_connect()</CODE></A>, but allows to provide a <A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> for the data which will be called when the signal handler is disconnected and no longer used. Specify <EM class=parameter><CODE>connect_flags</CODE></EM> if you need <CODE class=literal>..._after()</CODE> or <CODE class=literal>..._swapped()</CODE> variants of this function.</P>
<DIV class=refsect3><A name=g-signal-connect-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_handler</P></TD>
<TD class=parameter_description>
<P>the <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>c_handler</CODE></EM> calls.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy_data</P></TD>
<TD class=parameter_description>
<P>a <A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> for <EM class=parameter><CODE>data</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>connect_flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GConnectFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GConnectFlags"><SPAN class=type>GConnectFlags</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect-data.returns></A>
<H4>Returns</H4>
<P>the handler ID (always greater than 0 for successful connections)</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect-closure></A>
<H3>g_signal_connect_closure&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_signal_connect_closure (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                          <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *detailed_signal</CODE></EM>,
                          <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> after</CODE></EM>);</PRE>
<P>Connects a closure to a signal for a particular object.</P>
<DIV class=refsect3><A name=g-signal-connect-closure.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the closure to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>after</P></TD>
<TD class=parameter_description>
<P>whether the handler should be called before or after the default handler of the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect-closure.returns></A>
<H4>Returns</H4>
<P>the handler ID (always greater than 0 for successful connections)</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-connect-closure-by-id></A>
<H3>g_signal_connect_closure_by_id&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_signal_connect_closure_by_id (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                                <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> after</CODE></EM>);</PRE>
<P>Connects a closure to a signal for a particular object.</P>
<DIV class=refsect3><A name=g-signal-connect-closure-by-id.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to connect to. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the id of the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the closure to connect.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>after</P></TD>
<TD class=parameter_description>
<P>whether the handler should be called before or after the default handler of the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-connect-closure-by-id.returns></A>
<H4>Returns</H4>
<P>the handler ID (always greater than 0 for successful connections)</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handler-block></A>
<H3>g_signal_handler_block&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_handler_block (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> handler_id</CODE></EM>);</PRE>
<P>Blocks a handler of an instance so it will not be called during any signal emissions unless it is unblocked again. Thus "blocking" a signal handler means to temporarily deactive it, a signal handler has to be unblocked exactly the same amount of times it has been blocked before to become active again.</P>
<P>The <EM class=parameter><CODE>handler_id</CODE></EM> has to be a valid signal handler id, connected to a signal of <EM class=parameter><CODE>instance</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handler-block.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to block the signal handler of. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_id</P></TD>
<TD class=parameter_description>
<P>Handler id of the handler to be blocked.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handler-unblock></A>
<H3>g_signal_handler_unblock&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_handler_unblock (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> handler_id</CODE></EM>);</PRE>
<P>Undoes the effect of a previous <A title=g_signal_handler_block&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-block"><CODE class=function>g_signal_handler_block()</CODE></A> call. A blocked handler is skipped during signal emissions and will not be invoked, unblocking it (for exactly the amount of times it has been blocked before) reverts its "blocked" state, so the handler will be recognized by the signal system and is called upon future or currently ongoing signal emissions (since the order in which handlers are called during signal emissions is deterministic, whether the unblocked handler in question is called as part of a currently ongoing emission depends on how far that emission has proceeded yet).</P>
<P>The <EM class=parameter><CODE>handler_id</CODE></EM> has to be a valid id of a signal handler that is connected to a signal of <EM class=parameter><CODE>instance</CODE></EM> and is currently blocked.</P>
<DIV class=refsect3><A name=g-signal-handler-unblock.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to unblock the signal handler of. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_id</P></TD>
<TD class=parameter_description>
<P>Handler id of the handler to be unblocked.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handler-disconnect></A>
<H3>g_signal_handler_disconnect&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_handler_disconnect (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> handler_id</CODE></EM>);</PRE>
<P>Disconnects a handler from an instance so it will not be called during any future or currently ongoing emissions of the signal it has been connected to. The <EM class=parameter><CODE>handler_id</CODE></EM> becomes invalid and may be reused.</P>
<P>The <EM class=parameter><CODE>handler_id</CODE></EM> has to be a valid signal handler id, connected to a signal of <EM class=parameter><CODE>instance</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handler-disconnect.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to remove the signal handler from. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_id</P></TD>
<TD class=parameter_description>
<P>Handler id of the handler to be disconnected.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handler-find></A>
<H3>g_signal_handler_find&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_signal_handler_find (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                       <EM class=parameter><CODE><A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> mask</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                       <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> func</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Finds the first signal handler that matches certain selection criteria. The criteria mask is passed as an OR-ed combination of <A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> flags, and the criteria values are passed as arguments. The match <EM class=parameter><CODE>mask</CODE></EM> has to be non-0 for successful matches. If no handler was found, 0 is returned.</P>
<DIV class=refsect3><A name=g-signal-handler-find.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance owning the signal handler to be found. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>mask</P></TD>
<TD class=parameter_description>
<P>Mask indicating which of <EM class=parameter><CODE>signal_id</CODE></EM> , <EM class=parameter><CODE>detail</CODE></EM> , <EM class=parameter><CODE>closure</CODE></EM> , <EM class=parameter><CODE>func</CODE></EM> and/or <EM class=parameter><CODE>data</CODE></EM> the handler has to match.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>Signal the handler has to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>Signal detail the handler has to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>The closure the handler will invoke. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handler (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handler's closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handler-find.returns></A>
<H4>Returns</H4>
<P>A valid non-0 signal handler id for a successful match.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-block-matched></A>
<H3>g_signal_handlers_block_matched&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_handlers_block_matched (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> mask</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                                 <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> func</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Blocks all handlers on an instance that match a certain selection criteria. The criteria mask is passed as an OR-ed combination of <A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> flags, and the criteria values are passed as arguments. Passing at least one of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-CLOSURE:CAPS"><CODE class=literal>G_SIGNAL_MATCH_CLOSURE</CODE></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-FUNC:CAPS"><CODE class=literal>G_SIGNAL_MATCH_FUNC</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-DATA:CAPS"><CODE class=literal>G_SIGNAL_MATCH_DATA</CODE></A> match flags is required for successful matches. If no handlers were found, 0 is returned, the number of blocked handlers otherwise.</P>
<DIV class=refsect3><A name=g-signal-handlers-block-matched.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to block handlers from. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>mask</P></TD>
<TD class=parameter_description>
<P>Mask indicating which of <EM class=parameter><CODE>signal_id</CODE></EM> , <EM class=parameter><CODE>detail</CODE></EM> , <EM class=parameter><CODE>closure</CODE></EM> , <EM class=parameter><CODE>func</CODE></EM> and/or <EM class=parameter><CODE>data</CODE></EM> the handlers have to match.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>Signal the handlers have to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>Signal detail the handlers have to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>The closure the handlers will invoke. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handlers (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handlers' closures.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-block-matched.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-unblock-matched></A>
<H3>g_signal_handlers_unblock_matched&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_handlers_unblock_matched (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                   <EM class=parameter><CODE><A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> mask</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                                   <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> func</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Unblocks all handlers on an instance that match a certain selection criteria. The criteria mask is passed as an OR-ed combination of <A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> flags, and the criteria values are passed as arguments. Passing at least one of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-CLOSURE:CAPS"><CODE class=literal>G_SIGNAL_MATCH_CLOSURE</CODE></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-FUNC:CAPS"><CODE class=literal>G_SIGNAL_MATCH_FUNC</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-DATA:CAPS"><CODE class=literal>G_SIGNAL_MATCH_DATA</CODE></A> match flags is required for successful matches. If no handlers were found, 0 is returned, the number of unblocked handlers otherwise. The match criteria should not apply to any handlers that are not currently blocked.</P>
<DIV class=refsect3><A name=g-signal-handlers-unblock-matched.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to unblock handlers from. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>mask</P></TD>
<TD class=parameter_description>
<P>Mask indicating which of <EM class=parameter><CODE>signal_id</CODE></EM> , <EM class=parameter><CODE>detail</CODE></EM> , <EM class=parameter><CODE>closure</CODE></EM> , <EM class=parameter><CODE>func</CODE></EM> and/or <EM class=parameter><CODE>data</CODE></EM> the handlers have to match.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>Signal the handlers have to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>Signal detail the handlers have to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>The closure the handlers will invoke. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handlers (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handlers' closures.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-unblock-matched.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-disconnect-matched></A>
<H3>g_signal_handlers_disconnect_matched&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_handlers_disconnect_matched (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                      <EM class=parameter><CODE><A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> mask</CODE></EM>,
                                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                                      <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> func</CODE></EM>,
                                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Disconnects all handlers on an instance that match a certain selection criteria. The criteria mask is passed as an OR-ed combination of <A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> flags, and the criteria values are passed as arguments. Passing at least one of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-CLOSURE:CAPS"><CODE class=literal>G_SIGNAL_MATCH_CLOSURE</CODE></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-FUNC:CAPS"><CODE class=literal>G_SIGNAL_MATCH_FUNC</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-MATCH-DATA:CAPS"><CODE class=literal>G_SIGNAL_MATCH_DATA</CODE></A> match flags is required for successful matches. If no handlers were found, 0 is returned, the number of disconnected handlers otherwise.</P>
<DIV class=refsect3><A name=g-signal-handlers-disconnect-matched.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to remove handlers from. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>mask</P></TD>
<TD class=parameter_description>
<P>Mask indicating which of <EM class=parameter><CODE>signal_id</CODE></EM> , <EM class=parameter><CODE>detail</CODE></EM> , <EM class=parameter><CODE>closure</CODE></EM> , <EM class=parameter><CODE>func</CODE></EM> and/or <EM class=parameter><CODE>data</CODE></EM> the handlers have to match.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>Signal the handlers have to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>Signal detail the handlers have to be connected to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>The closure the handlers will invoke. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handlers (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handlers' closures.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-disconnect-matched.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handler-is-connected></A>
<H3>g_signal_handler_is_connected&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_signal_handler_is_connected (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> handler_id</CODE></EM>);</PRE>
<P>Returns whether <EM class=parameter><CODE>handler_id</CODE></EM> is the ID of a handler connected to <EM class=parameter><CODE>instance</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handler-is-connected.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance where a signal handler is sought. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_id</P></TD>
<TD class=parameter_description>
<P>the handler ID.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handler-is-connected.returns></A>
<H4>Returns</H4>
<P>whether <EM class=parameter><CODE>handler_id</CODE></EM> identifies a handler connected to <EM class=parameter><CODE>instance</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-block-by-func></A>
<H3>g_signal_handlers_block_by_func()</H3><PRE class=programlisting>#define             g_signal_handlers_block_by_func(instance, func, data)</PRE>
<P>Blocks all handlers on an instance that match <EM class=parameter><CODE>func</CODE></EM> and <EM class=parameter><CODE>data</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handlers-block-by-func.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to block handlers from.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handlers (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handlers' closures.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-block-by-func.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-unblock-by-func></A>
<H3>g_signal_handlers_unblock_by_func()</H3><PRE class=programlisting>#define             g_signal_handlers_unblock_by_func(instance, func, data)</PRE>
<P>Unblocks all handlers on an instance that match <EM class=parameter><CODE>func</CODE></EM> and <EM class=parameter><CODE>data</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handlers-unblock-by-func.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to unblock handlers from.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handlers (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handlers' closures.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-unblock-by-func.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-disconnect-by-func></A>
<H3>g_signal_handlers_disconnect_by_func()</H3><PRE class=programlisting>#define             g_signal_handlers_disconnect_by_func(instance, func, data)</PRE>
<P>Disconnects all handlers on an instance that match <EM class=parameter><CODE>func</CODE></EM> and <EM class=parameter><CODE>data</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handlers-disconnect-by-func.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to remove handlers from.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>The C closure callback of the handlers (useless for non-C closures).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>The closure data of the handlers' closures.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-disconnect-by-func.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-handlers-disconnect-by-data></A>
<H3>g_signal_handlers_disconnect_by_data()</H3><PRE class=programlisting>#define             g_signal_handlers_disconnect_by_data(instance, data)</PRE>
<P>Disconnects all handlers on an instance that match <EM class=parameter><CODE>data</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-handlers-disconnect-by-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>The instance to remove handlers from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the closure data of the handlers' closures</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-handlers-disconnect-by-data.returns></A>
<H4>Returns</H4>
<P>The number of handlers that matched.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-has-handler-pending></A>
<H3>g_signal_has_handler_pending&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_signal_has_handler_pending (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> may_be_blocked</CODE></EM>);</PRE>
<P>Returns whether there are any handlers connected to <EM class=parameter><CODE>instance</CODE></EM> for the given signal id and detail.</P>
<P>If <EM class=parameter><CODE>detail</CODE></EM> is 0 then it will only match handlers that were connected without detail. If <EM class=parameter><CODE>detail</CODE></EM> is non-zero then it will match handlers connected both without detail and with the given detail. This is consistent with how a signal emitted with <EM class=parameter><CODE>detail</CODE></EM> would be delivered to those handlers.</P>
<P>Since 2.46 this also checks for a non-default class closure being installed, as this is basically always what you want.</P>
<P>One example of when you might use this is when the arguments to the signal are difficult to compute. A class implementor may opt to not emit the signal if no one is attached anyway, thus saving the cost of building the arguments.</P>
<DIV class=refsect3><A name=g-signal-has-handler-pending.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the object whose signal handlers are sought. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal id.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>may_be_blocked</P></TD>
<TD class=parameter_description>
<P>whether blocked handlers should count as match.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-has-handler-pending.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a handler is connected to the signal, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-stop-emission></A>
<H3>g_signal_stop_emission&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_stop_emission (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>);</PRE>
<P>Stops a signal's current emission.</P>
<P>This will prevent the default method from running, if the signal was <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A> and you connected normally (i.e. without the "after" flag).</P>
<P>Prints a warning if used on a signal which isn't being emitted.</P>
<DIV class=refsect3><A name=g-signal-stop-emission.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the object whose signal handlers you wish to stop. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal identifier, as returned by <A title=g_signal_lookup&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-lookup"><CODE class=function>g_signal_lookup()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail which the signal was emitted with.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-stop-emission-by-name></A>
<H3>g_signal_stop_emission_by_name&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_stop_emission_by_name (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *detailed_signal</CODE></EM>);</PRE>
<P>Stops a signal's current emission.</P>
<P>This is just like <A title=g_signal_stop_emission&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-stop-emission"><CODE class=function>g_signal_stop_emission()</CODE></A> except it will look up the signal id for you.</P>
<DIV class=refsect3><A name=g-signal-stop-emission-by-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the object whose signal handlers you wish to stop. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-override-class-closure></A>
<H3>g_signal_override_class_closure&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_override_class_closure (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                                 <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *class_closure</CODE></EM>);</PRE>
<P>Overrides the class closure (i.e. the default handler) for the given signal for emissions on instances of <EM class=parameter><CODE>instance_type</CODE></EM> . <EM class=parameter><CODE>instance_type</CODE></EM> must be derived from the type to which the signal belongs.</P>
<P>See <A title=g_signal_chain_from_overridden&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden"><CODE class=function>g_signal_chain_from_overridden()</CODE></A> and <A title=g_signal_chain_from_overridden_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden-handler"><CODE class=function>g_signal_chain_from_overridden_handler()</CODE></A> for how to chain up to the parent class closure from inside the overridden one.</P>
<DIV class=refsect3><A name=g-signal-override-class-closure.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal id</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P>the instance type on which to override the class closure for the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_closure</P></TD>
<TD class=parameter_description>
<P>the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-chain-from-overridden></A>
<H3>g_signal_chain_from_overridden&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_chain_from_overridden (<EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *instance_and_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>);</PRE>
<P>Calls the original class closure of a signal. This function should only be called from an overridden class closure; see <A title=g_signal_override_class_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-closure"><CODE class=function>g_signal_override_class_closure()</CODE></A> and <A title=g_signal_override_class_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-handler"><CODE class=function>g_signal_override_class_handler()</CODE></A>.</P>
<DIV class=refsect3><A name=g-signal-chain-from-overridden.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance_and_params</P></TD>
<TD class=parameter_description>
<P>(array) the argument list of the signal emission. The first element in the array is a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> for the instance the signal is being emitted on. The rest are any arguments to be passed to the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>Location for the return value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-new-class-handler></A>
<H3>g_signal_new_class_handler&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_signal_new_class_handler (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_name</CODE></EM>,
                            <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
                            <EM class=parameter><CODE><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> signal_flags</CODE></EM>,
                            <EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> class_handler</CODE></EM>,
                            <EM class=parameter><CODE><A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> accumulator</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> accu_data</CODE></EM>,
                            <EM class=parameter><CODE><A title=GSignalCMarshaller class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalCMarshaller"><SPAN class=type>GSignalCMarshaller</SPAN></A> c_marshaller</CODE></EM>,
                            <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> return_type</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_params</CODE></EM>,
                            <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a new signal. (This is usually done in the class initializer.)</P>
<P>This is a variant of <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A> that takes a C callback instead off a class offset for the signal's class handler. This function doesn't need a function pointer exposed in the class structure of an object definition, instead the function pointer is passed directly and can be overriden by derived classes with <A title=g_signal_override_class_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-closure"><CODE class=function>g_signal_override_class_closure()</CODE></A> or <A title=g_signal_override_class_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-handler"><CODE class=function>g_signal_override_class_handler()</CODE></A>and chained to with <A title=g_signal_chain_from_overridden&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden"><CODE class=function>g_signal_chain_from_overridden()</CODE></A> or <A title=g_signal_chain_from_overridden_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden-handler"><CODE class=function>g_signal_chain_from_overridden_handler()</CODE></A>.</P>
<P>See <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A> for information about signal names.</P>
<P>If c_marshaller is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A title=g_cclosure_marshal_generic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-generic"><CODE class=function>g_cclosure_marshal_generic()</CODE></A> will be used as the marshaller for this signal.</P>
<DIV class=refsect3><A name=g-signal-new-class-handler.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_name</P></TD>
<TD class=parameter_description>
<P>the name for the signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>the type this signal pertains to. It will also pertain to types which are derived from this type.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_flags</P></TD>
<TD class=parameter_description>
<P>a combination of <A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> specifying detail of when the default handler is to be invoked. You should at least specify <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-FIRST:CAPS"><CODE class=literal>G_SIGNAL_RUN_FIRST</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_handler</P></TD>
<TD class=parameter_description>
<P>a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> which acts as class implementation of this signal. Used to invoke a class method generically. Pass <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to not associate a class method with this signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>accumulator</P></TD>
<TD class=parameter_description>
<P>the accumulator for this signal; may be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>accu_data</P></TD>
<TD class=parameter_description>
<P>user data for the <EM class=parameter><CODE>accumulator</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>c_marshaller</P></TD>
<TD class=parameter_description>
<P>the function to translate arrays of parameter values to signal emissions into C language callback invocations or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>return_type</P></TD>
<TD class=parameter_description>
<P>the type of return value, or <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A> for a signal without a return value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the number of parameter types to follow.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>a list of types, one for each parameter.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-new-class-handler.returns></A>
<H4>Returns</H4>
<P>the signal id</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-18.html#api-index-2.18">2.18</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-override-class-handler></A>
<H3>g_signal_override_class_handler&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_override_class_handler (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_name</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> instance_type</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> class_handler</CODE></EM>);</PRE>
<P>Overrides the class closure (i.e. the default handler) for the given signal for emissions on instances of <EM class=parameter><CODE>instance_type</CODE></EM> with callback <EM class=parameter><CODE>class_handler</CODE></EM> . <EM class=parameter><CODE>instance_type</CODE></EM> must be derived from the type to which the signal belongs.</P>
<P>See <A title=g_signal_chain_from_overridden&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden"><CODE class=function>g_signal_chain_from_overridden()</CODE></A> and <A title=g_signal_chain_from_overridden_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-chain-from-overridden-handler"><CODE class=function>g_signal_chain_from_overridden_handler()</CODE></A> for how to chain up to the parent class closure from inside the overridden one.</P>
<DIV class=refsect3><A name=g-signal-override-class-handler.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_name</P></TD>
<TD class=parameter_description>
<P>the name for the signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>instance_type</P></TD>
<TD class=parameter_description>
<P>the instance type on which to override the class handler for the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>class_handler</P></TD>
<TD class=parameter_description>
<P>the handler.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-18.html#api-index-2.18">2.18</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-chain-from-overridden-handler></A>
<H3>g_signal_chain_from_overridden_handler&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_chain_from_overridden_handler
                               (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Calls the original class closure of a signal. This function should only be called from an overridden class closure; see <A title=g_signal_override_class_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-closure"><CODE class=function>g_signal_override_class_closure()</CODE></A> and <A title=g_signal_override_class_handler&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-override-class-handler"><CODE class=function>g_signal_override_class_handler()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-signal-chain-from-overridden-handler.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance the signal is being emitted on. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>parameters to be passed to the parent class closure, followed by a location for the return value. If the return type of the signal is <A title=G_TYPE_NONE class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-NONE:CAPS"><SPAN class=type>G_TYPE_NONE</SPAN></A>, the return value location can be omitted.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-18.html#api-index-2.18">2.18</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-add-emission-hook></A>
<H3>g_signal_add_emission_hook&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=returnvalue>gulong</SPAN></A>
g_signal_add_emission_hook (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> detail</CODE></EM>,
                            <EM class=parameter><CODE><A title=GSignalEmissionHook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalEmissionHook"><SPAN class=type>GSignalEmissionHook</SPAN></A> hook_func</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> hook_data</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> data_destroy</CODE></EM>);</PRE>
<P>Adds an emission hook for a signal, which will get called for any emission of that signal, independent of the instance. This is possible only for signals which don't have <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-NO-HOOKS:CAPS"><SPAN class=type>G_SIGNAL_NO_HOOKS</SPAN></A> flag set.</P>
<DIV class=refsect3><A name=g-signal-add-emission-hook.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the signal identifier, as returned by <A title=g_signal_lookup&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-lookup"><CODE class=function>g_signal_lookup()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>detail</P></TD>
<TD class=parameter_description>
<P>the detail on which to call the hook.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>hook_func</P></TD>
<TD class=parameter_description>
<P>a <A title=GSignalEmissionHook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalEmissionHook"><SPAN class=type>GSignalEmissionHook</SPAN></A> function.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>hook_data</P></TD>
<TD class=parameter_description>
<P>user data for <EM class=parameter><CODE>hook_func</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data_destroy</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> for <EM class=parameter><CODE>hook_data</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-add-emission-hook.returns></A>
<H4>Returns</H4>
<P>the hook id, for later use with <A title=g_signal_remove_emission_hook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-remove-emission-hook"><CODE class=function>g_signal_remove_emission_hook()</CODE></A>.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-remove-emission-hook></A>
<H3>g_signal_remove_emission_hook&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_signal_remove_emission_hook (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> signal_id</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> hook_id</CODE></EM>);</PRE>
<P>Deletes an emission hook.</P>
<DIV class=refsect3><A name=g-signal-remove-emission-hook.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signal_id</P></TD>
<TD class=parameter_description>
<P>the id of the signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>hook_id</P></TD>
<TD class=parameter_description>
<P>the id of the emission hook, as returned by <A title=g_signal_add_emission_hook&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-add-emission-hook"><CODE class=function>g_signal_add_emission_hook()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-parse-name></A>
<H3>g_signal_parse_name&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_signal_parse_name (<EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *detailed_signal</CODE></EM>,
                     <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *signal_id_p</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> *detail_p</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> force_detail_quark</CODE></EM>);</PRE>
<P>Internal function to parse a signal name into its <EM class=parameter><CODE>signal_id</CODE></EM> and <EM class=parameter><CODE>detail</CODE></EM> quark.</P>
<DIV class=refsect3><A name=g-signal-parse-name.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>detailed_signal</P></TD>
<TD class=parameter_description>
<P>a string of the form "signal-name::detail".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>The interface/instance type that introduced "signal-name".</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_id_p</P></TD>
<TD class=parameter_description>
<P>Location to store the signal id. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>detail_p</P></TD>
<TD class=parameter_description>
<P>Location to store the detail quark. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>force_detail_quark</P></TD>
<TD class=parameter_description>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> forces creation of a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> for the detail.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-parse-name.returns></A>
<H4>Returns</H4>
<P>Whether the signal name could successfully be parsed and <EM class=parameter><CODE>signal_id_p</CODE></EM> and <EM class=parameter><CODE>detail_p</CODE></EM> contain valid return values.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-get-invocation-hint></A>
<H3>g_signal_get_invocation_hint&nbsp;()</H3><PRE class=programlisting><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=returnvalue>GSignalInvocationHint</SPAN></A>&nbsp;*
g_signal_get_invocation_hint (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>);</PRE>
<P>Returns the invocation hint of the innermost signal emission of instance.</P>
<DIV class=refsect3><A name=g-signal-get-invocation-hint.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance to query. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-get-invocation-hint.returns></A>
<H4>Returns</H4>
<P>the invocation hint of the innermost signal emission. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-type-cclosure-new></A>
<H3>g_signal_type_cclosure_new&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_signal_type_cclosure_new (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> itype</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> struct_offset</CODE></EM>);</PRE>
<P>Creates a new closure which invokes the function found at the offset <EM class=parameter><CODE>struct_offset</CODE></EM> in the class structure of the interface or classed type identified by <EM class=parameter><CODE>itype</CODE></EM> .</P>
<DIV class=refsect3><A name=g-signal-type-cclosure-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>itype</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> identifier of an interface or classed type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>struct_offset</P></TD>
<TD class=parameter_description>
<P>the offset of the member function of <EM class=parameter><CODE>itype</CODE></EM> 's class structure which is to be invoked by the new closure</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-type-cclosure-new.returns></A>
<H4>Returns</H4>
<P>a new <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-accumulator-first-wins></A>
<H3>g_signal_accumulator_first_wins&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_signal_accumulator_first_wins (<EM class=parameter><CODE><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A> *ihint</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_accu</CODE></EM>,
                                 <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *handler_return</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> dummy</CODE></EM>);</PRE>
<P>A predefined <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> for signals intended to be used as a hook for application code to provide a particular value. Usually only one such value is desired and multiple handlers for the same signal don't make much sense (except for the case of the default handler defined in the class structure, in which case you will usually want the signal connection to override the class handler).</P>
<P>This accumulator will use the return value from the first signal handler that is run as the return value for the signal and not run any further handlers (ie: the first handler "wins").</P>
<DIV class=refsect3><A name=g-signal-accumulator-first-wins.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ihint</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_accu</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_return</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dummy</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-accumulator-first-wins.returns></A>
<H4>Returns</H4>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> result</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-28.html#api-index-2.28">2.28</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-signal-accumulator-true-handled></A>
<H3>g_signal_accumulator_true_handled&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_signal_accumulator_true_handled (<EM class=parameter><CODE><A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A> *ihint</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_accu</CODE></EM>,
                                   <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *handler_return</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> dummy</CODE></EM>);</PRE>
<P>A predefined <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> for signals that return a boolean values. The behavior that this accumulator gives is that a return of <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> stops the signal emission: no further callbacks will be invoked, while a return of <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> allows the emission to continue. The idea here is that a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> return indicates that the callback handled the signal, and no further handling is needed.</P>
<DIV class=refsect3><A name=g-signal-accumulator-true-handled.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ihint</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_accu</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_return</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dummy</P></TD>
<TD class=parameter_description>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> parameter</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-signal-accumulator-true-handled.returns></A>
<H4>Returns</H4>
<P>standard <A title=GSignalAccumulator&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalAccumulator"><SPAN class=type>GSignalAccumulator</SPAN></A> result</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-Signals.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GSignalInvocationHint></A>
<H3>struct GSignalInvocationHint</H3><PRE class=programlisting>struct GSignalInvocationHint {
  guint		signal_id;
  GQuark&nbsp;detail;
  GSignalFlags&nbsp;run_type;
};
</PRE>
<P>The <A title="struct GSignalInvocationHint" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalInvocationHint"><SPAN class=type>GSignalInvocationHint</SPAN></A> structure is used to pass on additional information to callbacks during a signal emission.</P>
<DIV class=refsect3><A name=GSignalInvocationHint.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalInvocationHint.signal-id></A>signal_id</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The signal id of the signal invoking the callback</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalInvocationHint.detail></A>detail</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The detail passed on for this emission</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalInvocationHint.run-type></A>run_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The stage the signal emission is currently in, this field will contain one of <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-FIRST:CAPS"><CODE class=literal>G_SIGNAL_RUN_FIRST</CODE></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS"><CODE class=literal>G_SIGNAL_RUN_LAST</CODE></A> or <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-RUN-CLEANUP:CAPS"><CODE class=literal>G_SIGNAL_RUN_CLEANUP</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GSignalCMarshaller></A>
<H3>GSignalCMarshaller</H3><PRE class=programlisting>typedef GClosureMarshal			 GSignalCMarshaller;
</PRE>
<P>This is the signature of marshaller functions, required to marshall arrays of parameter values to signal emissions into C language callback invocations. It is merely an alias to <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> since the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> mechanism takes over responsibility of actual function invocation for the signal system.</P></DIV>
<HR>

<DIV class=refsect2><A name=GSignalCVaMarshaller></A>
<H3>GSignalCVaMarshaller</H3><PRE class=programlisting>typedef GVaClosureMarshal		 GSignalCVaMarshaller;
</PRE>
<P>This is the signature of va_list marshaller functions, an optional marshaller that can be used in some situations to avoid marshalling the signal argument into GValues.</P></DIV>
<HR>

<DIV class=refsect2><A name=GSignalFlags></A>
<H3>enum GSignalFlags</H3>
<P>The signal flags are used to specify a signal's behaviour, the overall signal description outlines how especially the RUN flags control the stages of a signal emission.</P>
<DIV class=refsect3><A name=GSignalFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-RUN-FIRST:CAPS></A>G_SIGNAL_RUN_FIRST</P></TD>
<TD class=enum_member_description>
<P>Invoke the object method handler in the first emission stage.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-RUN-LAST:CAPS></A>G_SIGNAL_RUN_LAST</P></TD>
<TD class=enum_member_description>
<P>Invoke the object method handler in the third emission stage.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-RUN-CLEANUP:CAPS></A>G_SIGNAL_RUN_CLEANUP</P></TD>
<TD class=enum_member_description>
<P>Invoke the object method handler in the last emission stage.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-NO-RECURSE:CAPS></A>G_SIGNAL_NO_RECURSE</P></TD>
<TD class=enum_member_description>
<P>Signals being emitted for an object while currently being in emission for this very object will not be emitted recursively, but instead cause the first emission to be restarted.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-DETAILED:CAPS></A>G_SIGNAL_DETAILED</P></TD>
<TD class=enum_member_description>
<P>This signal supports "::detail" appendices to the signal name upon handler connections and emissions.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-ACTION:CAPS></A>G_SIGNAL_ACTION</P></TD>
<TD class=enum_member_description>
<P>Action signals are signals that may freely be emitted on alive objects from user code via <A title=g_signal_emit&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-emit"><CODE class=function>g_signal_emit()</CODE></A> and friends, without the need of being embedded into extra code that performs pre or post emission adjustments on the object. They can also be thought of as object methods which can be called generically by third-party code.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-NO-HOOKS:CAPS></A>G_SIGNAL_NO_HOOKS</P></TD>
<TD class=enum_member_description>
<P>No emissions hooks are supported for this signal.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MUST-COLLECT:CAPS></A>G_SIGNAL_MUST_COLLECT</P></TD>
<TD class=enum_member_description>
<P>Varargs signal emission will always collect the arguments, even if there are no signal handlers connected. Since 2.30.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-DEPRECATED:CAPS></A>G_SIGNAL_DEPRECATED</P></TD>
<TD class=enum_member_description>
<P>The signal is deprecated and will be removed in a future version. A warning will be generated if it is connected while running with G_ENABLE_DIAGNOSTIC=1. Since 2.32.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GSignalMatchType></A>
<H3>enum GSignalMatchType</H3>
<P>The match types specify what <A title=g_signal_handlers_block_matched&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-block-matched"><CODE class=function>g_signal_handlers_block_matched()</CODE></A>, <A title=g_signal_handlers_unblock_matched&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-unblock-matched"><CODE class=function>g_signal_handlers_unblock_matched()</CODE></A> and <A title=g_signal_handlers_disconnect_matched&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handlers-disconnect-matched"><CODE class=function>g_signal_handlers_disconnect_matched()</CODE></A> match signals by.</P>
<DIV class=refsect3><A name=GSignalMatchType.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MATCH-ID:CAPS></A>G_SIGNAL_MATCH_ID</P></TD>
<TD class=enum_member_description>
<P>The signal id must be equal.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MATCH-DETAIL:CAPS></A>G_SIGNAL_MATCH_DETAIL</P></TD>
<TD class=enum_member_description>
<P>The signal detail be equal.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MATCH-CLOSURE:CAPS></A>G_SIGNAL_MATCH_CLOSURE</P></TD>
<TD class=enum_member_description>
<P>The closure must be the same.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MATCH-FUNC:CAPS></A>G_SIGNAL_MATCH_FUNC</P></TD>
<TD class=enum_member_description>
<P>The C closure callback must be the same.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MATCH-DATA:CAPS></A>G_SIGNAL_MATCH_DATA</P></TD>
<TD class=enum_member_description>
<P>The closure data must be the same.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-SIGNAL-MATCH-UNBLOCKED:CAPS></A>G_SIGNAL_MATCH_UNBLOCKED</P></TD>
<TD class=enum_member_description>
<P>Only unblocked signals may matched.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GSignalQuery></A>
<H3>struct GSignalQuery</H3><PRE class=programlisting>struct GSignalQuery {
  guint		signal_id;
  const gchar  *signal_name;
  GType		itype;
  GSignalFlags&nbsp;signal_flags;
  GType		return_type; /* mangled with G_SIGNAL_TYPE_STATIC_SCOPE flag */
  guint		n_params;
  const GType  *param_types; /* mangled with G_SIGNAL_TYPE_STATIC_SCOPE flag */
};
</PRE>
<P>A structure holding in-depth information for a specific signal. It is filled in by the <A title=g_signal_query&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-query"><CODE class=function>g_signal_query()</CODE></A> function.</P>
<DIV class=refsect3><A name=GSignalQuery.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalQuery.signal-id></A>signal_id</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The signal id of the signal being queried, or 0 if the signal to be queried was unknown.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GSignalQuery.signal-name></A>signal_name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The signal name.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalQuery.itype></A>itype</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The interface/instance type that this signal can be emitted for.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalQuery.signal-flags></A>signal_flags</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The signal flags as passed in to <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalQuery.return-type></A>return_type</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The return type for user callbacks.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GSignalQuery.n-params></A>n_params</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The number of parameters that user callbacks take.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GSignalQuery.param-types></A>param_types</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>The individual parameter types for user callbacks, note that the effective callback signature is:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>@return_type <SPAN class=function>callback</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc ppc">#gpointer     data1,</SPAN>
<SPAN class="gtkdoc opt">[</SPAN>param_types param_names<SPAN class="gtkdoc opt">,]</SPAN>
gpointer     data2<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>. </P></TD>
<TD class=struct_member_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-SIGNAL-TYPE-STATIC-SCOPE:CAPS></A>
<H3>G_SIGNAL_TYPE_STATIC_SCOPE</H3><PRE class=programlisting>#define&nbsp;G_SIGNAL_TYPE_STATIC_SCOPE (G_TYPE_FLAG_RESERVED_ID_BIT)
</PRE>
<P>This macro flags signal argument types for which the signal system may assume that instances thereof remain persistent across all signal emissions they are used in. This is only useful for non ref-counted, value-copy types.</P>
<P>To flag a signal argument in this way, add <CODE class=literal>| G_SIGNAL_TYPE_STATIC_SCOPE</CODE> to the corresponding argument of <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A>.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new">g_signal_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"size_request"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-FROM-CLASS:CAPS">G_TYPE_FROM_CLASS</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gobject_class<SPAN class="gtkdoc opt">),</SPAN>
	 G_SIGNAL_RUN_FIRST<SPAN class="gtkdoc opt">,</SPAN>
	 <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#G-STRUCT-OFFSET:CAPS">G_STRUCT_OFFSET</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GtkWidgetClass<SPAN class="gtkdoc opt">,</SPAN> size_request<SPAN class="gtkdoc opt">),</SPAN>
	 NULL<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN>
	 _gtk_marshal_VOID__BOXED<SPAN class="gtkdoc opt">,</SPAN>
	 G_TYPE_NONE<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">,</SPAN>
	 GTK_TYPE_REQUISITION <SPAN class="gtkdoc opt">|</SPAN> G_SIGNAL_TYPE_STATIC_SCOPE<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<HR>

<DIV class=refsect2><A name=G-SIGNAL-MATCH-MASK:CAPS></A>
<H3>G_SIGNAL_MATCH_MASK</H3><PRE class=programlisting>#define G_SIGNAL_MATCH_MASK  0x3f
</PRE>
<P>A mask for all <A title="enum GSignalMatchType" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalMatchType"><SPAN class=type>GSignalMatchType</SPAN></A> bits.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-SIGNAL-FLAGS-MASK:CAPS></A>
<H3>G_SIGNAL_FLAGS_MASK</H3><PRE class=programlisting>#define G_SIGNAL_FLAGS_MASK  0x1ff
</PRE>
<P>A mask for all <A title="enum GSignalFlags" class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#GSignalFlags"><SPAN class=type>GSignalFlags</SPAN></A> bits.</P></DIV>
<HR>

<DIV class=refsect2><A name=GConnectFlags></A>
<H3>enum GConnectFlags</H3>
<P>The connection flags are used to specify the behaviour of a signal's connection.</P>
<DIV class=refsect3><A name=GConnectFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONNECT-AFTER:CAPS></A>G_CONNECT_AFTER</P></TD>
<TD class=enum_member_description>
<P>whether the handler should be called before or after the default handler of the signal.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONNECT-SWAPPED:CAPS></A>G_CONNECT_SWAPPED</P></TD>
<TD class=enum_member_description>
<P>whether the instance and data should be swapped when calling the handler; see <A title=g_signal_connect_swapped() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-swapped"><CODE class=function>g_signal_connect_swapped()</CODE></A> for an example.</P></TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="24147">Topic #24147: Closures.. Closures &#38323;?Functions as first-class objects.. .. Functions.. #defineG_CLOSURE_NEEDS_MARSHAL() .. #defineG_CLOSURE_N_NOTIFIERS() .. #defineG_CCLOSURE_SWAP_DATA() ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Closures</SPAN></H2>
<P>Closures &#8212; Functions as first-class objects</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Closures.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_CLOSURE_NEEDS_MARSHAL() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CLOSURE-NEEDS-MARSHAL:CAPS">G_CLOSURE_NEEDS_MARSHAL</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_CLOSURE_N_NOTIFIERS() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CLOSURE-N-NOTIFIERS:CAPS">G_CLOSURE_N_NOTIFIERS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_CCLOSURE_SWAP_DATA() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CCLOSURE-SWAP-DATA:CAPS">G_CCLOSURE_SWAP_DATA</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_CALLBACK() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CALLBACK:CAPS">G_CALLBACK</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback">*GCallback</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal">*GClosureMarshal</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal">*GVaClosureMarshal</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify">*GClosureNotify</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_cclosure_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new">g_cclosure_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_cclosure_new_swap&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new-swap">g_cclosure_new_swap</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_cclosure_new_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new-object">g_cclosure_new_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_cclosure_new_object_swap&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new-object-swap">g_cclosure_new_object_swap</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_generic&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-generic">g_cclosure_marshal_generic</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_closure_new_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-new-object">g_closure_new_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_closure_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-ref">g_closure_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-sink">g_closure_sink</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-unref">g_closure_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke">g_closure_invoke</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate">g_closure_invalidate</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_add_finalize_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-finalize-notifier">g_closure_add_finalize_notifier</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_add_invalidate_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-invalidate-notifier">g_closure_add_invalidate_notifier</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_remove_finalize_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-remove-finalize-notifier">g_closure_remove_finalize_notifier</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_remove_invalidate_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-remove-invalidate-notifier">g_closure_remove_invalidate_notifier</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_closure_new_simple&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-new-simple">g_closure_new_simple</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal">g_closure_set_marshal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_add_marshal_guards&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-marshal-guards">g_closure_add_marshal_guards</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal">g_closure_set_meta_marshal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_source_set_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-source-set-closure">g_source_set_closure</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_source_set_dummy_callback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-source-set-dummy-callback">g_source_set_dummy_callback</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__VOID&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--VOID">g_cclosure_marshal_VOID__VOID</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__BOOLEAN&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--BOOLEAN">g_cclosure_marshal_VOID__BOOLEAN</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__CHAR&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--CHAR">g_cclosure_marshal_VOID__CHAR</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__UCHAR&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UCHAR">g_cclosure_marshal_VOID__UCHAR</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__INT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--INT">g_cclosure_marshal_VOID__INT</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__UINT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UINT">g_cclosure_marshal_VOID__UINT</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__LONG&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--LONG">g_cclosure_marshal_VOID__LONG</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__ULONG&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--ULONG">g_cclosure_marshal_VOID__ULONG</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__ENUM&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--ENUM">g_cclosure_marshal_VOID__ENUM</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__FLAGS&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--FLAGS">g_cclosure_marshal_VOID__FLAGS</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__FLOAT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--FLOAT">g_cclosure_marshal_VOID__FLOAT</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__DOUBLE&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--DOUBLE">g_cclosure_marshal_VOID__DOUBLE</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__STRING&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--STRING">g_cclosure_marshal_VOID__STRING</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__PARAM&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--PARAM">g_cclosure_marshal_VOID__PARAM</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__BOXED&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--BOXED">g_cclosure_marshal_VOID__BOXED</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__POINTER&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--POINTER">g_cclosure_marshal_VOID__POINTER</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__OBJECT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--OBJECT">g_cclosure_marshal_VOID__OBJECT</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__VARIANT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--VARIANT">g_cclosure_marshal_VOID__VARIANT</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_STRING__OBJECT_POINTER&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-STRING--OBJECT-POINTER">g_cclosure_marshal_STRING__OBJECT_POINTER</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__UINT_POINTER&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UINT-POINTER">g_cclosure_marshal_VOID__UINT_POINTER</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_BOOLEAN__FLAGS&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--FLAGS">g_cclosure_marshal_BOOLEAN__FLAGS</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_BOOLEAN__BOXED_BOXED&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--BOXED-BOXED">g_cclosure_marshal_BOOLEAN__BOXED_BOXED</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_generic_va&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-generic-va">g_cclosure_marshal_generic_va</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__VOIDv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--VOIDv">g_cclosure_marshal_VOID__VOIDv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__BOOLEANv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--BOOLEANv">g_cclosure_marshal_VOID__BOOLEANv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__CHARv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--CHARv">g_cclosure_marshal_VOID__CHARv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__UCHARv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UCHARv">g_cclosure_marshal_VOID__UCHARv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__INTv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--INTv">g_cclosure_marshal_VOID__INTv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__UINTv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UINTv">g_cclosure_marshal_VOID__UINTv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__LONGv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--LONGv">g_cclosure_marshal_VOID__LONGv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__ULONGv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--ULONGv">g_cclosure_marshal_VOID__ULONGv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__ENUMv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--ENUMv">g_cclosure_marshal_VOID__ENUMv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__FLAGSv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--FLAGSv">g_cclosure_marshal_VOID__FLAGSv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__FLOATv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--FLOATv">g_cclosure_marshal_VOID__FLOATv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__DOUBLEv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--DOUBLEv">g_cclosure_marshal_VOID__DOUBLEv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__STRINGv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--STRINGv">g_cclosure_marshal_VOID__STRINGv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__PARAMv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--PARAMv">g_cclosure_marshal_VOID__PARAMv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__BOXEDv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--BOXEDv">g_cclosure_marshal_VOID__BOXEDv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__POINTERv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--POINTERv">g_cclosure_marshal_VOID__POINTERv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__OBJECTv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--OBJECTv">g_cclosure_marshal_VOID__OBJECTv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__VARIANTv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--VARIANTv">g_cclosure_marshal_VOID__VARIANTv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_STRING__OBJECT_POINTERv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-STRING--OBJECT-POINTERv">g_cclosure_marshal_STRING__OBJECT_POINTERv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_VOID__UINT_POINTERv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UINT-POINTERv">g_cclosure_marshal_VOID__UINT_POINTERv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_BOOLEAN__FLAGSv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--FLAGSv">g_cclosure_marshal_BOOLEAN__FLAGSv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--BOXED-BOXEDv">g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Closures.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure">GClosure</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_CLOSURE class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-TYPE-CLOSURE:CAPS">G_TYPE_CLOSURE</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure">GCClosure</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_cclosure_marshal_BOOL__FLAGS class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOL--FLAGS">g_cclosure_marshal_BOOL__FLAGS</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_cclosure_marshal_BOOL__BOXED_BOXED class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOL--BOXED-BOXED">g_cclosure_marshal_BOOL__BOXED_BOXED</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Closures.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Closures.description></A>
<H2>Description</H2>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> represents a callback supplied by the programmer. It will generally comprise a function of some kind and a marshaller used to call it. It is the responsibility of the marshaller to convert the arguments for the invocation from <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> into a suitable form, perform the callback on the converted arguments, and transform the return value back into a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>.</P>
<P>In the case of C programs, a closure usually just holds a pointer to a function and maybe a data argument, and the marshaller converts between <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> and native C types. The GObject library provides the <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A> type for this purpose. Bindings for other languages need marshallers which convert between <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>&lt;!-- --&gt;s and suitable representations in the runtime of the language in order to use functions written in that languages as callbacks.</P>
<P>Within GObject, closures play an important role in the implementation of signals. When a signal is registered, the <EM class=parameter><CODE>c_marshaller</CODE></EM> argument to <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A> specifies the default C marshaller for any closure which is connected to this signal. GObject provides a number of C marshallers for this purpose, see the g_cclosure_marshal_*() functions. Additional C marshallers can be generated with the glib-genmarshal utility. Closures can be explicitly connected to signals with <A title=g_signal_connect_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect-closure"><CODE class=function>g_signal_connect_closure()</CODE></A>, but it usually more convenient to let GObject create a closure automatically by using one of the g_signal_connect_*() functions which take a callback function/user data pair.</P>
<P>Using closures has a number of important advantages over a simple callback function/data pointer combination:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P>Closures allow the callee to get the types of the callback parameters, which means that language bindings don't have to write individual glue for each callback type.</P></LI>
<LI class=listitem>
<P>The reference counting of <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> makes it easy to handle reentrancy right; if a callback is removed while it is being invoked, the closure and its parameters won't be freed until the invocation finishes.</P></LI>
<LI class=listitem>
<P>g_closure_invalidate() and invalidation notifiers allow callbacks to be automatically removed when the objects they point to go away.</P></LI></UL></DIV></DIV>
<DIV class=refsect1><A name=gobject-Closures.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-CLOSURE-NEEDS-MARSHAL:CAPS></A>
<H3>G_CLOSURE_NEEDS_MARSHAL()</H3><PRE class=programlisting>#define&nbsp;G_CLOSURE_NEEDS_MARSHAL(closure) (((GClosure*) (closure))-&gt;marshal == NULL)
</PRE>
<P>Check if the closure still needs a marshaller. See <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A>.</P>
<DIV class=refsect3><A name=G-CLOSURE-NEEDS-MARSHAL.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-CLOSURE-NEEDS-MARSHAL.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> marshaller has not yet been set on <EM class=parameter><CODE>closure</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-CLOSURE-N-NOTIFIERS:CAPS></A>
<H3>G_CLOSURE_N_NOTIFIERS()</H3><PRE class=programlisting>#define             G_CLOSURE_N_NOTIFIERS(cl)</PRE>
<P>Get the total number of notifiers connected with the closure <EM class=parameter><CODE>cl</CODE></EM> . The count includes the meta marshaller, the finalize and invalidate notifiers and the marshal guards. Note that each guard counts as two notifiers. See <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>, <A title=g_closure_add_finalize_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-finalize-notifier"><CODE class=function>g_closure_add_finalize_notifier()</CODE></A>, <A title=g_closure_add_invalidate_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-invalidate-notifier"><CODE class=function>g_closure_add_invalidate_notifier()</CODE></A> and <A title=g_closure_add_marshal_guards&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-marshal-guards"><CODE class=function>g_closure_add_marshal_guards()</CODE></A>.</P>
<DIV class=refsect3><A name=G-CLOSURE-N-NOTIFIERS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>cl</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-CLOSURE-N-NOTIFIERS.returns></A>
<H4>Returns</H4>
<P>number of notifiers</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-CCLOSURE-SWAP-DATA:CAPS></A>
<H3>G_CCLOSURE_SWAP_DATA()</H3><PRE class=programlisting>#define&nbsp;G_CCLOSURE_SWAP_DATA(cclosure)	 (((GClosure*) (cclosure))-&gt;derivative_flag)
</PRE>
<P>Checks whether the user data of the <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A> should be passed as the first parameter to the callback. See <A title=g_cclosure_new_swap&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new-swap"><CODE class=function>g_cclosure_new_swap()</CODE></A>.</P>
<DIV class=refsect3><A name=G-CCLOSURE-SWAP-DATA.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>cclosure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-CCLOSURE-SWAP-DATA.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if data has to be swapped.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-CALLBACK:CAPS></A>
<H3>G_CALLBACK()</H3><PRE class=programlisting>#define&nbsp;G_CALLBACK(f)			 ((GCallback) (f))
</PRE>
<P>Cast a function pointer to a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A>.</P>
<DIV class=refsect3><A name=G-CALLBACK.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>f</P></TD>
<TD class=parameter_description>
<P>a function pointer.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GCallback></A>
<H3>GCallback&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GCallback<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>The type used for callback functions in structure definitions and function signatures. This doesn't mean that all callback functions must take no parameters and return void. The required signature of a callback function is determined by the context in which is used (e.g. the signal to which it is connected). Use <A title=G_CALLBACK() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CALLBACK:CAPS"><CODE class=function>G_CALLBACK()</CODE></A> to cast the callback function to a <A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GClosureMarshal></A>
<H3>GClosureMarshal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GClosureMarshal<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                    <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                    <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>The type used for marshaller functions.</P>
<DIV class=refsect3><A name=GClosureMarshal.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_values</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>an array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of <EM class=parameter><CODE>closure</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_param_values]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>the invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GVaClosureMarshal></A>
<H3>GVaClosureMarshal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GVaClosureMarshal<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                      <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                      <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                      <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                      <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>This is the signature of va_list marshaller functions, an optional marshaller that can be used in some situations to avoid marshalling the signal argument into GValues.</P>
<DIV class=refsect3><A name=GVaClosureMarshal.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GClosureNotify></A>
<H3>GClosureNotify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GClosureNotify<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                   <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>The type used for the various notification callbacks which can be registered on closures.</P>
<DIV class=refsect3><A name=GClosureNotify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data specified when registering the notification callback</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> on which the notification is emitted</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-new></A>
<H3>g_cclosure_new&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_cclosure_new (<EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> callback_func</CODE></EM>,
                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>,
                <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> destroy_data</CODE></EM>);</PRE>
<P>Creates a new closure which invokes <EM class=parameter><CODE>callback_func</CODE></EM> with <EM class=parameter><CODE>user_data</CODE></EM> as the last parameter.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-cclosure-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>callback_func</P></TD>
<TD class=parameter_description>
<P>the function to invoke</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to <EM class=parameter><CODE>callback_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> callback_func]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy_data</P></TD>
<TD class=parameter_description>
<P>destroy notify to be called when <EM class=parameter><CODE>user_data</CODE></EM> is no longer used</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-cclosure-new.returns></A>
<H4>Returns</H4>
<P>a new <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-new-swap></A>
<H3>g_cclosure_new_swap&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_cclosure_new_swap (<EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> callback_func</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>,
                     <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> destroy_data</CODE></EM>);</PRE>
<P>Creates a new closure which invokes <EM class=parameter><CODE>callback_func</CODE></EM> with <EM class=parameter><CODE>user_data</CODE></EM> as the first parameter.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-cclosure-new-swap.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>callback_func</P></TD>
<TD class=parameter_description>
<P>the function to invoke</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to <EM class=parameter><CODE>callback_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> callback_func]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy_data</P></TD>
<TD class=parameter_description>
<P>destroy notify to be called when <EM class=parameter><CODE>user_data</CODE></EM> is no longer used</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-cclosure-new-swap.returns></A>
<H4>Returns</H4>
<P>a new <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-new-object></A>
<H3>g_cclosure_new_object&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_cclosure_new_object (<EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> callback_func</CODE></EM>,
                       <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>A variant of <A title=g_cclosure_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new"><CODE class=function>g_cclosure_new()</CODE></A> which uses <EM class=parameter><CODE>object</CODE></EM> as <EM class=parameter><CODE>user_data</CODE></EM> and calls <A title=g_object_watch_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-watch-closure"><CODE class=function>g_object_watch_closure()</CODE></A> on <EM class=parameter><CODE>object</CODE></EM> and the created closure. This function is useful when you have a callback closely associated with a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>, and want the callback to no longer run after the object is is freed.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-cclosure-new-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>callback_func</P></TD>
<TD class=parameter_description>
<P>the function to invoke</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> pointer to pass to <EM class=parameter><CODE>callback_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-cclosure-new-object.returns></A>
<H4>Returns</H4>
<P>a new <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-new-object-swap></A>
<H3>g_cclosure_new_object_swap&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_cclosure_new_object_swap (<EM class=parameter><CODE><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> callback_func</CODE></EM>,
                            <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>A variant of <A title=g_cclosure_new_swap&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new-swap"><CODE class=function>g_cclosure_new_swap()</CODE></A> which uses <EM class=parameter><CODE>object</CODE></EM> as <EM class=parameter><CODE>user_data</CODE></EM> and calls <A title=g_object_watch_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-watch-closure"><CODE class=function>g_object_watch_closure()</CODE></A> on <EM class=parameter><CODE>object</CODE></EM> and the created closure. This function is useful when you have a callback closely associated with a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>, and want the callback to no longer run after the object is is freed.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-cclosure-new-object-swap.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>callback_func</P></TD>
<TD class=parameter_description>
<P>the function to invoke</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> pointer to pass to <EM class=parameter><CODE>callback_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-cclosure-new-object-swap.returns></A>
<H4>Returns</H4>
<P>a new <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-generic></A>
<H3>g_cclosure_marshal_generic&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_generic (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                            <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_gvalue</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                            <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A generic marshaller function implemented via <A class=ulink href="http://sourceware.org/libffi/" target=_top>libffi</A>.</P>
<P>Normally this function is not passed explicitly to <A title=g_signal_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-new"><CODE class=function>g_signal_new()</CODE></A>, but used automatically by GLib when specifying a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> marshaller.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-generic.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_gvalue</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-new-object></A>
<H3>g_closure_new_object&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_closure_new_object (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> sizeof_closure</CODE></EM>,
                      <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>A variant of <A title=g_closure_new_simple&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-new-simple"><CODE class=function>g_closure_new_simple()</CODE></A> which stores <EM class=parameter><CODE>object</CODE></EM> in the <EM class=parameter><CODE>data</CODE></EM> field of the closure and calls <A title=g_object_watch_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-watch-closure"><CODE class=function>g_object_watch_closure()</CODE></A> on <EM class=parameter><CODE>object</CODE></EM> and the created closure. This function is mainly useful when implementing new types of closures.</P>
<DIV class=refsect3><A name=g-closure-new-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>sizeof_closure</P></TD>
<TD class=parameter_description>
<P>the size of the structure to allocate, must be at least <CODE class=literal>sizeof (GClosure)</CODE></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> pointer to store in the <EM class=parameter><CODE>data</CODE></EM> field of the newly allocated <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-closure-new-object.returns></A>
<H4>Returns</H4>
<P>a newly allocated <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-ref></A>
<H3>g_closure_ref&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_closure_ref (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>Increments the reference count on a closure to force it staying alive while the caller holds a pointer to it.</P>
<DIV class=refsect3><A name=g-closure-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to increment the reference count on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-closure-ref.returns></A>
<H4>Returns</H4>
<P>The <EM class=parameter><CODE>closure</CODE></EM> passed in, for convenience. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-sink></A>
<H3>g_closure_sink&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_sink (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>Takes over the initial ownership of a closure. Each closure is initially created in a "floating" state, which means that the initial reference count is not owned by any caller. <A title=g_closure_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-sink"><CODE class=function>g_closure_sink()</CODE></A> checks to see if the object is still floating, and if so, unsets the floating state and decreases the reference count. If the closure is not floating, <A title=g_closure_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-sink"><CODE class=function>g_closure_sink()</CODE></A> does nothing. The reason for the existence of the floating state is to prevent cumbersome code sequences like:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>closure <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new">g_cclosure_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>cb_func<SPAN class="gtkdoc opt">,</SPAN> cb_data<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-source-set-closure">g_source_set_closure</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>source<SPAN class="gtkdoc opt">,</SPAN> closure<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-unref">g_closure_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>closure<SPAN class="gtkdoc opt">);</SPAN> <SPAN class="gtkdoc slc">// GObject doesn't really need this</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Because <A title=g_source_set_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-source-set-closure"><CODE class=function>g_source_set_closure()</CODE></A> (and similar functions) take ownership of the initial reference count, if it is unowned, we instead can write:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-source-set-closure">g_source_set_closure</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>source<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new">g_cclosure_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>cb_func<SPAN class="gtkdoc opt">,</SPAN> cb_data<SPAN class="gtkdoc opt">));</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Generally, this function is used together with <A title=g_closure_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-ref"><CODE class=function>g_closure_ref()</CODE></A>. Ane example of storing a closure for later notification looks like:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static</SPAN> GClosure <SPAN class="gtkdoc opt">*</SPAN>notify_closure <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>foo_notify_set_closure</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GClosure <SPAN class="gtkdoc opt">*</SPAN>closure<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>notify_closure<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-unref">g_closure_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>notify_closure<SPAN class="gtkdoc opt">);</SPAN>
  notify_closure <SPAN class="gtkdoc opt">=</SPAN> closure<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>notify_closure<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-ref">g_closure_ref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>notify_closure<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-sink">g_closure_sink</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>notify_closure<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Because <A title=g_closure_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-sink"><CODE class=function>g_closure_sink()</CODE></A> may decrement the reference count of a closure (if it hasn't been called on <EM class=parameter><CODE>closure</CODE></EM> yet) just like <A title=g_closure_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-unref"><CODE class=function>g_closure_unref()</CODE></A>, <A title=g_closure_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-ref"><CODE class=function>g_closure_ref()</CODE></A> should be called prior to this function.</P>
<DIV class=refsect3><A name=g-closure-sink.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to decrement the initial reference count on, if it's still being held</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-unref></A>
<H3>g_closure_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_unref (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>Decrements the reference count of a closure after it was previously incremented by the same caller. If no other callers are using the closure, then the closure will be destroyed and freed.</P>
<DIV class=refsect3><A name=g-closure-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to decrement the reference count on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-invoke></A>
<H3>g_closure_invoke&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_invoke (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                  <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>);</PRE>
<P>Invokes the closure, i.e. executes the callback represented by the <EM class=parameter><CODE>closure</CODE></EM> .</P>
<DIV class=refsect3><A name=g-closure-invoke.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed instead of a pointer to a location."><SPAN class=acronym>optional</SPAN></ACRONYM>][<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_values</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>an array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of <EM class=parameter><CODE>closure</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_param_values]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>a context-dependent invocation hint. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-invalidate></A>
<H3>g_closure_invalidate&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_invalidate (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>Sets a flag on the closure to indicate that its calling environment has become invalid, and thus causes any future invocations of <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A> on this <EM class=parameter><CODE>closure</CODE></EM> to be ignored. Also, invalidation notifiers installed on the closure will be called at this point. Note that unless you are holding a reference to the closure yourself, the invalidation notifiers may unref the closure and cause it to be destroyed, so if you need to access the closure after calling <A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate"><CODE class=function>g_closure_invalidate()</CODE></A>, make sure that you've previously called <A title=g_closure_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-ref"><CODE class=function>g_closure_ref()</CODE></A>.</P>
<P>Note that <A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate"><CODE class=function>g_closure_invalidate()</CODE></A> will also be called when the reference count of a closure drops to zero (unless it has already been invalidated before).</P>
<DIV class=refsect3><A name=g-closure-invalidate.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>GClosure to invalidate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-add-finalize-notifier></A>
<H3>g_closure_add_finalize_notifier&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_add_finalize_notifier (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> notify_data</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> notify_func</CODE></EM>);</PRE>
<P>Registers a finalization notifier which will be called when the reference count of <EM class=parameter><CODE>closure</CODE></EM> goes down to 0. Multiple finalization notifiers on a single closure are invoked in unspecified order. If a single call to <A title=g_closure_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-unref"><CODE class=function>g_closure_unref()</CODE></A> results in the closure being both invalidated and finalized, then the invalidate notifiers will be run before the finalize notifiers.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-add-finalize-notifier.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>notify_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> notify_func]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_func</P></TD>
<TD class=parameter_description>
<P>the callback function to register</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-add-invalidate-notifier></A>
<H3>g_closure_add_invalidate_notifier&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_add_invalidate_notifier (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> notify_data</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> notify_func</CODE></EM>);</PRE>
<P>Registers an invalidation notifier which will be called when the <EM class=parameter><CODE>closure</CODE></EM> is invalidated with <A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate"><CODE class=function>g_closure_invalidate()</CODE></A>. Invalidation notifiers are invoked before finalization notifiers, in an unspecified order.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-add-invalidate-notifier.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>notify_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> notify_func]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_func</P></TD>
<TD class=parameter_description>
<P>the callback function to register</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-remove-finalize-notifier></A>
<H3>g_closure_remove_finalize_notifier&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_remove_finalize_notifier (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> notify_data</CODE></EM>,
                                    <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> notify_func</CODE></EM>);</PRE>
<P>Removes a finalization notifier.</P>
<P>Notice that notifiers are automatically removed after they are run.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-remove-finalize-notifier.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_data</P></TD>
<TD class=parameter_description>
<P>data which was passed to <A title=g_closure_add_finalize_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-finalize-notifier"><CODE class=function>g_closure_add_finalize_notifier()</CODE></A> when registering <EM class=parameter><CODE>notify_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_func</P></TD>
<TD class=parameter_description>
<P>the callback function to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-remove-invalidate-notifier></A>
<H3>g_closure_remove_invalidate_notifier&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_remove_invalidate_notifier (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> notify_data</CODE></EM>,
                                      <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> notify_func</CODE></EM>);</PRE>
<P>Removes an invalidation notifier.</P>
<P>Notice that notifiers are automatically removed after they are run.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-remove-invalidate-notifier.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_data</P></TD>
<TD class=parameter_description>
<P>data which was passed to <A title=g_closure_add_invalidate_notifier&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-invalidate-notifier"><CODE class=function>g_closure_add_invalidate_notifier()</CODE></A> when registering <EM class=parameter><CODE>notify_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify_func</P></TD>
<TD class=parameter_description>
<P>the callback function to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-new-simple></A>
<H3>g_closure_new_simple&nbsp;()</H3><PRE class=programlisting><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=returnvalue>GClosure</SPAN></A>&nbsp;*
g_closure_new_simple (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> sizeof_closure</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Allocates a struct of the given size and initializes the initial part as a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>. This function is mainly useful when implementing new types of closures.</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN> _MyClosure MyClosure<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">struct</SPAN> _MyClosure
<SPAN class="gtkdoc opt">{</SPAN>
  GClosure closure<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class="gtkdoc slc">// extra data goes here</SPAN>
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_closure_finalize</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer  notify_data<SPAN class="gtkdoc opt">,</SPAN>
                     GClosure <SPAN class="gtkdoc opt">*</SPAN>closure<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  MyClosure <SPAN class="gtkdoc opt">*</SPAN>my_closure <SPAN class="gtkdoc opt">= (</SPAN>MyClosure <SPAN class="gtkdoc opt">*)</SPAN>closure<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class="gtkdoc slc">// free extra data here</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

MyClosure <SPAN class="gtkdoc opt">*</SPAN><SPAN class=function>my_closure_new</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GClosure <SPAN class="gtkdoc opt">*</SPAN>closure<SPAN class="gtkdoc opt">;</SPAN>
  MyClosure <SPAN class="gtkdoc opt">*</SPAN>my_closure<SPAN class="gtkdoc opt">;</SPAN>

  closure <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-new-simple">g_closure_new_simple</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyClosure<SPAN class="gtkdoc opt">),</SPAN> data<SPAN class="gtkdoc opt">);</SPAN>
  my_closure <SPAN class="gtkdoc opt">= (</SPAN>MyClosure <SPAN class="gtkdoc opt">*)</SPAN> closure<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class="gtkdoc slc">// initialize extra data here</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-add-finalize-notifier">g_closure_add_finalize_notifier</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>closure<SPAN class="gtkdoc opt">,</SPAN> notify_data<SPAN class="gtkdoc opt">,</SPAN>
                                   my_closure_finalize<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>return</SPAN> my_closure<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-closure-new-simple.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>sizeof_closure</P></TD>
<TD class=parameter_description>
<P>the size of the structure to allocate, must be at least <CODE class=literal>sizeof (GClosure)</CODE></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to store in the <EM class=parameter><CODE>data</CODE></EM> field of the newly allocated <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-closure-new-simple.returns></A>
<H4>Returns</H4>
<P>a newly allocated <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-set-marshal></A>
<H3>g_closure_set_marshal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_set_marshal (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                       <EM class=parameter><CODE><A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> marshal</CODE></EM>);</PRE>
<P>Sets the marshaller of <EM class=parameter><CODE>closure</CODE></EM> . The <CODE class=literal>marshal_data</CODE> of <EM class=parameter><CODE>marshal</CODE></EM> provides a way for a meta marshaller to provide additional information to the marshaller. (See <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>.) For GObject's C predefined marshallers (the g_cclosure_marshal_*() functions), what it provides is a callback function to use instead of <EM class=parameter><CODE>closure-&gt;callback</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-set-marshal.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal</P></TD>
<TD class=parameter_description>
<P>a <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-add-marshal-guards></A>
<H3>g_closure_add_marshal_guards&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_add_marshal_guards (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> pre_marshal_data</CODE></EM>,
                              <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> pre_marshal_notify</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> post_marshal_data</CODE></EM>,
                              <EM class=parameter><CODE><A title=GClosureNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureNotify"><SPAN class=type>GClosureNotify</SPAN></A> post_marshal_notify</CODE></EM>);</PRE>
<P>Adds a pair of notifiers which get invoked before and after the closure callback, respectively. This is typically used to protect the extra arguments for the duration of the callback. See <A title=g_object_watch_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-watch-closure"><CODE class=function>g_object_watch_closure()</CODE></A> for an example of marshal guards.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-add-marshal-guards.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pre_marshal_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>pre_marshal_notify</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> pre_marshal_notify]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>pre_marshal_notify</P></TD>
<TD class=parameter_description>
<P>a function to call before the closure callback</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>post_marshal_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>post_marshal_notify</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> post_marshal_notify]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>post_marshal_notify</P></TD>
<TD class=parameter_description>
<P>a function to call after the closure callback</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-closure-set-meta-marshal></A>
<H3>g_closure_set_meta_marshal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_closure_set_meta_marshal (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                            <EM class=parameter><CODE><A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> meta_marshal</CODE></EM>);</PRE>
<P>Sets the meta marshaller of <EM class=parameter><CODE>closure</CODE></EM> . A meta marshaller wraps <EM class=parameter><CODE>closure-&gt;marshal</CODE></EM> and modifies the way it is called in some fashion. The most common use of this facility is for C callbacks. The same marshallers (generated by glib-genmarshal), are used everywhere, but the way that we get the callback function differs. In most cases we want to use <EM class=parameter><CODE>closure-&gt;callback</CODE></EM> , but in other cases we want to use some different technique to retrieve the callback function.</P>
<P>For example, class closures for signals (see <A title=g_signal_type_cclosure_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-type-cclosure-new"><CODE class=function>g_signal_type_cclosure_new()</CODE></A>) retrieve the callback function from a fixed offset in the class structure. The meta marshaller retrieves the right callback and passes it to the marshaller as the <EM class=parameter><CODE>marshal_data</CODE></EM> argument.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-closure-set-meta-marshal.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>context-dependent data to pass to <EM class=parameter><CODE>meta_marshal</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM> meta_marshal]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>meta_marshal</P></TD>
<TD class=parameter_description>
<P>a <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-source-set-closure></A>
<H3>g_source_set_closure&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_closure (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                      <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>Set the callback for a source as a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P>
<P>If the source is not one of the standard GLib types, the <EM class=parameter><CODE>closure_callback</CODE></EM> and <EM class=parameter><CODE>closure_marshal</CODE></EM> fields of the <A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> structure must have been filled in with pointers to appropriate functions.</P>
<DIV class=refsect3><A name=g-source-set-closure.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-source-set-dummy-callback></A>
<H3>g_source_set_dummy_callback&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_dummy_callback (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Sets a dummy callback for <EM class=parameter><CODE>source</CODE></EM> . The callback will do nothing, and if the source expects a <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> return value, it will return <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. (If the source expects any other type of return value, it will return a 0/<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> value; whatever <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A> initializes a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to for that type.)</P>
<P>If the source is not one of the standard GLib types, the <EM class=parameter><CODE>closure_callback</CODE></EM> and <EM class=parameter><CODE>closure_marshal</CODE></EM> fields of the <A href="https://developer.gnome.org/gobject/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> structure must have been filled in with pointers to appropriate functions.</P>
<DIV class=refsect3><A name=g-source-set-dummy-callback.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--VOID></A>
<H3>g_cclosure_marshal_VOID__VOID&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__VOID (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                               <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with no arguments.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--VOID.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--BOOLEAN></A>
<H3>g_cclosure_marshal_VOID__BOOLEAN&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__BOOLEAN (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                  <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single boolean argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--BOOLEAN.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--CHAR></A>
<H3>g_cclosure_marshal_VOID__CHAR&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__CHAR (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                               <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single character argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--CHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--UCHAR></A>
<H3>g_cclosure_marshal_VOID__UCHAR&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__UCHAR (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single unsigned character argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--UCHAR.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--INT></A>
<H3>g_cclosure_marshal_VOID__INT&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__INT (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                              <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                              <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single integer argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--INT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--UINT></A>
<H3>g_cclosure_marshal_VOID__UINT&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__UINT (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                               <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with with a single unsigned integer argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--UINT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--LONG></A>
<H3>g_cclosure_marshal_VOID__LONG&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__LONG (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                               <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with with a single long integer argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--LONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--ULONG></A>
<H3>g_cclosure_marshal_VOID__ULONG&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__ULONG (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single unsigned long integer argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--ULONG.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--ENUM></A>
<H3>g_cclosure_marshal_VOID__ENUM&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__ENUM (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                               <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single argument with an enumerated type.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--ENUM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--FLAGS></A>
<H3>g_cclosure_marshal_VOID__FLAGS&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__FLAGS (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single argument with a flags types.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--FLOAT></A>
<H3>g_cclosure_marshal_VOID__FLOAT&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__FLOAT (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with one single-precision floating point argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--FLOAT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--DOUBLE></A>
<H3>g_cclosure_marshal_VOID__DOUBLE&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__DOUBLE (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                 <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with one double-precision floating point argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--DOUBLE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--STRING></A>
<H3>g_cclosure_marshal_VOID__STRING&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__STRING (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                 <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single string argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--STRING.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--PARAM></A>
<H3>g_cclosure_marshal_VOID__PARAM&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__PARAM (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single argument of type <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--PARAM.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--BOXED></A>
<H3>g_cclosure_marshal_VOID__BOXED&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__BOXED (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single argument which is any boxed pointer type.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--BOXED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--POINTER></A>
<H3>g_cclosure_marshal_VOID__POINTER&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__POINTER (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                  <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single raw pointer argument type.</P>
<P>If it is possible, it is better to use one of the more specific functions such as <A title=g_cclosure_marshal_VOID__OBJECT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--OBJECT"><CODE class=function>g_cclosure_marshal_VOID__OBJECT()</CODE></A> or <A title=g_cclosure_marshal_VOID__OBJECT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--OBJECT"><CODE class=function>g_cclosure_marshal_VOID__OBJECT()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--POINTER.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--OBJECT></A>
<H3>g_cclosure_marshal_VOID__OBJECT&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__OBJECT (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                 <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--VARIANT></A>
<H3>g_cclosure_marshal_VOID__VARIANT&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__VARIANT (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                  <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a single <A href="https://developer.gnome.org/gobject/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> argument.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--VARIANT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-STRING--OBJECT-POINTER></A>
<H3>g_cclosure_marshal_STRING__OBJECT_POINTER&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_STRING__OBJECT_POINTER
                               (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with handlers that take a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> and a pointer and produce a string. It is highly unlikely that your signal handler fits this description.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-STRING--OBJECT-POINTER.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--UINT-POINTER></A>
<H3>g_cclosure_marshal_VOID__UINT_POINTER&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__UINT_POINTER (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                       <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                       <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with a unsigned int and a pointer as arguments.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--UINT-POINTER.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-BOOLEAN--FLAGS></A>
<H3>g_cclosure_marshal_BOOLEAN__FLAGS&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_BOOLEAN__FLAGS (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                   <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with handlers that take a flags type as an argument and return a boolean. If you have such a signal, you will probably also need to use an accumulator, such as <A title=g_signal_accumulator_true_handled&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-accumulator-true-handled"><CODE class=function>g_signal_accumulator_true_handled()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-BOOLEAN--FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-BOOLEAN--BOXED-BOXED></A>
<H3>g_cclosure_marshal_BOOLEAN__BOXED_BOXED&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_BOOLEAN__BOXED_BOXED
                               (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_param_values</CODE></EM>,
                                <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *param_values</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> invocation_hint</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>);</PRE>
<P>A <A title=GClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A> function for use with signals with handlers that take two boxed pointers as arguments and return a boolean. If you have such a signal, you will probably also need to use an accumulator, such as <A title=g_signal_accumulator_true_handled&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-accumulator-true-handled"><CODE class=function>g_signal_accumulator_true_handled()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-BOOLEAN--BOXED-BOXED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-generic-va></A>
<H3>g_cclosure_marshal_generic_va&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_generic_va (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                               <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args_list</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                               <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                               <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>A generic <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> function implemented via <A class=ulink href="http://sourceware.org/libffi/" target=_top>libffi</A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-generic-va.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args_list</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args_list</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-30.html#api-index-2.30">2.30</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--VOIDv></A>
<H3>g_cclosure_marshal_VOID__VOIDv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__VOIDv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__VOID&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--VOID"><CODE class=function>g_cclosure_marshal_VOID__VOID()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--VOIDv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--BOOLEANv></A>
<H3>g_cclosure_marshal_VOID__BOOLEANv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__BOOLEANv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                   <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                   <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__BOOLEAN&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--BOOLEAN"><CODE class=function>g_cclosure_marshal_VOID__BOOLEAN()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--BOOLEANv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--CHARv></A>
<H3>g_cclosure_marshal_VOID__CHARv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__CHARv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__CHAR&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--CHAR"><CODE class=function>g_cclosure_marshal_VOID__CHAR()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--CHARv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--UCHARv></A>
<H3>g_cclosure_marshal_VOID__UCHARv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__UCHARv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__UCHAR&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UCHAR"><CODE class=function>g_cclosure_marshal_VOID__UCHAR()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--UCHARv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--INTv></A>
<H3>g_cclosure_marshal_VOID__INTv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__INTv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                               <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                               <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                               <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                               <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__INT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--INT"><CODE class=function>g_cclosure_marshal_VOID__INT()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--INTv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--UINTv></A>
<H3>g_cclosure_marshal_VOID__UINTv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__UINTv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__UINT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UINT"><CODE class=function>g_cclosure_marshal_VOID__UINT()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--UINTv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--LONGv></A>
<H3>g_cclosure_marshal_VOID__LONGv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__LONGv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__LONG&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--LONG"><CODE class=function>g_cclosure_marshal_VOID__LONG()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--LONGv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--ULONGv></A>
<H3>g_cclosure_marshal_VOID__ULONGv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__ULONGv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__ULONG&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--ULONG"><CODE class=function>g_cclosure_marshal_VOID__ULONG()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--ULONGv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--ENUMv></A>
<H3>g_cclosure_marshal_VOID__ENUMv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__ENUMv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__ENUM&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--ENUM"><CODE class=function>g_cclosure_marshal_VOID__ENUM()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--ENUMv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--FLAGSv></A>
<H3>g_cclosure_marshal_VOID__FLAGSv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__FLAGSv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__FLAGS&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--FLAGS"><CODE class=function>g_cclosure_marshal_VOID__FLAGS()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--FLAGSv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--FLOATv></A>
<H3>g_cclosure_marshal_VOID__FLOATv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__FLOATv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__FLOAT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--FLOAT"><CODE class=function>g_cclosure_marshal_VOID__FLOAT()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--FLOATv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--DOUBLEv></A>
<H3>g_cclosure_marshal_VOID__DOUBLEv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__DOUBLEv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                  <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                  <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__DOUBLE&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--DOUBLE"><CODE class=function>g_cclosure_marshal_VOID__DOUBLE()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--DOUBLEv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--STRINGv></A>
<H3>g_cclosure_marshal_VOID__STRINGv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__STRINGv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                  <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                  <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__STRING&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--STRING"><CODE class=function>g_cclosure_marshal_VOID__STRING()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--STRINGv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--PARAMv></A>
<H3>g_cclosure_marshal_VOID__PARAMv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__PARAMv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__PARAM&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--PARAM"><CODE class=function>g_cclosure_marshal_VOID__PARAM()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--PARAMv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--BOXEDv></A>
<H3>g_cclosure_marshal_VOID__BOXEDv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__BOXEDv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                 <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                 <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__BOXED&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--BOXED"><CODE class=function>g_cclosure_marshal_VOID__BOXED()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--BOXEDv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--POINTERv></A>
<H3>g_cclosure_marshal_VOID__POINTERv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__POINTERv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                   <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                   <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__POINTER&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--POINTER"><CODE class=function>g_cclosure_marshal_VOID__POINTER()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--POINTERv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--OBJECTv></A>
<H3>g_cclosure_marshal_VOID__OBJECTv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__OBJECTv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                  <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                  <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                  <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__OBJECT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--OBJECT"><CODE class=function>g_cclosure_marshal_VOID__OBJECT()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--OBJECTv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--VARIANTv></A>
<H3>g_cclosure_marshal_VOID__VARIANTv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__VARIANTv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                   <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                   <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                   <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__VARIANT&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--VARIANT"><CODE class=function>g_cclosure_marshal_VOID__VARIANT()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--VARIANTv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-STRING--OBJECT-POINTERv></A>
<H3>g_cclosure_marshal_STRING__OBJECT_POINTERv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_STRING__OBJECT_POINTERv
                               (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_STRING__OBJECT_POINTER&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-STRING--OBJECT-POINTER"><CODE class=function>g_cclosure_marshal_STRING__OBJECT_POINTER()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-STRING--OBJECT-POINTERv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-VOID--UINT-POINTERv></A>
<H3>g_cclosure_marshal_VOID__UINT_POINTERv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_VOID__UINT_POINTERv
                               (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_VOID__UINT_POINTER&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-VOID--UINT-POINTER"><CODE class=function>g_cclosure_marshal_VOID__UINT_POINTER()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-VOID--UINT-POINTERv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-BOOLEAN--FLAGSv></A>
<H3>g_cclosure_marshal_BOOLEAN__FLAGSv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_BOOLEAN__FLAGSv (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                    <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                    <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                    <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                    <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_BOOLEAN__FLAGS&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--FLAGS"><CODE class=function>g_cclosure_marshal_BOOLEAN__FLAGS()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-BOOLEAN--FLAGSv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-BOOLEAN--BOXED-BOXEDv></A>
<H3>g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv
                               (<EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>,
                                <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *return_value</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> instance</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> marshal_data</CODE></EM>,
                                <EM class=parameter><CODE><SPAN class=type>int</SPAN> n_params</CODE></EM>,
                                <EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> *param_types</CODE></EM>);</PRE>
<P>The <A title=GVaClosureMarshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GVaClosureMarshal"><SPAN class=type>GVaClosureMarshal</SPAN></A> equivalent to <A title=g_cclosure_marshal_BOOLEAN__BOXED_BOXED&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--BOXED-BOXED"><CODE class=function>g_cclosure_marshal_BOOLEAN__BOXED_BOXED()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-BOOLEAN--BOXED-BOXEDv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> to which the marshaller belongs</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of <EM class=parameter><CODE>closure</CODE></EM> doesn't return a value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>instance</P></TD>
<TD class=parameter_description>
<P>the instance on which the closure is invoked. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInstance]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>va_list of arguments to be passed to the closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_params</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>param_types</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_types</P></TD>
<TD class=parameter_description>
<P>the <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> of each argument from <EM class=parameter><CODE>args</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_params]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Closures.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GClosure></A>
<H3>struct GClosure</H3><PRE class=programlisting>struct GClosure {
  volatile       	guint	 in_marshal : 1;
  volatile       	guint	 is_invalid : 1;
};
</PRE>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> represents a callback supplied by the programmer.</P>
<DIV class=refsect3><A name=GClosure.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P>volatile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GClosure.in-marshal></A>in_marshal</CODE></EM>&nbsp;:&nbsp;1;</P></TD>
<TD class=struct_member_description>
<P>Indicates whether the closure is currently being invoked with <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P>volatile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GClosure.is-invalid></A>is_invalid</CODE></EM>&nbsp;:&nbsp;1;</P></TD>
<TD class=struct_member_description>
<P>Indicates whether the closure has been invalidated by <A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate"><CODE class=function>g_closure_invalidate()</CODE></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-CLOSURE:CAPS></A>
<H3>G_TYPE_CLOSURE</H3><PRE class=programlisting>#define G_TYPE_CLOSURE (g_closure_get_type ())
</PRE>
<P>The <A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> for <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GCClosure></A>
<H3>struct GCClosure</H3><PRE class=programlisting>struct GCClosure {
  GClosure&nbsp;closure;
  gpointer&nbsp;callback;
};
</PRE>
<P>A <A title="struct GCClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCClosure"><SPAN class=type>GCClosure</SPAN></A> is a specialization of <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> for C function callbacks.</P>
<DIV class=refsect3><A name=GCClosure.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GCClosure.closure></A>closure</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GCClosure.callback></A>callback</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the callback function</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-BOOL--FLAGS></A>
<H3>g_cclosure_marshal_BOOL__FLAGS</H3><PRE class=programlisting>#define             g_cclosure_marshal_BOOL__FLAGS</PRE>
<P>An old alias for <A title=g_cclosure_marshal_BOOLEAN__FLAGS&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--FLAGS"><CODE class=function>g_cclosure_marshal_BOOLEAN__FLAGS()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-BOOL--FLAGS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-cclosure-marshal-BOOL--BOXED-BOXED></A>
<H3>g_cclosure_marshal_BOOL__BOXED_BOXED</H3><PRE class=programlisting>#define             g_cclosure_marshal_BOOL__BOXED_BOXED</PRE>
<P>An old alias for <A title=g_cclosure_marshal_BOOLEAN__BOXED_BOXED&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-marshal-BOOLEAN--BOXED-BOXED"><CODE class=function>g_cclosure_marshal_BOOLEAN__BOXED_BOXED()</CODE></A>.</P>
<DIV class=refsect3><A name=g-cclosure-marshal-BOOL--BOXED-BOXED.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>A <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>return_value</P></TD>
<TD class=parameter_description>
<P>A <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to store the return value. May be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the callback of closure doesn't return a value.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_param_values</P></TD>
<TD class=parameter_description>
<P>The length of the <EM class=parameter><CODE>param_values</CODE></EM> array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>param_values</P></TD>
<TD class=parameter_description>
<P>An array of <A href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValues</SPAN></A> holding the arguments on which to invoke the callback of closure.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>invocation_hint</P></TD>
<TD class=parameter_description>
<P>The invocation hint given as the last argument to <A title=g_closure_invoke&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invoke"><CODE class=function>g_closure_invoke()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>marshal_data</P></TD>
<TD class=parameter_description>
<P>Additional data specified when registering the marshaller, see <A title=g_closure_set_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal"><CODE class=function>g_closure_set_marshal()</CODE></A> and <A title=g_closure_set_meta_marshal&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-meta-marshal"><CODE class=function>g_closure_set_meta_marshal()</CODE></A></P></TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28682">Topic #28682: Value arrays.. Value arrays &#38323;?A container structure to maintain an array of generic values.. .. Functions.. GValue * g_value_array_get_nth () .. GValueArray * g_value_array ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>Value arrays</SPAN></H2>
<P>Value arrays &#8212; A container structure to maintain an array of generic values</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_get_nth&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-get-nth">g_value_array_get_nth</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-new">g_value_array_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_copy&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-copy">g_value_array_copy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_value_array_free&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-free">g_value_array_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_append&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-append">g_value_array_append</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_prepend&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-prepend">g_value_array_prepend</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_insert&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-insert">g_value_array_insert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_remove&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-remove">g_value_array_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_sort&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-sort">g_value_array_sort</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_value_array_sort_with_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-sort-with-data">g_value_array_sort_with_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray">GValueArray</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.description></A>
<H2>Description</H2>
<P>The prime purpose of a <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> is for it to be used as an object property that holds an array of values. A <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> wraps an array of <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> elements in order for it to be used as a boxed type through <A title=G_TYPE_VALUE_ARRAY class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#G-TYPE-VALUE-ARRAY:CAPS"><CODE class=literal>G_TYPE_VALUE_ARRAY</CODE></A>.</P>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> is deprecated in favour of <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> since GLib 2.32. It is possible to create a <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> that behaves like a <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> by using the size of <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> as the element size, and by setting <A title=g_value_unset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-unset"><CODE class=function>g_value_unset()</CODE></A> as the clear function using <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-set-clear-func"><CODE class=function>g_array_set_clear_func()</CODE></A>, for instance, the following code:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>GValueArray <SPAN class="gtkdoc opt">*</SPAN>array <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#g-value-array-new">g_value_array_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=number>10</SPAN><SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>can be replaced by:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>GArray <SPAN class="gtkdoc opt">*</SPAN>array <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-sized-new">g_array_sized_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>FALSE<SPAN class="gtkdoc opt">,</SPAN> TRUE<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=keyword>sizeof</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GValue<SPAN class="gtkdoc opt">),</SPAN> <SPAN class=number>10</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-set-clear-func">g_array_set_clear_func</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">, (</SPAN>GDestroyNotify<SPAN class="gtkdoc opt">)</SPAN> g_value_unset<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-value-array-get-nth></A>
<H3>g_value_array_get_nth&nbsp;()</H3><PRE class=programlisting><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=returnvalue>GValue</SPAN></A>&nbsp;*
g_value_array_get_nth (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> index_</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_get_nth</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-index"><CODE class=function>g_array_index()</CODE></A> instead.</P></DIV>
<P>Return a pointer to the value at <EM class=parameter><CODE>index_</CODE></EM> containd in <EM class=parameter><CODE>value_array</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-array-get-nth.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to get a value from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>index of the value of interest</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-get-nth.returns></A>
<H4>Returns</H4>
<P>pointer to a value at <EM class=parameter><CODE>index_</CODE></EM> in <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-new></A>
<H3>g_value_array_new&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_new (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_prealloced</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_new</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-sized-new"><CODE class=function>g_array_sized_new()</CODE></A> instead.</P></DIV>
<P>Allocate and initialize a new <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A>, optionally preserve space for <EM class=parameter><CODE>n_prealloced</CODE></EM> elements. New arrays always contain 0 elements, regardless of the value of <EM class=parameter><CODE>n_prealloced</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-array-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>n_prealloced</P></TD>
<TD class=parameter_description>
<P>number of values to preallocate space for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-new.returns></A>
<H4>Returns</H4>
<P>a newly allocated <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> with 0 values</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-copy></A>
<H3>g_value_array_copy&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_copy (<EM class=parameter><CODE>const <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_copy</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-ref"><CODE class=function>g_array_ref()</CODE></A> instead.</P></DIV>
<P>Construct an exact copy of a <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> by duplicating all its contents.</P>
<DIV class=refsect3><A name=g-value-array-copy.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to copy</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-copy.returns></A>
<H4>Returns</H4>
<P>Newly allocated copy of <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-free></A>
<H3>g_value_array_free&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_value_array_free (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_free</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-unref"><CODE class=function>g_array_unref()</CODE></A> instead.</P></DIV>
<P>Free a <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> including its contents.</P>
<DIV class=refsect3><A name=g-value-array-free.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to free</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-append></A>
<H3>g_value_array_append&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_append (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                      <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_append</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-append-val"><CODE class=function>g_array_append_val()</CODE></A> instead.</P></DIV>
<P>Insert a copy of <EM class=parameter><CODE>value</CODE></EM> as last element of <EM class=parameter><CODE>value_array</CODE></EM> . If <EM class=parameter><CODE>value</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, an uninitialized value is appended.</P>
<DIV class=refsect3><A name=g-value-array-append.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to add an element to</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to copy into <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-append.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> passed in as <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-prepend></A>
<H3>g_value_array_prepend&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_prepend (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                       <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_prepend</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-prepend-val"><CODE class=function>g_array_prepend_val()</CODE></A> instead.</P></DIV>
<P>Insert a copy of <EM class=parameter><CODE>value</CODE></EM> as first element of <EM class=parameter><CODE>value_array</CODE></EM> . If <EM class=parameter><CODE>value</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, an uninitialized value is prepended.</P>
<DIV class=refsect3><A name=g-value-array-prepend.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to add an element to</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to copy into <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-prepend.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> passed in as <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-insert></A>
<H3>g_value_array_insert&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_insert (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> index_</CODE></EM>,
                      <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_insert</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-insert-val"><CODE class=function>g_array_insert_val()</CODE></A> instead.</P></DIV>
<P>Insert a copy of <EM class=parameter><CODE>value</CODE></EM> at specified position into <EM class=parameter><CODE>value_array</CODE></EM> . If <EM class=parameter><CODE>value</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, an uninitialized value is inserted.</P>
<DIV class=refsect3><A name=g-value-array-insert.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to add an element to</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>insertion position, must be &lt;= value_array-&gt;;n_values</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to copy into <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A>, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-insert.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> passed in as <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-remove></A>
<H3>g_value_array_remove&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_remove (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> index_</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_remove</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-remove-index"><CODE class=function>g_array_remove_index()</CODE></A> instead.</P></DIV>
<P>Remove the value at position <EM class=parameter><CODE>index_</CODE></EM> from <EM class=parameter><CODE>value_array</CODE></EM> .</P>
<DIV class=refsect3><A name=g-value-array-remove.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to remove an element from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>position of value to remove, which must be less than <EM class=parameter><CODE>value_array-&gt;n_values</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-remove.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> passed in as <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-sort></A>
<H3>g_value_array_sort&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_sort (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GCompareFunc"><SPAN class=type>GCompareFunc</SPAN></A> compare_func</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_sort</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-sort"><CODE class=function>g_array_sort()</CODE></A>.</P></DIV>
<P>Sort <EM class=parameter><CODE>value_array</CODE></EM> using <EM class=parameter><CODE>compare_func</CODE></EM> to compare the elements according to the semantics of <A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GCompareFunc"><SPAN class=type>GCompareFunc</SPAN></A>.</P>
<P>The current implementation uses the same sorting algorithm as standard C <CODE class=function>qsort()</CODE> function.</P>
<DIV class=refsect3><A name=g-value-array-sort.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to sort</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>function to compare elements. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="The callback is valid only during the call to the method."><SPAN class=acronym>scope call</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-sort.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> passed in as <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-value-array-sort-with-data></A>
<H3>g_value_array_sort_with_data&nbsp;()</H3><PRE class=programlisting><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=returnvalue>GValueArray</SPAN></A>&nbsp;*
g_value_array_sort_with_data (<EM class=parameter><CODE><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> *value_array</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> compare_func</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_value_array_sort_with_data</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>Use <A href="https://developer.gnome.org/gobject/glib-Arrays.html#GArray"><SPAN class=type>GArray</SPAN></A> and <A href="https://developer.gnome.org/gobject/glib-Arrays.html#g-array-sort-with-data"><CODE class=function>g_array_sort_with_data()</CODE></A>.</P></DIV>
<P>Sort <EM class=parameter><CODE>value_array</CODE></EM> using <EM class=parameter><CODE>compare_func</CODE></EM> to compare the elements according to the semantics of <A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A>.</P>
<P>The current implementation uses the same sorting algorithm as standard C <CODE class=function>qsort()</CODE> function.</P>
<P><SPAN class=annotation>[<ACRONYM title="Rename the original symbol's name to SYMBOL."><SPAN class=acronym>rename-to</SPAN></ACRONYM> g_value_array_sort]</SPAN></P>
<DIV class=refsect3><A name=g-value-array-sort-with-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value_array</P></TD>
<TD class=parameter_description>
<P><A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> to sort</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>function to compare elements. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="The callback is valid only during the call to the method."><SPAN class=acronym>scope call</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>extra data argument provided for <EM class=parameter><CODE>compare_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="This parameter is a 'user_data', for callbacks; many bindings can pass NULL here."><SPAN class=acronym>closure</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-value-array-sort-with-data.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> passed in as <EM class=parameter><CODE>value_array</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GValueArray></A>
<H3>struct GValueArray</H3><PRE class=programlisting>struct GValueArray {
  guint   n_values;
  GValue *values;
};
</PRE>
<P>A <A title="struct GValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Value-arrays.html#GValueArray"><SPAN class=type>GValueArray</SPAN></A> contains an array of <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> elements.</P>
<DIV class=refsect3><A name=GValueArray.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GValueArray.n-values></A>n_values</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>number of values contained in the array</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GValueArray.values></A>values</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>array of values</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=gobject-Value-arrays.see-also></A>
<H2>See Also</H2>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, <A title="struct GParamSpecValueArray" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecValueArray"><SPAN class=type>GParamSpecValueArray</SPAN></A>, <A title=g_param_spec_value_array&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-value-array"><CODE class=function>g_param_spec_value_array()</CODE></A></P></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="28683">Topic #28683: GBinding.. GBinding &#38323;?Bind two object properties.. .. Functions.. GObject * g_binding_get_source () .. const gchar * g_binding_get_source_property () .. GObject * g_binding_get ...</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>GBinding</SPAN></H2>
<P>GBinding &#8212; Bind two object properties</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=GBinding.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_binding_get_source&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-get-source">g_binding_get_source</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_binding_get_source_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-get-source-property">g_binding_get_source_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_binding_get_target&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-get-target">g_binding_get_target</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_binding_get_target_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-get-target-property">g_binding_get_target_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=returnvalue>GBindingFlags</SPAN></A> </TD>
<TD class=function_name><A title=g_binding_get_flags&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-get-flags">g_binding_get_flags</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_binding_unbind&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-unbind">g_binding_unbind</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=returnvalue>GBinding</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_bind_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property">g_object_bind_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GBindingTransformFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingTransformFunc">*GBindingTransformFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=returnvalue>GBinding</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_bind_property_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-full">g_object_bind_property_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=returnvalue>GBinding</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_bind_property_with_closures&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-with-closures">g_object_bind_property_with_closures</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GBinding.properties></A>
<H2>Properties</H2>
<DIV class=informaltable>
<TABLE class=informaltable border=0>
<COLGROUP>
<COL class=properties_type width=150>
<COL class=properties_name width=300>
<COL class=properties_flags width=200></COLGROUP>
<TBODY>
<TR>
<TD class=property_type><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=type>GBindingFlags</SPAN></A></TD>
<TD class=property_name><A title="The &#8220;flags&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--flags">flags</A></TD>
<TD class=property_flags>Read / Write / Construct Only</TD></TR>
<TR>
<TD class=property_type><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>&nbsp;*</TD>
<TD class=property_name><A title="The &#8220;source&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--source">source</A></TD>
<TD class=property_flags>Read / Write / Construct Only</TD></TR>
<TR>
<TD class=property_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*</TD>
<TD class=property_name><A title="The &#8220;source-property&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--source-property">source-property</A></TD>
<TD class=property_flags>Read / Write / Construct Only</TD></TR>
<TR>
<TD class=property_type><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>&nbsp;*</TD>
<TD class=property_name><A title="The &#8220;target&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--target">target</A></TD>
<TD class=property_flags>Read / Write / Construct Only</TD></TR>
<TR>
<TD class=property_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*</TD>
<TD class=property_name><A title="The &#8220;target-property&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--target-property">target-property</A></TD>
<TD class=property_flags>Read / Write / Construct Only</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GBinding.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding-struct">GBinding</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags">GBindingFlags</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=GBinding.object-hierarchy></A>
<H2>Object Hierarchy</H2><PRE class=screen>    <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject">GObject</A>
    <SPAN class=lineart>&#9584;&#9472;&#9472;</SPAN> GBinding
</PRE></DIV>
<DIV class=refsect1><A name=GBinding.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=GBinding.description></A>
<H2>Description</H2>
<P><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> is the representation of a binding between a property on a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance (or source) and another property on another <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance (or target). Whenever the source property changes, the same value is applied to the target property; for instance, the following binding:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property">g_object_bind_property</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object1<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"property-a"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                        object2<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"property-b"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                        G_BINDING_DEFAULT<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>will cause the property named "property-b" of <EM class=parameter><CODE>object2</CODE></EM> to be updated every time <A title=g_object_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set"><CODE class=function>g_object_set()</CODE></A> or the specific accessor changes the value of the property "property-a" of <EM class=parameter><CODE>object1</CODE></EM> .</P>
<P>It is possible to create a bidirectional binding between two properties of two <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instances, so that if either property changes, the other is updated as well, for instance:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property">g_object_bind_property</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object1<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"property-a"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                        object2<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"property-b"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                        G_BINDING_BIDIRECTIONAL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>will keep the two properties in sync.</P>
<P>It is also possible to set a custom transformation function (in both directions, in case of a bidirectional binding) to apply a custom transformation from the source value to the target value before applying it; for instance, the following binding:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-full">g_object_bind_property_full</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>adjustment1<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"value"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                             adjustment2<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"value"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                             G_BINDING_BIDIRECTIONAL<SPAN class="gtkdoc opt">,</SPAN>
                             celsius_to_fahrenheit<SPAN class="gtkdoc opt">,</SPAN>
                             fahrenheit_to_celsius<SPAN class="gtkdoc opt">,</SPAN>
                             NULL<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>will keep the "value" property of the two adjustments in sync; the <EM class=parameter><CODE>celsius_to_fahrenheit</CODE></EM> function will be called whenever the "value" property of <EM class=parameter><CODE>adjustment1</CODE></EM> changes and will transform the current value of the property before applying it to the "value" property of <EM class=parameter><CODE>adjustment2</CODE></EM> .</P>
<P>Vice versa, the <EM class=parameter><CODE>fahrenheit_to_celsius</CODE></EM> function will be called whenever the "value" property of <EM class=parameter><CODE>adjustment2</CODE></EM> changes, and will transform the current value of the property before applying it to the "value" property of <EM class=parameter><CODE>adjustment1</CODE></EM> .</P>
<P>Note that <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> does not resolve cycles by itself; a cycle like</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>object1<SPAN class="gtkdoc opt">:</SPAN>propertyA <SPAN class="gtkdoc opt">-&gt;</SPAN> object2<SPAN class="gtkdoc opt">:</SPAN>propertyB
object2<SPAN class="gtkdoc opt">:</SPAN>propertyB <SPAN class="gtkdoc opt">-&gt;</SPAN> object3<SPAN class="gtkdoc opt">:</SPAN>propertyC
object3<SPAN class="gtkdoc opt">:</SPAN>propertyC <SPAN class="gtkdoc opt">-&gt;</SPAN> object1<SPAN class="gtkdoc opt">:</SPAN>propertyA</PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>might lead to an infinite loop. The loop, in this particular case, can be avoided if the objects emit the <A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify"><SPAN class=type>&#8220;notify&#8221;</SPAN></A> signal only if the value has effectively been changed. A binding is implemented using the <A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify"><SPAN class=type>&#8220;notify&#8221;</SPAN></A> signal, so it is susceptible to all the various ways of blocking a signal emission, like <A title=g_signal_stop_emission&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-stop-emission"><CODE class=function>g_signal_stop_emission()</CODE></A> or <A title=g_signal_handler_block&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-handler-block"><CODE class=function>g_signal_handler_block()</CODE></A>.</P>
<P>A binding will be severed, and the resources it allocates freed, whenever either one of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instances it refers to are finalized, or when the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance loses its last reference.</P>
<P>Bindings for languages with garbage collection can use <A title=g_binding_unbind&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-unbind"><CODE class=function>g_binding_unbind()</CODE></A> to explicitly release a binding between the source and target properties, instead of relying on the last reference on the binding, source, and target instances to drop.</P>
<P><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> is available since GObject 2.26</P></DIV>
<DIV class=refsect1><A name=GBinding.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-binding-get-source></A>
<H3>g_binding_get_source&nbsp;()</H3><PRE class=programlisting><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;*
g_binding_get_source (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>);</PRE>
<P>Retrieves the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance used as the source of the binding.</P>
<DIV class=refsect3><A name=g-binding-get-source.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-binding-get-source.returns></A>
<H4>Returns</H4>
<P>the source <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-binding-get-source-property></A>
<H3>g_binding_get_source_property&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_binding_get_source_property (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>);</PRE>
<P>Retrieves the name of the property of <A title="The &#8220;source&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--source"><SPAN class=type>&#8220;source&#8221;</SPAN></A> used as the source of the binding.</P>
<DIV class=refsect3><A name=g-binding-get-source-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-binding-get-source-property.returns></A>
<H4>Returns</H4>
<P>the name of the source property</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-binding-get-target></A>
<H3>g_binding_get_target&nbsp;()</H3><PRE class=programlisting><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;*
g_binding_get_target (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>);</PRE>
<P>Retrieves the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance used as the target of the binding.</P>
<DIV class=refsect3><A name=g-binding-get-target.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-binding-get-target.returns></A>
<H4>Returns</H4>
<P>the target <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-binding-get-target-property></A>
<H3>g_binding_get_target_property&nbsp;()</H3><PRE class=programlisting>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_binding_get_target_property (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>);</PRE>
<P>Retrieves the name of the property of <A title="The &#8220;target&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--target"><SPAN class=type>&#8220;target&#8221;</SPAN></A> used as the target of the binding.</P>
<DIV class=refsect3><A name=g-binding-get-target-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-binding-get-target-property.returns></A>
<H4>Returns</H4>
<P>the name of the target property</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-binding-get-flags></A>
<H3>g_binding_get_flags&nbsp;()</H3><PRE class=programlisting><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=returnvalue>GBindingFlags</SPAN></A>
g_binding_get_flags (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>);</PRE>
<P>Retrieves the flags passed when constructing the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A>.</P>
<DIV class=refsect3><A name=g-binding-get-flags.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-binding-get-flags.returns></A>
<H4>Returns</H4>
<P>the <A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=type>GBindingFlags</SPAN></A> used by the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-binding-unbind></A>
<H3>g_binding_unbind&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_binding_unbind (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>);</PRE>
<P>Explicitly releases the binding between the source and the target property expressed by <EM class=parameter><CODE>binding</CODE></EM> .</P>
<P>This function will release the reference that is being held on the <EM class=parameter><CODE>binding</CODE></EM> instance; if you want to hold on to the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance after calling <A title=g_binding_unbind&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-binding-unbind"><CODE class=function>g_binding_unbind()</CODE></A>, you will need to hold a reference to it.</P>
<DIV class=refsect3><A name=g-binding-unbind.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-38.html#api-index-2.38">2.38</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-bind-property></A>
<H3>g_object_bind_property&nbsp;()</H3><PRE class=programlisting><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=returnvalue>GBinding</SPAN></A>&nbsp;*
g_object_bind_property (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> source</CODE></EM>,
                        <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *source_property</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> target</CODE></EM>,
                        <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *target_property</CODE></EM>,
                        <EM class=parameter><CODE><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=type>GBindingFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Creates a binding between <EM class=parameter><CODE>source_property</CODE></EM> on <EM class=parameter><CODE>source</CODE></EM> and <EM class=parameter><CODE>target_property</CODE></EM> on <EM class=parameter><CODE>target</CODE></EM> . Whenever the <EM class=parameter><CODE>source_property</CODE></EM> is changed the <EM class=parameter><CODE>target_property</CODE></EM> is updated using the same value. For instance:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property">g_object_bind_property</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>action<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"active"</SPAN><SPAN class="gtkdoc opt">,</SPAN> widget<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"sensitive"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Will result in the "sensitive" property of the widget <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance to be updated with the same value of the "active" property of the action <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance.</P>
<P>If <EM class=parameter><CODE>flags</CODE></EM> contains <A class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#G-BINDING-BIDIRECTIONAL:CAPS"><CODE class=literal>G_BINDING_BIDIRECTIONAL</CODE></A> then the binding will be mutual: if <EM class=parameter><CODE>target_property</CODE></EM> on <EM class=parameter><CODE>target</CODE></EM> changes then the <EM class=parameter><CODE>source_property</CODE></EM> on <EM class=parameter><CODE>source</CODE></EM> will be updated as well.</P>
<P>The binding will automatically be removed when either the <EM class=parameter><CODE>source</CODE></EM> or the <EM class=parameter><CODE>target</CODE></EM> instances are finalized. To remove the binding without affecting the <EM class=parameter><CODE>source</CODE></EM> and the <EM class=parameter><CODE>target</CODE></EM> you can just call <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> on the returned <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance.</P>
<P>A <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> can have multiple bindings.</P>
<DIV class=refsect3><A name=g-object-bind-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>source_property</P></TD>
<TD class=parameter_description>
<P>the property on <EM class=parameter><CODE>source</CODE></EM> to bind</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>target</P></TD>
<TD class=parameter_description>
<P>the target <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>target_property</P></TD>
<TD class=parameter_description>
<P>the property on <EM class=parameter><CODE>target</CODE></EM> to bind</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags to pass to <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-bind-property.returns></A>
<H4>Returns</H4>
<P>the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance representing the binding between the two <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instances. The binding is released whenever the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> reference count reaches zero. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GBindingTransformFunc></A>
<H3>GBindingTransformFunc&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GBindingTransformFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> *binding</CODE></EM>,
                          <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *from_value</CODE></EM>,
                          <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *to_value</CODE></EM>,
                          <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>A function to be called to transform <EM class=parameter><CODE>from_value</CODE></EM> to <EM class=parameter><CODE>to_value</CODE></EM> . If this is the <EM class=parameter><CODE>transform_to</CODE></EM> function of a binding, then <EM class=parameter><CODE>from_value</CODE></EM> is the <EM class=parameter><CODE>source_property</CODE></EM> on the <EM class=parameter><CODE>source</CODE></EM> object, and <EM class=parameter><CODE>to_value</CODE></EM> is the <EM class=parameter><CODE>target_property</CODE></EM> on the <EM class=parameter><CODE>target</CODE></EM> object. If this is the <EM class=parameter><CODE>transform_from</CODE></EM> function of a <A class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#G-BINDING-BIDIRECTIONAL:CAPS"><CODE class=literal>G_BINDING_BIDIRECTIONAL</CODE></A> binding, then those roles are reversed.</P>
<DIV class=refsect3><A name=GBindingTransformFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>binding</P></TD>
<TD class=parameter_description>
<P>a <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>from_value</P></TD>
<TD class=parameter_description>
<P>the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> containing the value to transform</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>to_value</P></TD>
<TD class=parameter_description>
<P>the <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> in which to store the transformed value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data passed to the transform function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=GBindingTransformFunc.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the transformation was successful, and <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-bind-property-full></A>
<H3>g_object_bind_property_full&nbsp;()</H3><PRE class=programlisting><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=returnvalue>GBinding</SPAN></A>&nbsp;*
g_object_bind_property_full (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> source</CODE></EM>,
                             <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *source_property</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> target</CODE></EM>,
                             <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *target_property</CODE></EM>,
                             <EM class=parameter><CODE><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=type>GBindingFlags</SPAN></A> flags</CODE></EM>,
                             <EM class=parameter><CODE><A title=GBindingTransformFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingTransformFunc"><SPAN class=type>GBindingTransformFunc</SPAN></A> transform_to</CODE></EM>,
                             <EM class=parameter><CODE><A title=GBindingTransformFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingTransformFunc"><SPAN class=type>GBindingTransformFunc</SPAN></A> transform_from</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>,
                             <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Complete version of <A title=g_object_bind_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property"><CODE class=function>g_object_bind_property()</CODE></A>.</P>
<P>Creates a binding between <EM class=parameter><CODE>source_property</CODE></EM> on <EM class=parameter><CODE>source</CODE></EM> and <EM class=parameter><CODE>target_property</CODE></EM> on <EM class=parameter><CODE>target</CODE></EM> , allowing you to set the transformation functions to be used by the binding.</P>
<P>If <EM class=parameter><CODE>flags</CODE></EM> contains <A class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#G-BINDING-BIDIRECTIONAL:CAPS"><CODE class=literal>G_BINDING_BIDIRECTIONAL</CODE></A> then the binding will be mutual: if <EM class=parameter><CODE>target_property</CODE></EM> on <EM class=parameter><CODE>target</CODE></EM> changes then the <EM class=parameter><CODE>source_property</CODE></EM> on <EM class=parameter><CODE>source</CODE></EM> will be updated as well. The <EM class=parameter><CODE>transform_from</CODE></EM> function is only used in case of bidirectional bindings, otherwise it will be ignored</P>
<P>The binding will automatically be removed when either the <EM class=parameter><CODE>source</CODE></EM> or the <EM class=parameter><CODE>target</CODE></EM> instances are finalized. To remove the binding without affecting the <EM class=parameter><CODE>source</CODE></EM> and the <EM class=parameter><CODE>target</CODE></EM> you can just call <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> on the returned <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance.</P>
<P>A <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> can have multiple bindings.</P>
<P>The same <EM class=parameter><CODE>user_data</CODE></EM> parameter will be used for both <EM class=parameter><CODE>transform_to</CODE></EM> and <EM class=parameter><CODE>transform_from</CODE></EM> transformation functions; the <EM class=parameter><CODE>notify</CODE></EM> function will be called once, when the binding is removed. If you need different data for each transformation function, please use <A title=g_object_bind_property_with_closures&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-with-closures"><CODE class=function>g_object_bind_property_with_closures()</CODE></A> instead.</P>
<DIV class=refsect3><A name=g-object-bind-property-full.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>source_property</P></TD>
<TD class=parameter_description>
<P>the property on <EM class=parameter><CODE>source</CODE></EM> to bind</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>target</P></TD>
<TD class=parameter_description>
<P>the target <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>target_property</P></TD>
<TD class=parameter_description>
<P>the property on <EM class=parameter><CODE>target</CODE></EM> to bind</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags to pass to <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>transform_to</P></TD>
<TD class=parameter_description>
<P>the transformation function from the <EM class=parameter><CODE>source</CODE></EM> to the <EM class=parameter><CODE>target</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to use the default. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="The callback is valid until the GDestroyNotify argument is called."><SPAN class=acronym>scope notified</SPAN></ACRONYM>][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>transform_from</P></TD>
<TD class=parameter_description>
<P>the transformation function from the <EM class=parameter><CODE>target</CODE></EM> to the <EM class=parameter><CODE>source</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to use the default. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="The callback is valid until the GDestroyNotify argument is called."><SPAN class=acronym>scope notified</SPAN></ACRONYM>][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>custom data to be passed to the transformation functions, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>function to be called when disposing the binding, to free the resources used by the transformation functions</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-bind-property-full.returns></A>
<H4>Returns</H4>
<P>the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance representing the binding between the two <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instances. The binding is released whenever the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> reference count reaches zero. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-bind-property-with-closures></A>
<H3>g_object_bind_property_with_closures&nbsp;()</H3><PRE class=programlisting><A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=returnvalue>GBinding</SPAN></A>&nbsp;*
g_object_bind_property_with_closures (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> source</CODE></EM>,
                                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *source_property</CODE></EM>,
                                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> target</CODE></EM>,
                                      <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *target_property</CODE></EM>,
                                      <EM class=parameter><CODE><A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=type>GBindingFlags</SPAN></A> flags</CODE></EM>,
                                      <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *transform_to</CODE></EM>,
                                      <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *transform_from</CODE></EM>);</PRE>
<P>Creates a binding between <EM class=parameter><CODE>source_property</CODE></EM> on <EM class=parameter><CODE>source</CODE></EM> and <EM class=parameter><CODE>target_property</CODE></EM> on <EM class=parameter><CODE>target</CODE></EM> , allowing you to set the transformation functions to be used by the binding.</P>
<P>This function is the language bindings friendly version of <A title=g_object_bind_property_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-full"><CODE class=function>g_object_bind_property_full()</CODE></A>, using <A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosures</SPAN></A> instead of function pointers.</P>
<P><SPAN class=annotation>[<ACRONYM title="Rename the original symbol's name to SYMBOL."><SPAN class=acronym>rename-to</SPAN></ACRONYM> g_object_bind_property_full]</SPAN></P>
<DIV class=refsect3><A name=g-object-bind-property-with-closures.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>source_property</P></TD>
<TD class=parameter_description>
<P>the property on <EM class=parameter><CODE>source</CODE></EM> to bind</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>target</P></TD>
<TD class=parameter_description>
<P>the target <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>target_property</P></TD>
<TD class=parameter_description>
<P>the property on <EM class=parameter><CODE>target</CODE></EM> to bind</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>flags to pass to <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>transform_to</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> wrapping the transformation function from the <EM class=parameter><CODE>source</CODE></EM> to the <EM class=parameter><CODE>target</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to use the default</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>transform_from</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> wrapping the transformation function from the <EM class=parameter><CODE>target</CODE></EM> to the <EM class=parameter><CODE>source</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to use the default</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-bind-property-with-closures.returns></A>
<H4>Returns</H4>
<P>the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> instance representing the binding between the two <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instances. The binding is released whenever the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A> reference count reaches zero. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV></DIV>
<DIV class=refsect1><A name=GBinding.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GBinding-struct></A>
<H3>GBinding</H3><PRE class=programlisting>typedef struct _GBinding GBinding;</PRE>
<P>GBinding is an opaque structure whose members cannot be accessed directly.</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GBindingFlags></A>
<H3>enum GBindingFlags</H3>
<P>Flags to be passed to <A title=g_object_bind_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property"><CODE class=function>g_object_bind_property()</CODE></A> or <A title=g_object_bind_property_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-full"><CODE class=function>g_object_bind_property_full()</CODE></A>.</P>
<P>This enumeration can be extended at later date.</P>
<DIV class=refsect3><A name=GBindingFlags.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=enum_members_name width=300>
<COL class=enum_members_description>
<COL class=enum_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-BINDING-DEFAULT:CAPS></A>G_BINDING_DEFAULT</P></TD>
<TD class=enum_member_description>
<P>The default binding; if the source property changes, the target property is updated with its value.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-BINDING-BIDIRECTIONAL:CAPS></A>G_BINDING_BIDIRECTIONAL</P></TD>
<TD class=enum_member_description>
<P>Bidirectional binding; if either the property of the source or the property of the target changes, the other is updated.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-BINDING-SYNC-CREATE:CAPS></A>G_BINDING_SYNC_CREATE</P></TD>
<TD class=enum_member_description>
<P>Synchronize the values of the source and target properties when creating the binding; the direction of the synchronization is always from the source to the target.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-BINDING-INVERT-BOOLEAN:CAPS></A>G_BINDING_INVERT_BOOLEAN</P></TD>
<TD class=enum_member_description>
<P>If the two properties being bound are booleans, setting one to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> will result in the other being set to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> and vice versa. This flag will only work for boolean properties, and cannot be used when passing custom transformation functions to <A title=g_object_bind_property_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#g-object-bind-property-full"><CODE class=function>g_object_bind_property_full()</CODE></A>.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV></DIV>
<DIV class=refsect1><A name=GBinding.property-details></A>
<H2>Property Details</H2>
<DIV class=refsect2><A name=GBinding--flags></A>
<H3>The <CODE class=literal>&#8220;flags&#8221;</CODE> property</H3><PRE class=programlisting>  &#8220;flags&#8221;                    <A title="enum GBindingFlags" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBindingFlags"><SPAN class=type>GBindingFlags</SPAN></A></PRE>
<P>Flags to be used to control the <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html"><SPAN class=type>GBinding</SPAN></A></P>
<P>Flags: Read / Write / Construct Only</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GBinding--source></A>
<H3>The <CODE class=literal>&#8220;source&#8221;</CODE> property</H3><PRE class=programlisting>  &#8220;source&#8221;                   <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>&nbsp;*</PRE>
<P>The <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> that should be used as the source of the binding</P>
<P>Flags: Read / Write / Construct Only</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GBinding--source-property></A>
<H3>The <CODE class=literal>&#8220;source-property&#8221;</CODE> property</H3><PRE class=programlisting>  &#8220;source-property&#8221;          <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*</PRE>
<P>The name of the property of <A title="The &#8220;source&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--source"><SPAN class=type>&#8220;source&#8221;</SPAN></A> that should be used as the source of the binding</P>
<P>Flags: Read / Write / Construct Only</P>
<P>Default value: NULL</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GBinding--target></A>
<H3>The <CODE class=literal>&#8220;target&#8221;</CODE> property</H3><PRE class=programlisting>  &#8220;target&#8221;                   <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>&nbsp;*</PRE>
<P>The <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> that should be used as the target of the binding</P>
<P>Flags: Read / Write / Construct Only</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GBinding--target-property></A>
<H3>The <CODE class=literal>&#8220;target-property&#8221;</CODE> property</H3><PRE class=programlisting>  &#8220;target-property&#8221;          <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*</PRE>
<P>The name of the property of <A title="The &#8220;target&#8221; property" class=link href="https://developer.gnome.org/gobject/stable/GBinding.html#GBinding--target"><SPAN class=type>&#8220;target&#8221;</SPAN></A> that should be used as the target of the binding</P>
<P>Flags: Read / Write / Construct Only</P>
<P>Default value: NULL</P>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV></DIV>
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://www.supermemo.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.supermemo.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<a href="http://www.supermemo.com">www.supermemo.com</a><br>
date: 2017/4/11 17:57:00<br>
Page generated with:<br> SuperMemo 2008<br>Build: 14.04 of Feb 18, 2010
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
